ARM GAS  /tmp/cc4dKHc8.s 			page 1


   1              		.cpu cortex-m33
   2              		.arch armv8-m.main
   3              		.fpu fpv4-sp-d16
   4              		.arch_extension dsp
   5              		.eabi_attribute 27, 1
   6              		.eabi_attribute 28, 1
   7              		.eabi_attribute 20, 1
   8              		.eabi_attribute 21, 1
   9              		.eabi_attribute 23, 3
  10              		.eabi_attribute 24, 1
  11              		.eabi_attribute 25, 1
  12              		.eabi_attribute 26, 1
  13              		.eabi_attribute 30, 1
  14              		.eabi_attribute 34, 1
  15              		.eabi_attribute 18, 4
  16              		.file	"stm32l5xx_it.c"
  17              		.text
  18              	.Ltext0:
  19              		.cfi_sections	.debug_frame
  20              		.file 1 "Core/Src/stm32l5xx_it.c"
  21              		.section	.text.NMI_Handler,"ax",%progbits
  22              		.align	1
  23              		.global	NMI_Handler
  24              		.syntax unified
  25              		.thumb
  26              		.thumb_func
  28              	NMI_Handler:
  29              	.LFB156:
   1:Core/Src/stm32l5xx_it.c **** /* USER CODE BEGIN Header */
   2:Core/Src/stm32l5xx_it.c **** /**
   3:Core/Src/stm32l5xx_it.c ****   ******************************************************************************
   4:Core/Src/stm32l5xx_it.c ****   * @file    stm32l5xx_it.c
   5:Core/Src/stm32l5xx_it.c ****   * @brief   Interrupt Service Routines.
   6:Core/Src/stm32l5xx_it.c ****   ******************************************************************************
   7:Core/Src/stm32l5xx_it.c ****   * @attention
   8:Core/Src/stm32l5xx_it.c ****   *
   9:Core/Src/stm32l5xx_it.c ****   * Copyright (c) 2023 STMicroelectronics.
  10:Core/Src/stm32l5xx_it.c ****   * All rights reserved.
  11:Core/Src/stm32l5xx_it.c ****   *
  12:Core/Src/stm32l5xx_it.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/stm32l5xx_it.c ****   * in the root directory of this software component.
  14:Core/Src/stm32l5xx_it.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/stm32l5xx_it.c ****   *
  16:Core/Src/stm32l5xx_it.c ****   ******************************************************************************
  17:Core/Src/stm32l5xx_it.c ****   */
  18:Core/Src/stm32l5xx_it.c **** /* USER CODE END Header */
  19:Core/Src/stm32l5xx_it.c **** 
  20:Core/Src/stm32l5xx_it.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/stm32l5xx_it.c **** #include "main.h"
  22:Core/Src/stm32l5xx_it.c **** #include "stm32l5xx_it.h"
  23:Core/Src/stm32l5xx_it.c **** /* Private includes ----------------------------------------------------------*/
  24:Core/Src/stm32l5xx_it.c **** /* USER CODE BEGIN Includes */
  25:Core/Src/stm32l5xx_it.c **** /* USER CODE END Includes */
  26:Core/Src/stm32l5xx_it.c **** 
  27:Core/Src/stm32l5xx_it.c **** /* Private typedef -----------------------------------------------------------*/
  28:Core/Src/stm32l5xx_it.c **** /* USER CODE BEGIN TD */
  29:Core/Src/stm32l5xx_it.c **** 
ARM GAS  /tmp/cc4dKHc8.s 			page 2


  30:Core/Src/stm32l5xx_it.c **** /* USER CODE END TD */
  31:Core/Src/stm32l5xx_it.c **** 
  32:Core/Src/stm32l5xx_it.c **** /* Private define ------------------------------------------------------------*/
  33:Core/Src/stm32l5xx_it.c **** /* USER CODE BEGIN PD */
  34:Core/Src/stm32l5xx_it.c **** 
  35:Core/Src/stm32l5xx_it.c **** /* USER CODE END PD */
  36:Core/Src/stm32l5xx_it.c **** 
  37:Core/Src/stm32l5xx_it.c **** /* Private macro -------------------------------------------------------------*/
  38:Core/Src/stm32l5xx_it.c **** /* USER CODE BEGIN PM */
  39:Core/Src/stm32l5xx_it.c **** 
  40:Core/Src/stm32l5xx_it.c **** /* USER CODE END PM */
  41:Core/Src/stm32l5xx_it.c **** 
  42:Core/Src/stm32l5xx_it.c **** /* Private variables ---------------------------------------------------------*/
  43:Core/Src/stm32l5xx_it.c **** /* USER CODE BEGIN PV */
  44:Core/Src/stm32l5xx_it.c **** 
  45:Core/Src/stm32l5xx_it.c **** /* USER CODE END PV */
  46:Core/Src/stm32l5xx_it.c **** 
  47:Core/Src/stm32l5xx_it.c **** /* Private function prototypes -----------------------------------------------*/
  48:Core/Src/stm32l5xx_it.c **** /* USER CODE BEGIN PFP */
  49:Core/Src/stm32l5xx_it.c **** 
  50:Core/Src/stm32l5xx_it.c **** /* USER CODE END PFP */
  51:Core/Src/stm32l5xx_it.c **** 
  52:Core/Src/stm32l5xx_it.c **** /* Private user code ---------------------------------------------------------*/
  53:Core/Src/stm32l5xx_it.c **** /* USER CODE BEGIN 0 */
  54:Core/Src/stm32l5xx_it.c **** 
  55:Core/Src/stm32l5xx_it.c **** /* USER CODE END 0 */
  56:Core/Src/stm32l5xx_it.c **** 
  57:Core/Src/stm32l5xx_it.c **** /* External variables --------------------------------------------------------*/
  58:Core/Src/stm32l5xx_it.c **** extern PCD_HandleTypeDef hpcd_USB_FS;
  59:Core/Src/stm32l5xx_it.c **** /* USER CODE BEGIN EV */
  60:Core/Src/stm32l5xx_it.c **** 
  61:Core/Src/stm32l5xx_it.c **** /* USER CODE END EV */
  62:Core/Src/stm32l5xx_it.c **** 
  63:Core/Src/stm32l5xx_it.c **** /******************************************************************************/
  64:Core/Src/stm32l5xx_it.c **** /*           Cortex Processor Interruption and Exception Handlers          */
  65:Core/Src/stm32l5xx_it.c **** /******************************************************************************/
  66:Core/Src/stm32l5xx_it.c **** /**
  67:Core/Src/stm32l5xx_it.c ****   * @brief This function handles Non maskable interrupt.
  68:Core/Src/stm32l5xx_it.c ****   */
  69:Core/Src/stm32l5xx_it.c **** void NMI_Handler(void)
  70:Core/Src/stm32l5xx_it.c **** {
  30              		.loc 1 70 1 view -0
  31              		.cfi_startproc
  32              		@ Volatile: function does not return.
  33              		@ args = 0, pretend = 0, frame = 0
  34              		@ frame_needed = 0, uses_anonymous_args = 0
  35              		@ link register save eliminated.
  36              	.L2:
  71:Core/Src/stm32l5xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 0 */
  72:Core/Src/stm32l5xx_it.c **** 
  73:Core/Src/stm32l5xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 0 */
  74:Core/Src/stm32l5xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  75:Core/Src/stm32l5xx_it.c ****   while (1)
  37              		.loc 1 75 3 discriminator 1 view .LVU1
  76:Core/Src/stm32l5xx_it.c ****   {
  77:Core/Src/stm32l5xx_it.c ****   }
  38              		.loc 1 77 3 discriminator 1 view .LVU2
ARM GAS  /tmp/cc4dKHc8.s 			page 3


  75:Core/Src/stm32l5xx_it.c ****   {
  39              		.loc 1 75 9 discriminator 1 view .LVU3
  40 0000 FEE7     		b	.L2
  41              		.cfi_endproc
  42              	.LFE156:
  44              		.section	.text.HardFault_Handler,"ax",%progbits
  45              		.align	1
  46              		.global	HardFault_Handler
  47              		.syntax unified
  48              		.thumb
  49              		.thumb_func
  51              	HardFault_Handler:
  52              	.LFB157:
  78:Core/Src/stm32l5xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 1 */
  79:Core/Src/stm32l5xx_it.c **** }
  80:Core/Src/stm32l5xx_it.c **** 
  81:Core/Src/stm32l5xx_it.c **** /**
  82:Core/Src/stm32l5xx_it.c ****   * @brief This function handles Hard fault interrupt.
  83:Core/Src/stm32l5xx_it.c ****   */
  84:Core/Src/stm32l5xx_it.c **** void HardFault_Handler(void)
  85:Core/Src/stm32l5xx_it.c **** {
  53              		.loc 1 85 1 view -0
  54              		.cfi_startproc
  55              		@ Volatile: function does not return.
  56              		@ args = 0, pretend = 0, frame = 0
  57              		@ frame_needed = 0, uses_anonymous_args = 0
  58              		@ link register save eliminated.
  59              	.L4:
  86:Core/Src/stm32l5xx_it.c ****   /* USER CODE BEGIN HardFault_IRQn 0 */
  87:Core/Src/stm32l5xx_it.c **** 
  88:Core/Src/stm32l5xx_it.c ****   /* USER CODE END HardFault_IRQn 0 */
  89:Core/Src/stm32l5xx_it.c ****   while (1)
  60              		.loc 1 89 3 discriminator 1 view .LVU5
  90:Core/Src/stm32l5xx_it.c ****   {
  91:Core/Src/stm32l5xx_it.c ****     /* USER CODE BEGIN W1_HardFault_IRQn 0 */
  92:Core/Src/stm32l5xx_it.c ****     /* USER CODE END W1_HardFault_IRQn 0 */
  93:Core/Src/stm32l5xx_it.c ****   }
  61              		.loc 1 93 3 discriminator 1 view .LVU6
  89:Core/Src/stm32l5xx_it.c ****   {
  62              		.loc 1 89 9 discriminator 1 view .LVU7
  63 0000 FEE7     		b	.L4
  64              		.cfi_endproc
  65              	.LFE157:
  67              		.section	.text.MemManage_Handler,"ax",%progbits
  68              		.align	1
  69              		.global	MemManage_Handler
  70              		.syntax unified
  71              		.thumb
  72              		.thumb_func
  74              	MemManage_Handler:
  75              	.LFB158:
  94:Core/Src/stm32l5xx_it.c **** }
  95:Core/Src/stm32l5xx_it.c **** 
  96:Core/Src/stm32l5xx_it.c **** /**
  97:Core/Src/stm32l5xx_it.c ****   * @brief This function handles Memory management fault.
  98:Core/Src/stm32l5xx_it.c ****   */
  99:Core/Src/stm32l5xx_it.c **** void MemManage_Handler(void)
ARM GAS  /tmp/cc4dKHc8.s 			page 4


 100:Core/Src/stm32l5xx_it.c **** {
  76              		.loc 1 100 1 view -0
  77              		.cfi_startproc
  78              		@ Volatile: function does not return.
  79              		@ args = 0, pretend = 0, frame = 0
  80              		@ frame_needed = 0, uses_anonymous_args = 0
  81              		@ link register save eliminated.
  82              	.L6:
 101:Core/Src/stm32l5xx_it.c ****   /* USER CODE BEGIN MemoryManagement_IRQn 0 */
 102:Core/Src/stm32l5xx_it.c **** 
 103:Core/Src/stm32l5xx_it.c ****   /* USER CODE END MemoryManagement_IRQn 0 */
 104:Core/Src/stm32l5xx_it.c ****   while (1)
  83              		.loc 1 104 3 discriminator 1 view .LVU9
 105:Core/Src/stm32l5xx_it.c ****   {
 106:Core/Src/stm32l5xx_it.c ****     /* USER CODE BEGIN W1_MemoryManagement_IRQn 0 */
 107:Core/Src/stm32l5xx_it.c ****     /* USER CODE END W1_MemoryManagement_IRQn 0 */
 108:Core/Src/stm32l5xx_it.c ****   }
  84              		.loc 1 108 3 discriminator 1 view .LVU10
 104:Core/Src/stm32l5xx_it.c ****   {
  85              		.loc 1 104 9 discriminator 1 view .LVU11
  86 0000 FEE7     		b	.L6
  87              		.cfi_endproc
  88              	.LFE158:
  90              		.section	.text.BusFault_Handler,"ax",%progbits
  91              		.align	1
  92              		.global	BusFault_Handler
  93              		.syntax unified
  94              		.thumb
  95              		.thumb_func
  97              	BusFault_Handler:
  98              	.LFB159:
 109:Core/Src/stm32l5xx_it.c **** }
 110:Core/Src/stm32l5xx_it.c **** 
 111:Core/Src/stm32l5xx_it.c **** /**
 112:Core/Src/stm32l5xx_it.c ****   * @brief This function handles Prefetch fault, memory access fault.
 113:Core/Src/stm32l5xx_it.c ****   */
 114:Core/Src/stm32l5xx_it.c **** void BusFault_Handler(void)
 115:Core/Src/stm32l5xx_it.c **** {
  99              		.loc 1 115 1 view -0
 100              		.cfi_startproc
 101              		@ Volatile: function does not return.
 102              		@ args = 0, pretend = 0, frame = 0
 103              		@ frame_needed = 0, uses_anonymous_args = 0
 104              		@ link register save eliminated.
 105              	.L8:
 116:Core/Src/stm32l5xx_it.c ****   /* USER CODE BEGIN BusFault_IRQn 0 */
 117:Core/Src/stm32l5xx_it.c **** 
 118:Core/Src/stm32l5xx_it.c ****   /* USER CODE END BusFault_IRQn 0 */
 119:Core/Src/stm32l5xx_it.c ****   while (1)
 106              		.loc 1 119 3 discriminator 1 view .LVU13
 120:Core/Src/stm32l5xx_it.c ****   {
 121:Core/Src/stm32l5xx_it.c ****     /* USER CODE BEGIN W1_BusFault_IRQn 0 */
 122:Core/Src/stm32l5xx_it.c ****     /* USER CODE END W1_BusFault_IRQn 0 */
 123:Core/Src/stm32l5xx_it.c ****   }
 107              		.loc 1 123 3 discriminator 1 view .LVU14
 119:Core/Src/stm32l5xx_it.c ****   {
 108              		.loc 1 119 9 discriminator 1 view .LVU15
ARM GAS  /tmp/cc4dKHc8.s 			page 5


 109 0000 FEE7     		b	.L8
 110              		.cfi_endproc
 111              	.LFE159:
 113              		.section	.text.UsageFault_Handler,"ax",%progbits
 114              		.align	1
 115              		.global	UsageFault_Handler
 116              		.syntax unified
 117              		.thumb
 118              		.thumb_func
 120              	UsageFault_Handler:
 121              	.LFB160:
 124:Core/Src/stm32l5xx_it.c **** }
 125:Core/Src/stm32l5xx_it.c **** 
 126:Core/Src/stm32l5xx_it.c **** /**
 127:Core/Src/stm32l5xx_it.c ****   * @brief This function handles Undefined instruction or illegal state.
 128:Core/Src/stm32l5xx_it.c ****   */
 129:Core/Src/stm32l5xx_it.c **** void UsageFault_Handler(void)
 130:Core/Src/stm32l5xx_it.c **** {
 122              		.loc 1 130 1 view -0
 123              		.cfi_startproc
 124              		@ Volatile: function does not return.
 125              		@ args = 0, pretend = 0, frame = 0
 126              		@ frame_needed = 0, uses_anonymous_args = 0
 127              		@ link register save eliminated.
 128              	.L10:
 131:Core/Src/stm32l5xx_it.c ****   /* USER CODE BEGIN UsageFault_IRQn 0 */
 132:Core/Src/stm32l5xx_it.c **** 
 133:Core/Src/stm32l5xx_it.c ****   /* USER CODE END UsageFault_IRQn 0 */
 134:Core/Src/stm32l5xx_it.c ****   while (1)
 129              		.loc 1 134 3 discriminator 1 view .LVU17
 135:Core/Src/stm32l5xx_it.c ****   {
 136:Core/Src/stm32l5xx_it.c ****     /* USER CODE BEGIN W1_UsageFault_IRQn 0 */
 137:Core/Src/stm32l5xx_it.c ****     /* USER CODE END W1_UsageFault_IRQn 0 */
 138:Core/Src/stm32l5xx_it.c ****   }
 130              		.loc 1 138 3 discriminator 1 view .LVU18
 134:Core/Src/stm32l5xx_it.c ****   {
 131              		.loc 1 134 9 discriminator 1 view .LVU19
 132 0000 FEE7     		b	.L10
 133              		.cfi_endproc
 134              	.LFE160:
 136              		.section	.text.SVC_Handler,"ax",%progbits
 137              		.align	1
 138              		.global	SVC_Handler
 139              		.syntax unified
 140              		.thumb
 141              		.thumb_func
 143              	SVC_Handler:
 144              	.LFB161:
 139:Core/Src/stm32l5xx_it.c **** }
 140:Core/Src/stm32l5xx_it.c **** 
 141:Core/Src/stm32l5xx_it.c **** /**
 142:Core/Src/stm32l5xx_it.c ****   * @brief This function handles System service call via SWI instruction.
 143:Core/Src/stm32l5xx_it.c ****   */
 144:Core/Src/stm32l5xx_it.c **** void SVC_Handler(void)
 145:Core/Src/stm32l5xx_it.c **** {
 145              		.loc 1 145 1 view -0
 146              		.cfi_startproc
ARM GAS  /tmp/cc4dKHc8.s 			page 6


 147              		@ args = 0, pretend = 0, frame = 0
 148              		@ frame_needed = 0, uses_anonymous_args = 0
 149              		@ link register save eliminated.
 146:Core/Src/stm32l5xx_it.c ****   /* USER CODE BEGIN SVCall_IRQn 0 */
 147:Core/Src/stm32l5xx_it.c **** 
 148:Core/Src/stm32l5xx_it.c ****   /* USER CODE END SVCall_IRQn 0 */
 149:Core/Src/stm32l5xx_it.c ****   /* USER CODE BEGIN SVCall_IRQn 1 */
 150:Core/Src/stm32l5xx_it.c **** 
 151:Core/Src/stm32l5xx_it.c ****   /* USER CODE END SVCall_IRQn 1 */
 152:Core/Src/stm32l5xx_it.c **** }
 150              		.loc 1 152 1 view .LVU21
 151 0000 7047     		bx	lr
 152              		.cfi_endproc
 153              	.LFE161:
 155              		.section	.text.DebugMon_Handler,"ax",%progbits
 156              		.align	1
 157              		.global	DebugMon_Handler
 158              		.syntax unified
 159              		.thumb
 160              		.thumb_func
 162              	DebugMon_Handler:
 163              	.LFB162:
 153:Core/Src/stm32l5xx_it.c **** 
 154:Core/Src/stm32l5xx_it.c **** /**
 155:Core/Src/stm32l5xx_it.c ****   * @brief This function handles Debug monitor.
 156:Core/Src/stm32l5xx_it.c ****   */
 157:Core/Src/stm32l5xx_it.c **** void DebugMon_Handler(void)
 158:Core/Src/stm32l5xx_it.c **** {
 164              		.loc 1 158 1 view -0
 165              		.cfi_startproc
 166              		@ args = 0, pretend = 0, frame = 0
 167              		@ frame_needed = 0, uses_anonymous_args = 0
 168              		@ link register save eliminated.
 159:Core/Src/stm32l5xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 0 */
 160:Core/Src/stm32l5xx_it.c **** 
 161:Core/Src/stm32l5xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 0 */
 162:Core/Src/stm32l5xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 1 */
 163:Core/Src/stm32l5xx_it.c **** 
 164:Core/Src/stm32l5xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 1 */
 165:Core/Src/stm32l5xx_it.c **** }
 169              		.loc 1 165 1 view .LVU23
 170 0000 7047     		bx	lr
 171              		.cfi_endproc
 172              	.LFE162:
 174              		.section	.text.PendSV_Handler,"ax",%progbits
 175              		.align	1
 176              		.global	PendSV_Handler
 177              		.syntax unified
 178              		.thumb
 179              		.thumb_func
 181              	PendSV_Handler:
 182              	.LFB163:
 166:Core/Src/stm32l5xx_it.c **** 
 167:Core/Src/stm32l5xx_it.c **** /**
 168:Core/Src/stm32l5xx_it.c ****   * @brief This function handles Pendable request for system service.
 169:Core/Src/stm32l5xx_it.c ****   */
 170:Core/Src/stm32l5xx_it.c **** void PendSV_Handler(void)
ARM GAS  /tmp/cc4dKHc8.s 			page 7


 171:Core/Src/stm32l5xx_it.c **** {
 183              		.loc 1 171 1 view -0
 184              		.cfi_startproc
 185              		@ args = 0, pretend = 0, frame = 0
 186              		@ frame_needed = 0, uses_anonymous_args = 0
 187              		@ link register save eliminated.
 172:Core/Src/stm32l5xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 0 */
 173:Core/Src/stm32l5xx_it.c **** 
 174:Core/Src/stm32l5xx_it.c ****   /* USER CODE END PendSV_IRQn 0 */
 175:Core/Src/stm32l5xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 1 */
 176:Core/Src/stm32l5xx_it.c **** 
 177:Core/Src/stm32l5xx_it.c ****   /* USER CODE END PendSV_IRQn 1 */
 178:Core/Src/stm32l5xx_it.c **** }
 188              		.loc 1 178 1 view .LVU25
 189 0000 7047     		bx	lr
 190              		.cfi_endproc
 191              	.LFE163:
 193              		.section	.text.SysTick_Handler,"ax",%progbits
 194              		.align	1
 195              		.global	SysTick_Handler
 196              		.syntax unified
 197              		.thumb
 198              		.thumb_func
 200              	SysTick_Handler:
 201              	.LFB164:
 179:Core/Src/stm32l5xx_it.c **** 
 180:Core/Src/stm32l5xx_it.c **** /**
 181:Core/Src/stm32l5xx_it.c ****   * @brief This function handles System tick timer.
 182:Core/Src/stm32l5xx_it.c ****   */
 183:Core/Src/stm32l5xx_it.c **** void SysTick_Handler(void)
 184:Core/Src/stm32l5xx_it.c **** {
 202              		.loc 1 184 1 view -0
 203              		.cfi_startproc
 204              		@ args = 0, pretend = 0, frame = 0
 205              		@ frame_needed = 0, uses_anonymous_args = 0
 206 0000 08B5     		push	{r3, lr}
 207              	.LCFI0:
 208              		.cfi_def_cfa_offset 8
 209              		.cfi_offset 3, -8
 210              		.cfi_offset 14, -4
 185:Core/Src/stm32l5xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 0 */
 186:Core/Src/stm32l5xx_it.c **** 
 187:Core/Src/stm32l5xx_it.c ****   /* USER CODE END SysTick_IRQn 0 */
 188:Core/Src/stm32l5xx_it.c ****   HAL_IncTick();
 211              		.loc 1 188 3 view .LVU27
 212 0002 FFF7FEFF 		bl	HAL_IncTick
 213              	.LVL0:
 189:Core/Src/stm32l5xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 1 */
 190:Core/Src/stm32l5xx_it.c **** 
 191:Core/Src/stm32l5xx_it.c ****   /* USER CODE END SysTick_IRQn 1 */
 192:Core/Src/stm32l5xx_it.c **** }
 214              		.loc 1 192 1 is_stmt 0 view .LVU28
 215 0006 08BD     		pop	{r3, pc}
 216              		.cfi_endproc
 217              	.LFE164:
 219              		.section	.text.USB_FS_IRQHandler,"ax",%progbits
 220              		.align	1
ARM GAS  /tmp/cc4dKHc8.s 			page 8


 221              		.global	USB_FS_IRQHandler
 222              		.syntax unified
 223              		.thumb
 224              		.thumb_func
 226              	USB_FS_IRQHandler:
 227              	.LFB165:
 193:Core/Src/stm32l5xx_it.c **** 
 194:Core/Src/stm32l5xx_it.c **** /******************************************************************************/
 195:Core/Src/stm32l5xx_it.c **** /* STM32L5xx Peripheral Interrupt Handlers                                    */
 196:Core/Src/stm32l5xx_it.c **** /* Add here the Interrupt Handlers for the used peripherals.                  */
 197:Core/Src/stm32l5xx_it.c **** /* For the available peripheral interrupt handler names,                      */
 198:Core/Src/stm32l5xx_it.c **** /* please refer to the startup file (startup_stm32l5xx.s).                    */
 199:Core/Src/stm32l5xx_it.c **** /******************************************************************************/
 200:Core/Src/stm32l5xx_it.c **** 
 201:Core/Src/stm32l5xx_it.c **** /**
 202:Core/Src/stm32l5xx_it.c ****   * @brief This function handles USB FS global interrupt / USB FS wake-up interrupt through EXTI li
 203:Core/Src/stm32l5xx_it.c ****   */
 204:Core/Src/stm32l5xx_it.c **** void USB_FS_IRQHandler(void)
 205:Core/Src/stm32l5xx_it.c **** {
 228              		.loc 1 205 1 is_stmt 1 view -0
 229              		.cfi_startproc
 230              		@ args = 0, pretend = 0, frame = 0
 231              		@ frame_needed = 0, uses_anonymous_args = 0
 232 0000 08B5     		push	{r3, lr}
 233              	.LCFI1:
 234              		.cfi_def_cfa_offset 8
 235              		.cfi_offset 3, -8
 236              		.cfi_offset 14, -4
 206:Core/Src/stm32l5xx_it.c ****   /* USER CODE BEGIN USB_FS_IRQn 0 */
 207:Core/Src/stm32l5xx_it.c **** 
 208:Core/Src/stm32l5xx_it.c ****   /* USER CODE END USB_FS_IRQn 0 */
 209:Core/Src/stm32l5xx_it.c ****   HAL_PCD_IRQHandler(&hpcd_USB_FS);
 237              		.loc 1 209 3 view .LVU30
 238 0002 0248     		ldr	r0, .L18
 239 0004 FFF7FEFF 		bl	HAL_PCD_IRQHandler
 240              	.LVL1:
 210:Core/Src/stm32l5xx_it.c ****   /* USER CODE BEGIN USB_FS_IRQn 1 */
 211:Core/Src/stm32l5xx_it.c **** 
 212:Core/Src/stm32l5xx_it.c ****   /* USER CODE END USB_FS_IRQn 1 */
 213:Core/Src/stm32l5xx_it.c **** }
 241              		.loc 1 213 1 is_stmt 0 view .LVU31
 242 0008 08BD     		pop	{r3, pc}
 243              	.L19:
 244 000a 00BF     		.align	2
 245              	.L18:
 246 000c 00000000 		.word	hpcd_USB_FS
 247              		.cfi_endproc
 248              	.LFE165:
 250              		.text
 251              	.Letext0:
 252              		.file 2 "/home/yul/toolchain/arm-gnu-toolchain-12.2.rel1-x86_64-arm-none-eabi/arm-none-eabi/includ
 253              		.file 3 "/home/yul/toolchain/arm-gnu-toolchain-12.2.rel1-x86_64-arm-none-eabi/arm-none-eabi/includ
 254              		.file 4 "Drivers/CMSIS/Device/ST/STM32L5xx/Include/stm32l562xx.h"
 255              		.file 5 "Drivers/STM32L5xx_HAL_Driver/Inc/stm32l5xx_hal_def.h"
 256              		.file 6 "Drivers/STM32L5xx_HAL_Driver/Inc/stm32l5xx_ll_usb.h"
 257              		.file 7 "Drivers/STM32L5xx_HAL_Driver/Inc/stm32l5xx_hal_pcd.h"
 258              		.file 8 "Drivers/STM32L5xx_HAL_Driver/Inc/stm32l5xx_hal.h"
ARM GAS  /tmp/cc4dKHc8.s 			page 9


ARM GAS  /tmp/cc4dKHc8.s 			page 10


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32l5xx_it.c
     /tmp/cc4dKHc8.s:22     .text.NMI_Handler:0000000000000000 $t
     /tmp/cc4dKHc8.s:28     .text.NMI_Handler:0000000000000000 NMI_Handler
     /tmp/cc4dKHc8.s:45     .text.HardFault_Handler:0000000000000000 $t
     /tmp/cc4dKHc8.s:51     .text.HardFault_Handler:0000000000000000 HardFault_Handler
     /tmp/cc4dKHc8.s:68     .text.MemManage_Handler:0000000000000000 $t
     /tmp/cc4dKHc8.s:74     .text.MemManage_Handler:0000000000000000 MemManage_Handler
     /tmp/cc4dKHc8.s:91     .text.BusFault_Handler:0000000000000000 $t
     /tmp/cc4dKHc8.s:97     .text.BusFault_Handler:0000000000000000 BusFault_Handler
     /tmp/cc4dKHc8.s:114    .text.UsageFault_Handler:0000000000000000 $t
     /tmp/cc4dKHc8.s:120    .text.UsageFault_Handler:0000000000000000 UsageFault_Handler
     /tmp/cc4dKHc8.s:137    .text.SVC_Handler:0000000000000000 $t
     /tmp/cc4dKHc8.s:143    .text.SVC_Handler:0000000000000000 SVC_Handler
     /tmp/cc4dKHc8.s:156    .text.DebugMon_Handler:0000000000000000 $t
     /tmp/cc4dKHc8.s:162    .text.DebugMon_Handler:0000000000000000 DebugMon_Handler
     /tmp/cc4dKHc8.s:175    .text.PendSV_Handler:0000000000000000 $t
     /tmp/cc4dKHc8.s:181    .text.PendSV_Handler:0000000000000000 PendSV_Handler
     /tmp/cc4dKHc8.s:194    .text.SysTick_Handler:0000000000000000 $t
     /tmp/cc4dKHc8.s:200    .text.SysTick_Handler:0000000000000000 SysTick_Handler
     /tmp/cc4dKHc8.s:220    .text.USB_FS_IRQHandler:0000000000000000 $t
     /tmp/cc4dKHc8.s:226    .text.USB_FS_IRQHandler:0000000000000000 USB_FS_IRQHandler
     /tmp/cc4dKHc8.s:246    .text.USB_FS_IRQHandler:000000000000000c $d

UNDEFINED SYMBOLS
HAL_IncTick
HAL_PCD_IRQHandler
hpcd_USB_FS

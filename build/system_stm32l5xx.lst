ARM GAS  /tmp/ccdyKqM9.s 			page 1


   1              		.cpu cortex-m33
   2              		.arch armv8-m.main
   3              		.fpu fpv4-sp-d16
   4              		.arch_extension dsp
   5              		.eabi_attribute 27, 1
   6              		.eabi_attribute 28, 1
   7              		.eabi_attribute 20, 1
   8              		.eabi_attribute 21, 1
   9              		.eabi_attribute 23, 3
  10              		.eabi_attribute 24, 1
  11              		.eabi_attribute 25, 1
  12              		.eabi_attribute 26, 1
  13              		.eabi_attribute 30, 1
  14              		.eabi_attribute 34, 1
  15              		.eabi_attribute 18, 4
  16              		.file	"system_stm32l5xx.c"
  17              		.text
  18              	.Ltext0:
  19              		.cfi_sections	.debug_frame
  20              		.file 1 "Core/Src/system_stm32l5xx.c"
  21              		.section	.text.SystemInit,"ax",%progbits
  22              		.align	1
  23              		.global	SystemInit
  24              		.syntax unified
  25              		.thumb
  26              		.thumb_func
  28              	SystemInit:
  29              	.LFB152:
   1:Core/Src/system_stm32l5xx.c **** /**
   2:Core/Src/system_stm32l5xx.c ****   ******************************************************************************
   3:Core/Src/system_stm32l5xx.c ****   * @file    system_stm32l5xx.c
   4:Core/Src/system_stm32l5xx.c ****   * @author  MCD Application Team
   5:Core/Src/system_stm32l5xx.c ****   * @brief   CMSIS Cortex-M33 Device Peripheral Access Layer System Source File
   6:Core/Src/system_stm32l5xx.c ****   *
   7:Core/Src/system_stm32l5xx.c ****   *   This file provides two functions and one global variable to be called from
   8:Core/Src/system_stm32l5xx.c ****   *   user application:
   9:Core/Src/system_stm32l5xx.c ****   *      - SystemInit(): This function is called at startup just after reset and
  10:Core/Src/system_stm32l5xx.c ****   *                      before branch to main program. This call is made inside
  11:Core/Src/system_stm32l5xx.c ****   *                      the "startup_stm32l5xx.s" file.
  12:Core/Src/system_stm32l5xx.c ****   *
  13:Core/Src/system_stm32l5xx.c ****   *      - SystemCoreClock variable: Contains the core clock (HCLK), it can be used
  14:Core/Src/system_stm32l5xx.c ****   *                                  by the user application to setup the SysTick
  15:Core/Src/system_stm32l5xx.c ****   *                                  timer or configure other parameters.
  16:Core/Src/system_stm32l5xx.c ****   *
  17:Core/Src/system_stm32l5xx.c ****   *      - SystemCoreClockUpdate(): Updates the variable SystemCoreClock and must
  18:Core/Src/system_stm32l5xx.c ****   *                                 be called whenever the core clock is changed
  19:Core/Src/system_stm32l5xx.c ****   *                                 during program execution.
  20:Core/Src/system_stm32l5xx.c ****   *
  21:Core/Src/system_stm32l5xx.c ****   *   After each device reset the MSI (4 MHz) is used as system clock source.
  22:Core/Src/system_stm32l5xx.c ****   *   Then SystemInit() function is called, in "startup_stm32l5xx.s" file, to
  23:Core/Src/system_stm32l5xx.c ****   *   configure the system clock before to branch to main program.
  24:Core/Src/system_stm32l5xx.c ****   *
  25:Core/Src/system_stm32l5xx.c ****   *   This file configures the system clock as follows:
  26:Core/Src/system_stm32l5xx.c ****   *=============================================================================
  27:Core/Src/system_stm32l5xx.c ****   *-----------------------------------------------------------------------------
  28:Core/Src/system_stm32l5xx.c ****   *        System Clock source                    | MSI
  29:Core/Src/system_stm32l5xx.c ****   *-----------------------------------------------------------------------------
ARM GAS  /tmp/ccdyKqM9.s 			page 2


  30:Core/Src/system_stm32l5xx.c ****   *        SYSCLK(Hz)                             | 4000000
  31:Core/Src/system_stm32l5xx.c ****   *-----------------------------------------------------------------------------
  32:Core/Src/system_stm32l5xx.c ****   *        HCLK(Hz)                               | 4000000
  33:Core/Src/system_stm32l5xx.c ****   *-----------------------------------------------------------------------------
  34:Core/Src/system_stm32l5xx.c ****   *        AHB Prescaler                          | 1
  35:Core/Src/system_stm32l5xx.c ****   *-----------------------------------------------------------------------------
  36:Core/Src/system_stm32l5xx.c ****   *        APB1 Prescaler                         | 1
  37:Core/Src/system_stm32l5xx.c ****   *-----------------------------------------------------------------------------
  38:Core/Src/system_stm32l5xx.c ****   *        APB2 Prescaler                         | 1
  39:Core/Src/system_stm32l5xx.c ****   *-----------------------------------------------------------------------------
  40:Core/Src/system_stm32l5xx.c ****   *        PLL_SRC                                | No clock
  41:Core/Src/system_stm32l5xx.c ****   *-----------------------------------------------------------------------------
  42:Core/Src/system_stm32l5xx.c ****   *        PLL_M                                  | 1
  43:Core/Src/system_stm32l5xx.c ****   *-----------------------------------------------------------------------------
  44:Core/Src/system_stm32l5xx.c ****   *        PLL_N                                  | 8
  45:Core/Src/system_stm32l5xx.c ****   *-----------------------------------------------------------------------------
  46:Core/Src/system_stm32l5xx.c ****   *        PLL_P                                  | 7
  47:Core/Src/system_stm32l5xx.c ****   *-----------------------------------------------------------------------------
  48:Core/Src/system_stm32l5xx.c ****   *        PLL_Q                                  | 2
  49:Core/Src/system_stm32l5xx.c ****   *-----------------------------------------------------------------------------
  50:Core/Src/system_stm32l5xx.c ****   *        PLL_R                                  | 2
  51:Core/Src/system_stm32l5xx.c ****   *-----------------------------------------------------------------------------
  52:Core/Src/system_stm32l5xx.c ****   *        PLLSAI1_SRC                            | NA
  53:Core/Src/system_stm32l5xx.c ****   *-----------------------------------------------------------------------------
  54:Core/Src/system_stm32l5xx.c ****   *        PLLSAI1_M                              | NA
  55:Core/Src/system_stm32l5xx.c ****   *-----------------------------------------------------------------------------
  56:Core/Src/system_stm32l5xx.c ****   *        PLLSAI1_N                              | NA
  57:Core/Src/system_stm32l5xx.c ****   *-----------------------------------------------------------------------------
  58:Core/Src/system_stm32l5xx.c ****   *        PLLSAI1_P                              | NA
  59:Core/Src/system_stm32l5xx.c ****   *-----------------------------------------------------------------------------
  60:Core/Src/system_stm32l5xx.c ****   *        PLLSAI1_Q                              | NA
  61:Core/Src/system_stm32l5xx.c ****   *-----------------------------------------------------------------------------
  62:Core/Src/system_stm32l5xx.c ****   *        PLLSAI1_R                              | NA
  63:Core/Src/system_stm32l5xx.c ****   *-----------------------------------------------------------------------------
  64:Core/Src/system_stm32l5xx.c ****   *        PLLSAI2_SRC                            | NA
  65:Core/Src/system_stm32l5xx.c ****   *-----------------------------------------------------------------------------
  66:Core/Src/system_stm32l5xx.c ****   *        PLLSAI2_M                              | NA
  67:Core/Src/system_stm32l5xx.c ****   *-----------------------------------------------------------------------------
  68:Core/Src/system_stm32l5xx.c ****   *        PLLSAI2_N                              | NA
  69:Core/Src/system_stm32l5xx.c ****   *-----------------------------------------------------------------------------
  70:Core/Src/system_stm32l5xx.c ****   *        PLLSAI2_P                              | NA
  71:Core/Src/system_stm32l5xx.c ****   *-----------------------------------------------------------------------------
  72:Core/Src/system_stm32l5xx.c ****   *        Require 48MHz for USB FS,              | Disabled
  73:Core/Src/system_stm32l5xx.c ****   *        SDIO and RNG clock                     |
  74:Core/Src/system_stm32l5xx.c ****   *-----------------------------------------------------------------------------
  75:Core/Src/system_stm32l5xx.c ****   *=============================================================================
  76:Core/Src/system_stm32l5xx.c ****   ******************************************************************************
  77:Core/Src/system_stm32l5xx.c ****   * @attention
  78:Core/Src/system_stm32l5xx.c ****   *
  79:Core/Src/system_stm32l5xx.c ****   * Copyright (c) 2019 STMicroelectronics.
  80:Core/Src/system_stm32l5xx.c ****   * All rights reserved.
  81:Core/Src/system_stm32l5xx.c ****   *
  82:Core/Src/system_stm32l5xx.c ****   * This software is licensed under terms that can be found in the LICENSE file
  83:Core/Src/system_stm32l5xx.c ****   * in the root directory of this software component.
  84:Core/Src/system_stm32l5xx.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  85:Core/Src/system_stm32l5xx.c ****   *
  86:Core/Src/system_stm32l5xx.c ****   ******************************************************************************
ARM GAS  /tmp/ccdyKqM9.s 			page 3


  87:Core/Src/system_stm32l5xx.c ****   */
  88:Core/Src/system_stm32l5xx.c **** 
  89:Core/Src/system_stm32l5xx.c **** /** @addtogroup CMSIS
  90:Core/Src/system_stm32l5xx.c ****   * @{
  91:Core/Src/system_stm32l5xx.c ****   */
  92:Core/Src/system_stm32l5xx.c **** 
  93:Core/Src/system_stm32l5xx.c **** /** @addtogroup STM32L5xx_System
  94:Core/Src/system_stm32l5xx.c ****   * @{
  95:Core/Src/system_stm32l5xx.c ****   */
  96:Core/Src/system_stm32l5xx.c **** 
  97:Core/Src/system_stm32l5xx.c **** /** @addtogroup STM32L5xx_System_Private_Includes
  98:Core/Src/system_stm32l5xx.c ****   * @{
  99:Core/Src/system_stm32l5xx.c ****   */
 100:Core/Src/system_stm32l5xx.c **** 
 101:Core/Src/system_stm32l5xx.c **** #include "stm32l5xx.h"
 102:Core/Src/system_stm32l5xx.c **** 
 103:Core/Src/system_stm32l5xx.c **** /**
 104:Core/Src/system_stm32l5xx.c ****   * @}
 105:Core/Src/system_stm32l5xx.c ****   */
 106:Core/Src/system_stm32l5xx.c **** 
 107:Core/Src/system_stm32l5xx.c **** /** @addtogroup STM32L5xx_System_Private_TypesDefinitions
 108:Core/Src/system_stm32l5xx.c ****   * @{
 109:Core/Src/system_stm32l5xx.c ****   */
 110:Core/Src/system_stm32l5xx.c **** 
 111:Core/Src/system_stm32l5xx.c **** /**
 112:Core/Src/system_stm32l5xx.c ****   * @}
 113:Core/Src/system_stm32l5xx.c ****   */
 114:Core/Src/system_stm32l5xx.c **** 
 115:Core/Src/system_stm32l5xx.c **** /** @addtogroup STM32L5xx_System_Private_Defines
 116:Core/Src/system_stm32l5xx.c ****   * @{
 117:Core/Src/system_stm32l5xx.c ****   */
 118:Core/Src/system_stm32l5xx.c **** 
 119:Core/Src/system_stm32l5xx.c **** #if !defined  (HSE_VALUE)
 120:Core/Src/system_stm32l5xx.c ****   #define HSE_VALUE    16000000U /*!< Value of the External oscillator in Hz */
 121:Core/Src/system_stm32l5xx.c **** #endif /* HSE_VALUE */
 122:Core/Src/system_stm32l5xx.c **** 
 123:Core/Src/system_stm32l5xx.c **** #if !defined  (MSI_VALUE)
 124:Core/Src/system_stm32l5xx.c ****   #define MSI_VALUE    4000000U  /*!< Value of the Internal oscillator in Hz*/
 125:Core/Src/system_stm32l5xx.c **** #endif /* MSI_VALUE */
 126:Core/Src/system_stm32l5xx.c **** 
 127:Core/Src/system_stm32l5xx.c **** #if !defined  (HSI_VALUE)
 128:Core/Src/system_stm32l5xx.c ****   #define HSI_VALUE    16000000U /*!< Value of the Internal oscillator in Hz*/
 129:Core/Src/system_stm32l5xx.c **** #endif /* HSI_VALUE */
 130:Core/Src/system_stm32l5xx.c **** 
 131:Core/Src/system_stm32l5xx.c **** /* Note: Following vector table addresses must be defined in line with linker
 132:Core/Src/system_stm32l5xx.c ****          configuration. */
 133:Core/Src/system_stm32l5xx.c **** /*!< Uncomment the following line if you need to relocate the vector table
 134:Core/Src/system_stm32l5xx.c ****      anywhere in Flash or Sram, else the vector table is kept at the automatic
 135:Core/Src/system_stm32l5xx.c ****      remap of boot address selected */
 136:Core/Src/system_stm32l5xx.c **** /* #define USER_VECT_TAB_ADDRESS */
 137:Core/Src/system_stm32l5xx.c **** 
 138:Core/Src/system_stm32l5xx.c **** #if defined(USER_VECT_TAB_ADDRESS)
 139:Core/Src/system_stm32l5xx.c **** /*!< Uncomment the following line if you need to relocate your vector Table
 140:Core/Src/system_stm32l5xx.c ****      in Sram else user remap will be done in Flash. */
 141:Core/Src/system_stm32l5xx.c **** /* #define VECT_TAB_SRAM */
 142:Core/Src/system_stm32l5xx.c **** 
 143:Core/Src/system_stm32l5xx.c **** #if defined(VECT_TAB_SRAM)
ARM GAS  /tmp/ccdyKqM9.s 			page 4


 144:Core/Src/system_stm32l5xx.c **** #define VECT_TAB_BASE_ADDRESS   SRAM1_BASE      /*!< Vector Table base address field.
 145:Core/Src/system_stm32l5xx.c ****                                                      This value must be a multiple of 0x200. */
 146:Core/Src/system_stm32l5xx.c **** #define VECT_TAB_OFFSET         0x00000000U     /*!< Vector Table base offset field.
 147:Core/Src/system_stm32l5xx.c ****                                                      This value must be a multiple of 0x200. */
 148:Core/Src/system_stm32l5xx.c **** #else
 149:Core/Src/system_stm32l5xx.c **** #define VECT_TAB_BASE_ADDRESS   FLASH_BASE      /*!< Vector Table base address field.
 150:Core/Src/system_stm32l5xx.c ****                                                      This value must be a multiple of 0x200. */
 151:Core/Src/system_stm32l5xx.c **** #define VECT_TAB_OFFSET         0x00000000U     /*!< Vector Table base offset field.
 152:Core/Src/system_stm32l5xx.c ****                                                      This value must be a multiple of 0x200. */
 153:Core/Src/system_stm32l5xx.c **** #endif /* VECT_TAB_SRAM */
 154:Core/Src/system_stm32l5xx.c **** #endif /* USER_VECT_TAB_ADDRESS */
 155:Core/Src/system_stm32l5xx.c **** 
 156:Core/Src/system_stm32l5xx.c **** /******************************************************************************/
 157:Core/Src/system_stm32l5xx.c **** /**
 158:Core/Src/system_stm32l5xx.c ****   * @}
 159:Core/Src/system_stm32l5xx.c ****   */
 160:Core/Src/system_stm32l5xx.c **** 
 161:Core/Src/system_stm32l5xx.c **** /** @addtogroup STM32L5xx_System_Private_Macros
 162:Core/Src/system_stm32l5xx.c ****   * @{
 163:Core/Src/system_stm32l5xx.c ****   */
 164:Core/Src/system_stm32l5xx.c **** 
 165:Core/Src/system_stm32l5xx.c **** /**
 166:Core/Src/system_stm32l5xx.c ****   * @}
 167:Core/Src/system_stm32l5xx.c ****   */
 168:Core/Src/system_stm32l5xx.c **** 
 169:Core/Src/system_stm32l5xx.c **** /** @addtogroup STM32L5xx_System_Private_Variables
 170:Core/Src/system_stm32l5xx.c ****   * @{
 171:Core/Src/system_stm32l5xx.c ****   */
 172:Core/Src/system_stm32l5xx.c ****   /* The SystemCoreClock variable is updated in three ways:
 173:Core/Src/system_stm32l5xx.c ****       1) by calling CMSIS function SystemCoreClockUpdate()
 174:Core/Src/system_stm32l5xx.c ****       2) by calling HAL API function HAL_RCC_GetHCLKFreq()
 175:Core/Src/system_stm32l5xx.c ****       3) each time HAL_RCC_ClockConfig() is called to configure the system clock frequency
 176:Core/Src/system_stm32l5xx.c ****          Note: If you use this function to configure the system clock; then there
 177:Core/Src/system_stm32l5xx.c ****                is no need to call the 2 first functions listed above, since SystemCoreClock
 178:Core/Src/system_stm32l5xx.c ****                variable is updated automatically.
 179:Core/Src/system_stm32l5xx.c ****   */
 180:Core/Src/system_stm32l5xx.c ****   uint32_t SystemCoreClock = 4000000U;
 181:Core/Src/system_stm32l5xx.c **** 
 182:Core/Src/system_stm32l5xx.c ****   const uint8_t  AHBPrescTable[16] = {0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 1U, 2U, 3U, 4U, 6U, 7U, 8U, 9
 183:Core/Src/system_stm32l5xx.c ****   const uint8_t  APBPrescTable[8] =  {0U, 0U, 0U, 0U, 1U, 2U, 3U, 4U};
 184:Core/Src/system_stm32l5xx.c ****   const uint32_t MSIRangeTable[16] = {100000U,   200000U,   400000U,   800000U,  1000000U,  2000000
 185:Core/Src/system_stm32l5xx.c ****                                       4000000U, 8000000U, 16000000U, 24000000U, 32000000U, 48000000
 186:Core/Src/system_stm32l5xx.c ****                                       0U,       0U,       0U,        0U};  /* MISRAC-2012: 0U for u
 187:Core/Src/system_stm32l5xx.c **** /**
 188:Core/Src/system_stm32l5xx.c ****   * @}
 189:Core/Src/system_stm32l5xx.c ****   */
 190:Core/Src/system_stm32l5xx.c **** 
 191:Core/Src/system_stm32l5xx.c **** /** @addtogroup STM32L5xx_System_Private_FunctionPrototypes
 192:Core/Src/system_stm32l5xx.c ****   * @{
 193:Core/Src/system_stm32l5xx.c ****   */
 194:Core/Src/system_stm32l5xx.c **** 
 195:Core/Src/system_stm32l5xx.c **** /**
 196:Core/Src/system_stm32l5xx.c ****   * @}
 197:Core/Src/system_stm32l5xx.c ****   */
 198:Core/Src/system_stm32l5xx.c **** 
 199:Core/Src/system_stm32l5xx.c **** /** @addtogroup STM32L5xx_System_Private_Functions
 200:Core/Src/system_stm32l5xx.c ****   * @{
ARM GAS  /tmp/ccdyKqM9.s 			page 5


 201:Core/Src/system_stm32l5xx.c ****   */
 202:Core/Src/system_stm32l5xx.c **** 
 203:Core/Src/system_stm32l5xx.c **** /**
 204:Core/Src/system_stm32l5xx.c ****   * @brief  Setup the microcontroller system.
 205:Core/Src/system_stm32l5xx.c ****   * @retval None
 206:Core/Src/system_stm32l5xx.c ****   */
 207:Core/Src/system_stm32l5xx.c **** 
 208:Core/Src/system_stm32l5xx.c **** void SystemInit(void)
 209:Core/Src/system_stm32l5xx.c **** {
  30              		.loc 1 209 1 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
 210:Core/Src/system_stm32l5xx.c ****   /* Configure the Vector Table location -------------------------------------*/
 211:Core/Src/system_stm32l5xx.c **** #if defined(USER_VECT_TAB_ADDRESS)
 212:Core/Src/system_stm32l5xx.c ****   SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET;
 213:Core/Src/system_stm32l5xx.c **** #endif
 214:Core/Src/system_stm32l5xx.c **** 
 215:Core/Src/system_stm32l5xx.c ****   /* FPU settings ------------------------------------------------------------*/
 216:Core/Src/system_stm32l5xx.c **** #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
 217:Core/Src/system_stm32l5xx.c ****   SCB->CPACR |= ((3UL << 20U)|(3UL << 22U));  /* set CP10 and CP11 Full Access */
  35              		.loc 1 217 3 view .LVU1
  36              		.loc 1 217 6 is_stmt 0 view .LVU2
  37 0000 034A     		ldr	r2, .L2
  38 0002 D2F88830 		ldr	r3, [r2, #136]
  39              		.loc 1 217 14 view .LVU3
  40 0006 43F47003 		orr	r3, r3, #15728640
  41 000a C2F88830 		str	r3, [r2, #136]
 218:Core/Src/system_stm32l5xx.c **** #endif
 219:Core/Src/system_stm32l5xx.c **** }
  42              		.loc 1 219 1 view .LVU4
  43 000e 7047     		bx	lr
  44              	.L3:
  45              		.align	2
  46              	.L2:
  47 0010 00ED00E0 		.word	-536810240
  48              		.cfi_endproc
  49              	.LFE152:
  51              		.section	.text.SystemCoreClockUpdate,"ax",%progbits
  52              		.align	1
  53              		.global	SystemCoreClockUpdate
  54              		.syntax unified
  55              		.thumb
  56              		.thumb_func
  58              	SystemCoreClockUpdate:
  59              	.LFB153:
 220:Core/Src/system_stm32l5xx.c **** 
 221:Core/Src/system_stm32l5xx.c **** /**
 222:Core/Src/system_stm32l5xx.c ****   * @brief  Update SystemCoreClock variable according to Clock Register Values.
 223:Core/Src/system_stm32l5xx.c ****   *         The SystemCoreClock variable contains the core clock (HCLK), it can
 224:Core/Src/system_stm32l5xx.c ****   *         be used by the user application to setup the SysTick timer or configure
 225:Core/Src/system_stm32l5xx.c ****   *         other parameters.
 226:Core/Src/system_stm32l5xx.c ****   *
 227:Core/Src/system_stm32l5xx.c ****   * @note   Each time the core clock (HCLK) changes, this function must be called
 228:Core/Src/system_stm32l5xx.c ****   *         to update SystemCoreClock variable value. Otherwise, any configuration
 229:Core/Src/system_stm32l5xx.c ****   *         based on this variable will be incorrect.
ARM GAS  /tmp/ccdyKqM9.s 			page 6


 230:Core/Src/system_stm32l5xx.c ****   *
 231:Core/Src/system_stm32l5xx.c ****   * @note   - The system frequency computed by this function is not the real
 232:Core/Src/system_stm32l5xx.c ****   *           frequency in the chip. It is calculated based on the predefined
 233:Core/Src/system_stm32l5xx.c ****   *           constant and the selected clock source:
 234:Core/Src/system_stm32l5xx.c ****   *
 235:Core/Src/system_stm32l5xx.c ****   *           - If SYSCLK source is MSI, SystemCoreClock will contain the MSI_VALUE(*)
 236:Core/Src/system_stm32l5xx.c ****   *
 237:Core/Src/system_stm32l5xx.c ****   *           - If SYSCLK source is HSI, SystemCoreClock will contain the HSI_VALUE(**)
 238:Core/Src/system_stm32l5xx.c ****   *
 239:Core/Src/system_stm32l5xx.c ****   *           - If SYSCLK source is HSE, SystemCoreClock will contain the HSE_VALUE(***)
 240:Core/Src/system_stm32l5xx.c ****   *
 241:Core/Src/system_stm32l5xx.c ****   *           - If SYSCLK source is PLL, SystemCoreClock will contain the HSE_VALUE(***)
 242:Core/Src/system_stm32l5xx.c ****   *             or HSI_VALUE(*) or MSI_VALUE(*) multiplied/divided by the PLL factors.
 243:Core/Src/system_stm32l5xx.c ****   *
 244:Core/Src/system_stm32l5xx.c ****   *         (*) MSI_VALUE is a constant defined in stm32l5xx_hal.h file (default value
 245:Core/Src/system_stm32l5xx.c ****   *             4 MHz) but the real value may vary depending on the variations
 246:Core/Src/system_stm32l5xx.c ****   *             in voltage and temperature.
 247:Core/Src/system_stm32l5xx.c ****   *
 248:Core/Src/system_stm32l5xx.c ****   *         (**) HSI_VALUE is a constant defined in stm32l5xx_hal.h file (default value
 249:Core/Src/system_stm32l5xx.c ****   *              16 MHz) but the real value may vary depending on the variations
 250:Core/Src/system_stm32l5xx.c ****   *              in voltage and temperature.
 251:Core/Src/system_stm32l5xx.c ****   *
 252:Core/Src/system_stm32l5xx.c ****   *         (***) HSE_VALUE is a constant defined in stm32l5xx_hal.h file (default value
 253:Core/Src/system_stm32l5xx.c ****   *              8 MHz), user has to ensure that HSE_VALUE is same as the real
 254:Core/Src/system_stm32l5xx.c ****   *              frequency of the crystal used. Otherwise, this function may
 255:Core/Src/system_stm32l5xx.c ****   *              have wrong result.
 256:Core/Src/system_stm32l5xx.c ****   *
 257:Core/Src/system_stm32l5xx.c ****   *         - The result of this function could be not correct when using fractional
 258:Core/Src/system_stm32l5xx.c ****   *           value for HSE crystal.
 259:Core/Src/system_stm32l5xx.c ****   *
 260:Core/Src/system_stm32l5xx.c ****   * @retval None
 261:Core/Src/system_stm32l5xx.c ****   */
 262:Core/Src/system_stm32l5xx.c **** void SystemCoreClockUpdate(void)
 263:Core/Src/system_stm32l5xx.c **** {
  60              		.loc 1 263 1 is_stmt 1 view -0
  61              		.cfi_startproc
  62              		@ args = 0, pretend = 0, frame = 0
  63              		@ frame_needed = 0, uses_anonymous_args = 0
  64              		@ link register save eliminated.
 264:Core/Src/system_stm32l5xx.c ****   uint32_t tmp, msirange, pllvco, pllsource, pllm, pllr;
  65              		.loc 1 264 3 view .LVU6
 265:Core/Src/system_stm32l5xx.c **** 
 266:Core/Src/system_stm32l5xx.c ****   /* Get MSI Range frequency--------------------------------------------------*/
 267:Core/Src/system_stm32l5xx.c ****   if((RCC->CR & RCC_CR_MSIRGSEL) == 0U)
  66              		.loc 1 267 3 view .LVU7
  67              		.loc 1 267 10 is_stmt 0 view .LVU8
  68 0000 2F4B     		ldr	r3, .L19
  69 0002 1B68     		ldr	r3, [r3]
  70              		.loc 1 267 5 view .LVU9
  71 0004 13F0080F 		tst	r3, #8
  72 0008 16D1     		bne	.L5
 268:Core/Src/system_stm32l5xx.c ****   { /* MSISRANGE from RCC_CSR applies */
 269:Core/Src/system_stm32l5xx.c ****     msirange = (RCC->CSR & RCC_CSR_MSISRANGE) >> 8U;
  73              		.loc 1 269 5 is_stmt 1 view .LVU10
  74              		.loc 1 269 20 is_stmt 0 view .LVU11
  75 000a 2D4B     		ldr	r3, .L19
  76 000c D3F89430 		ldr	r3, [r3, #148]
ARM GAS  /tmp/ccdyKqM9.s 			page 7


  77              		.loc 1 269 14 view .LVU12
  78 0010 C3F30323 		ubfx	r3, r3, #8, #4
  79              	.LVL0:
  80              	.L6:
 270:Core/Src/system_stm32l5xx.c ****   }
 271:Core/Src/system_stm32l5xx.c ****   else
 272:Core/Src/system_stm32l5xx.c ****   { /* MSIRANGE from RCC_CR applies */
 273:Core/Src/system_stm32l5xx.c ****     msirange = (RCC->CR & RCC_CR_MSIRANGE) >> 4U;
 274:Core/Src/system_stm32l5xx.c ****   }
 275:Core/Src/system_stm32l5xx.c ****   /*MSI frequency range in HZ*/
 276:Core/Src/system_stm32l5xx.c ****   msirange = MSIRangeTable[msirange];
  81              		.loc 1 276 3 is_stmt 1 view .LVU13
  82              		.loc 1 276 12 is_stmt 0 view .LVU14
  83 0014 2B4A     		ldr	r2, .L19+4
  84 0016 52F82320 		ldr	r2, [r2, r3, lsl #2]
  85              	.LVL1:
 277:Core/Src/system_stm32l5xx.c **** 
 278:Core/Src/system_stm32l5xx.c ****   /* Get SYSCLK source -------------------------------------------------------*/
 279:Core/Src/system_stm32l5xx.c ****   switch (RCC->CFGR & RCC_CFGR_SWS)
  86              		.loc 1 279 3 is_stmt 1 view .LVU15
  87              		.loc 1 279 14 is_stmt 0 view .LVU16
  88 001a 294B     		ldr	r3, .L19
  89 001c 9B68     		ldr	r3, [r3, #8]
  90              		.loc 1 279 21 view .LVU17
  91 001e 03F00C03 		and	r3, r3, #12
  92              		.loc 1 279 3 view .LVU18
  93 0022 0C2B     		cmp	r3, #12
  94 0024 48D8     		bhi	.L7
  95 0026 DFE803F0 		tbb	[pc, r3]
  96              	.L9:
  97 002a 0C       		.byte	(.L12-.L9)/2
  98 002b 47       		.byte	(.L7-.L9)/2
  99 002c 47       		.byte	(.L7-.L9)/2
 100 002d 47       		.byte	(.L7-.L9)/2
 101 002e 0F       		.byte	(.L11-.L9)/2
 102 002f 47       		.byte	(.L7-.L9)/2
 103 0030 47       		.byte	(.L7-.L9)/2
 104 0031 47       		.byte	(.L7-.L9)/2
 105 0032 13       		.byte	(.L10-.L9)/2
 106 0033 47       		.byte	(.L7-.L9)/2
 107 0034 47       		.byte	(.L7-.L9)/2
 108 0035 47       		.byte	(.L7-.L9)/2
 109 0036 17       		.byte	(.L8-.L9)/2
 110              	.LVL2:
 111 0037 00       		.p2align 1
 112              	.L5:
 273:Core/Src/system_stm32l5xx.c ****   }
 113              		.loc 1 273 5 is_stmt 1 view .LVU19
 273:Core/Src/system_stm32l5xx.c ****   }
 114              		.loc 1 273 20 is_stmt 0 view .LVU20
 115 0038 214B     		ldr	r3, .L19
 116 003a 1B68     		ldr	r3, [r3]
 273:Core/Src/system_stm32l5xx.c ****   }
 117              		.loc 1 273 14 view .LVU21
 118 003c C3F30313 		ubfx	r3, r3, #4, #4
 119              	.LVL3:
 273:Core/Src/system_stm32l5xx.c ****   }
ARM GAS  /tmp/ccdyKqM9.s 			page 8


 120              		.loc 1 273 14 view .LVU22
 121 0040 E8E7     		b	.L6
 122              	.LVL4:
 123              	.L12:
 280:Core/Src/system_stm32l5xx.c ****   {
 281:Core/Src/system_stm32l5xx.c ****     case 0x00:  /* MSI used as system clock source */
 282:Core/Src/system_stm32l5xx.c ****       SystemCoreClock = msirange;
 124              		.loc 1 282 7 is_stmt 1 view .LVU23
 125              		.loc 1 282 23 is_stmt 0 view .LVU24
 126 0042 214B     		ldr	r3, .L19+8
 127 0044 1A60     		str	r2, [r3]
 283:Core/Src/system_stm32l5xx.c ****       break;
 128              		.loc 1 283 7 is_stmt 1 view .LVU25
 129 0046 28E0     		b	.L13
 130              	.L11:
 284:Core/Src/system_stm32l5xx.c **** 
 285:Core/Src/system_stm32l5xx.c ****     case 0x04:  /* HSI used as system clock source */
 286:Core/Src/system_stm32l5xx.c ****       SystemCoreClock = HSI_VALUE;
 131              		.loc 1 286 7 view .LVU26
 132              		.loc 1 286 23 is_stmt 0 view .LVU27
 133 0048 1F4B     		ldr	r3, .L19+8
 134 004a 204A     		ldr	r2, .L19+12
 135              	.LVL5:
 136              		.loc 1 286 23 view .LVU28
 137 004c 1A60     		str	r2, [r3]
 287:Core/Src/system_stm32l5xx.c ****       break;
 138              		.loc 1 287 7 is_stmt 1 view .LVU29
 139 004e 24E0     		b	.L13
 140              	.LVL6:
 141              	.L10:
 288:Core/Src/system_stm32l5xx.c **** 
 289:Core/Src/system_stm32l5xx.c ****     case 0x08:  /* HSE used as system clock source */
 290:Core/Src/system_stm32l5xx.c ****       SystemCoreClock = HSE_VALUE;
 142              		.loc 1 290 7 view .LVU30
 143              		.loc 1 290 23 is_stmt 0 view .LVU31
 144 0050 1D4B     		ldr	r3, .L19+8
 145 0052 1F4A     		ldr	r2, .L19+16
 146              	.LVL7:
 147              		.loc 1 290 23 view .LVU32
 148 0054 1A60     		str	r2, [r3]
 291:Core/Src/system_stm32l5xx.c ****       break;
 149              		.loc 1 291 7 is_stmt 1 view .LVU33
 150 0056 20E0     		b	.L13
 151              	.LVL8:
 152              	.L8:
 292:Core/Src/system_stm32l5xx.c **** 
 293:Core/Src/system_stm32l5xx.c ****     case 0x0C:  /* PLL used as system clock  source */
 294:Core/Src/system_stm32l5xx.c ****       /* PLL_VCO = (HSE_VALUE or HSI_VALUE or MSI_VALUE/ PLLM) * PLLN
 295:Core/Src/system_stm32l5xx.c ****          SYSCLK = PLL_VCO / PLLR
 296:Core/Src/system_stm32l5xx.c ****          */
 297:Core/Src/system_stm32l5xx.c ****       pllsource = (RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC);
 153              		.loc 1 297 7 view .LVU34
 154              		.loc 1 297 23 is_stmt 0 view .LVU35
 155 0058 194B     		ldr	r3, .L19
 156 005a D968     		ldr	r1, [r3, #12]
 157              		.loc 1 297 17 view .LVU36
 158 005c 01F00301 		and	r1, r1, #3
ARM GAS  /tmp/ccdyKqM9.s 			page 9


 159              	.LVL9:
 298:Core/Src/system_stm32l5xx.c ****       pllm = ((RCC->PLLCFGR & RCC_PLLCFGR_PLLM) >> 4U) + 1U ;
 160              		.loc 1 298 7 is_stmt 1 view .LVU37
 161              		.loc 1 298 19 is_stmt 0 view .LVU38
 162 0060 DB68     		ldr	r3, [r3, #12]
 163              		.loc 1 298 49 view .LVU39
 164 0062 C3F30313 		ubfx	r3, r3, #4, #4
 165              		.loc 1 298 12 view .LVU40
 166 0066 0133     		adds	r3, r3, #1
 167              	.LVL10:
 299:Core/Src/system_stm32l5xx.c **** 
 300:Core/Src/system_stm32l5xx.c ****       switch (pllsource)
 168              		.loc 1 300 7 is_stmt 1 view .LVU41
 169 0068 0229     		cmp	r1, #2
 170 006a 04D0     		beq	.L14
 171 006c 0329     		cmp	r1, #3
 172 006e 1FD0     		beq	.L15
 301:Core/Src/system_stm32l5xx.c ****       {
 302:Core/Src/system_stm32l5xx.c ****         case 0x02:  /* HSI used as PLL clock source */
 303:Core/Src/system_stm32l5xx.c ****           pllvco = (HSI_VALUE / pllm);
 304:Core/Src/system_stm32l5xx.c ****           break;
 305:Core/Src/system_stm32l5xx.c **** 
 306:Core/Src/system_stm32l5xx.c ****         case 0x03:  /* HSE used as PLL clock source */
 307:Core/Src/system_stm32l5xx.c ****           pllvco = (HSE_VALUE / pllm);
 308:Core/Src/system_stm32l5xx.c ****           break;
 309:Core/Src/system_stm32l5xx.c **** 
 310:Core/Src/system_stm32l5xx.c ****         default:    /* MSI used as PLL clock source */
 311:Core/Src/system_stm32l5xx.c ****           pllvco = (msirange / pllm);
 173              		.loc 1 311 11 view .LVU42
 174              		.loc 1 311 18 is_stmt 0 view .LVU43
 175 0070 B2FBF3F2 		udiv	r2, r2, r3
 176              	.LVL11:
 312:Core/Src/system_stm32l5xx.c ****           break;
 177              		.loc 1 312 11 is_stmt 1 view .LVU44
 178 0074 02E0     		b	.L17
 179              	.LVL12:
 180              	.L14:
 303:Core/Src/system_stm32l5xx.c ****           break;
 181              		.loc 1 303 11 view .LVU45
 303:Core/Src/system_stm32l5xx.c ****           break;
 182              		.loc 1 303 18 is_stmt 0 view .LVU46
 183 0076 154A     		ldr	r2, .L19+12
 184              	.LVL13:
 303:Core/Src/system_stm32l5xx.c ****           break;
 185              		.loc 1 303 18 view .LVU47
 186 0078 B2FBF3F2 		udiv	r2, r2, r3
 187              	.LVL14:
 304:Core/Src/system_stm32l5xx.c **** 
 188              		.loc 1 304 11 is_stmt 1 view .LVU48
 189              	.L17:
 313:Core/Src/system_stm32l5xx.c ****       }
 314:Core/Src/system_stm32l5xx.c ****       pllvco = pllvco * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> 8U);
 190              		.loc 1 314 7 view .LVU49
 191              		.loc 1 314 30 is_stmt 0 view .LVU50
 192 007c 1049     		ldr	r1, .L19
 193              	.LVL15:
 194              		.loc 1 314 30 view .LVU51
ARM GAS  /tmp/ccdyKqM9.s 			page 10


 195 007e CB68     		ldr	r3, [r1, #12]
 196              	.LVL16:
 197              		.loc 1 314 60 view .LVU52
 198 0080 C3F30623 		ubfx	r3, r3, #8, #7
 199              		.loc 1 314 14 view .LVU53
 200 0084 02FB03F3 		mul	r3, r2, r3
 201              	.LVL17:
 315:Core/Src/system_stm32l5xx.c ****       pllr = (((RCC->PLLCFGR & RCC_PLLCFGR_PLLR) >> 25U) + 1U) * 2U;
 202              		.loc 1 315 7 is_stmt 1 view .LVU54
 203              		.loc 1 315 20 is_stmt 0 view .LVU55
 204 0088 CA68     		ldr	r2, [r1, #12]
 205              		.loc 1 315 50 view .LVU56
 206 008a C2F34162 		ubfx	r2, r2, #25, #2
 207              		.loc 1 315 58 view .LVU57
 208 008e 0132     		adds	r2, r2, #1
 209              		.loc 1 315 12 view .LVU58
 210 0090 5200     		lsls	r2, r2, #1
 211              	.LVL18:
 316:Core/Src/system_stm32l5xx.c ****       SystemCoreClock = pllvco/pllr;
 212              		.loc 1 316 7 is_stmt 1 view .LVU59
 213              		.loc 1 316 31 is_stmt 0 view .LVU60
 214 0092 B3FBF2F3 		udiv	r3, r3, r2
 215              	.LVL19:
 216              		.loc 1 316 23 view .LVU61
 217 0096 0C4A     		ldr	r2, .L19+8
 218              	.LVL20:
 219              		.loc 1 316 23 view .LVU62
 220 0098 1360     		str	r3, [r2]
 317:Core/Src/system_stm32l5xx.c ****       break;
 221              		.loc 1 317 7 is_stmt 1 view .LVU63
 222              	.LVL21:
 223              	.L13:
 318:Core/Src/system_stm32l5xx.c **** 
 319:Core/Src/system_stm32l5xx.c ****     default:
 320:Core/Src/system_stm32l5xx.c ****       SystemCoreClock = msirange;
 321:Core/Src/system_stm32l5xx.c ****       break;
 322:Core/Src/system_stm32l5xx.c ****   }
 323:Core/Src/system_stm32l5xx.c ****   /* Compute HCLK clock frequency --------------------------------------------*/
 324:Core/Src/system_stm32l5xx.c ****   /* Get HCLK prescaler */
 325:Core/Src/system_stm32l5xx.c ****   tmp = AHBPrescTable[((RCC->CFGR & RCC_CFGR_HPRE) >> 4U)];
 224              		.loc 1 325 3 view .LVU64
 225              		.loc 1 325 28 is_stmt 0 view .LVU65
 226 009a 094B     		ldr	r3, .L19
 227 009c 9B68     		ldr	r3, [r3, #8]
 228              		.loc 1 325 52 view .LVU66
 229 009e C3F30313 		ubfx	r3, r3, #4, #4
 230              		.loc 1 325 22 view .LVU67
 231 00a2 0C4A     		ldr	r2, .L19+20
 232 00a4 D15C     		ldrb	r1, [r2, r3]	@ zero_extendqisi2
 233              	.LVL22:
 326:Core/Src/system_stm32l5xx.c ****   /* HCLK clock frequency */
 327:Core/Src/system_stm32l5xx.c ****   SystemCoreClock >>= tmp;
 234              		.loc 1 327 3 is_stmt 1 view .LVU68
 235              		.loc 1 327 19 is_stmt 0 view .LVU69
 236 00a6 084A     		ldr	r2, .L19+8
 237 00a8 1368     		ldr	r3, [r2]
 238 00aa CB40     		lsrs	r3, r3, r1
ARM GAS  /tmp/ccdyKqM9.s 			page 11


 239 00ac 1360     		str	r3, [r2]
 328:Core/Src/system_stm32l5xx.c **** }
 240              		.loc 1 328 1 view .LVU70
 241 00ae 7047     		bx	lr
 242              	.LVL23:
 243              	.L15:
 307:Core/Src/system_stm32l5xx.c ****           break;
 244              		.loc 1 307 11 is_stmt 1 view .LVU71
 307:Core/Src/system_stm32l5xx.c ****           break;
 245              		.loc 1 307 18 is_stmt 0 view .LVU72
 246 00b0 074A     		ldr	r2, .L19+16
 247              	.LVL24:
 307:Core/Src/system_stm32l5xx.c ****           break;
 248              		.loc 1 307 18 view .LVU73
 249 00b2 B2FBF3F2 		udiv	r2, r2, r3
 250              	.LVL25:
 308:Core/Src/system_stm32l5xx.c **** 
 251              		.loc 1 308 11 is_stmt 1 view .LVU74
 252 00b6 E1E7     		b	.L17
 253              	.LVL26:
 254              	.L7:
 320:Core/Src/system_stm32l5xx.c ****       break;
 255              		.loc 1 320 7 view .LVU75
 320:Core/Src/system_stm32l5xx.c ****       break;
 256              		.loc 1 320 23 is_stmt 0 view .LVU76
 257 00b8 034B     		ldr	r3, .L19+8
 258 00ba 1A60     		str	r2, [r3]
 321:Core/Src/system_stm32l5xx.c ****   }
 259              		.loc 1 321 7 is_stmt 1 view .LVU77
 260 00bc EDE7     		b	.L13
 261              	.L20:
 262 00be 00BF     		.align	2
 263              	.L19:
 264 00c0 00100240 		.word	1073876992
 265 00c4 00000000 		.word	MSIRangeTable
 266 00c8 00000000 		.word	SystemCoreClock
 267 00cc 0024F400 		.word	16000000
 268 00d0 0048E801 		.word	32000000
 269 00d4 00000000 		.word	AHBPrescTable
 270              		.cfi_endproc
 271              	.LFE153:
 273              		.global	MSIRangeTable
 274              		.section	.rodata.MSIRangeTable,"a"
 275              		.align	2
 278              	MSIRangeTable:
 279 0000 A0860100 		.word	100000
 280 0004 400D0300 		.word	200000
 281 0008 801A0600 		.word	400000
 282 000c 00350C00 		.word	800000
 283 0010 40420F00 		.word	1000000
 284 0014 80841E00 		.word	2000000
 285 0018 00093D00 		.word	4000000
 286 001c 00127A00 		.word	8000000
 287 0020 0024F400 		.word	16000000
 288 0024 00366E01 		.word	24000000
 289 0028 0048E801 		.word	32000000
 290 002c 006CDC02 		.word	48000000
ARM GAS  /tmp/ccdyKqM9.s 			page 12


 291 0030 00000000 		.word	0
 292 0034 00000000 		.word	0
 293 0038 00000000 		.word	0
 294 003c 00000000 		.word	0
 295              		.global	APBPrescTable
 296              		.section	.rodata.APBPrescTable,"a"
 297              		.align	2
 300              	APBPrescTable:
 301 0000 00000000 		.ascii	"\000\000\000\000\001\002\003\004"
 301      01020304 
 302              		.global	AHBPrescTable
 303              		.section	.rodata.AHBPrescTable,"a"
 304              		.align	2
 307              	AHBPrescTable:
 308 0000 00000000 		.ascii	"\000\000\000\000\000\000\000\000\001\002\003\004\006"
 308      00000000 
 308      01020304 
 308      06
 309 000d 070809   		.ascii	"\007\010\011"
 310              		.global	SystemCoreClock
 311              		.section	.data.SystemCoreClock,"aw"
 312              		.align	2
 315              	SystemCoreClock:
 316 0000 00093D00 		.word	4000000
 317              		.text
 318              	.Letext0:
 319              		.file 2 "/home/yul/toolchain/arm-gnu-toolchain-12.2.rel1-x86_64-arm-none-eabi/arm-none-eabi/includ
 320              		.file 3 "/home/yul/toolchain/arm-gnu-toolchain-12.2.rel1-x86_64-arm-none-eabi/arm-none-eabi/includ
 321              		.file 4 "Drivers/CMSIS/Include/core_cm33.h"
 322              		.file 5 "Drivers/CMSIS/Device/ST/STM32L5xx/Include/system_stm32l5xx.h"
 323              		.file 6 "Drivers/CMSIS/Device/ST/STM32L5xx/Include/stm32l562xx.h"
ARM GAS  /tmp/ccdyKqM9.s 			page 13


DEFINED SYMBOLS
                            *ABS*:0000000000000000 system_stm32l5xx.c
     /tmp/ccdyKqM9.s:22     .text.SystemInit:0000000000000000 $t
     /tmp/ccdyKqM9.s:28     .text.SystemInit:0000000000000000 SystemInit
     /tmp/ccdyKqM9.s:47     .text.SystemInit:0000000000000010 $d
     /tmp/ccdyKqM9.s:52     .text.SystemCoreClockUpdate:0000000000000000 $t
     /tmp/ccdyKqM9.s:58     .text.SystemCoreClockUpdate:0000000000000000 SystemCoreClockUpdate
     /tmp/ccdyKqM9.s:97     .text.SystemCoreClockUpdate:000000000000002a $d
     /tmp/ccdyKqM9.s:264    .text.SystemCoreClockUpdate:00000000000000c0 $d
     /tmp/ccdyKqM9.s:278    .rodata.MSIRangeTable:0000000000000000 MSIRangeTable
     /tmp/ccdyKqM9.s:315    .data.SystemCoreClock:0000000000000000 SystemCoreClock
     /tmp/ccdyKqM9.s:307    .rodata.AHBPrescTable:0000000000000000 AHBPrescTable
     /tmp/ccdyKqM9.s:275    .rodata.MSIRangeTable:0000000000000000 $d
     /tmp/ccdyKqM9.s:300    .rodata.APBPrescTable:0000000000000000 APBPrescTable
     /tmp/ccdyKqM9.s:297    .rodata.APBPrescTable:0000000000000000 $d
     /tmp/ccdyKqM9.s:304    .rodata.AHBPrescTable:0000000000000000 $d
     /tmp/ccdyKqM9.s:312    .data.SystemCoreClock:0000000000000000 $d
     /tmp/ccdyKqM9.s:111    .text.SystemCoreClockUpdate:0000000000000037 $d
     /tmp/ccdyKqM9.s:111    .text.SystemCoreClockUpdate:0000000000000038 $t

NO UNDEFINED SYMBOLS

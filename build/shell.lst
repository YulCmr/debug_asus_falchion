ARM GAS  /tmp/ccvX52LM.s 			page 1


   1              		.cpu cortex-m33
   2              		.arch armv8-m.main
   3              		.fpu fpv4-sp-d16
   4              		.arch_extension dsp
   5              		.eabi_attribute 27, 1
   6              		.eabi_attribute 28, 1
   7              		.eabi_attribute 20, 1
   8              		.eabi_attribute 21, 1
   9              		.eabi_attribute 23, 3
  10              		.eabi_attribute 24, 1
  11              		.eabi_attribute 25, 1
  12              		.eabi_attribute 26, 1
  13              		.eabi_attribute 30, 1
  14              		.eabi_attribute 34, 1
  15              		.eabi_attribute 18, 4
  16              		.file	"shell.c"
  17              		.text
  18              	.Ltext0:
  19              		.cfi_sections	.debug_frame
  20              		.file 1 "Core/Src/shell.c"
  21              		.section	.text.__NVIC_SystemReset,"ax",%progbits
  22              		.align	1
  23              		.syntax unified
  24              		.thumb
  25              		.thumb_func
  27              	__NVIC_SystemReset:
  28              	.LFB135:
  29              		.file 2 "Drivers/CMSIS/Include/core_cm33.h"
   1:Drivers/CMSIS/Include/core_cm33.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/core_cm33.h ****  * @file     core_cm33.h
   3:Drivers/CMSIS/Include/core_cm33.h ****  * @brief    CMSIS Cortex-M33 Core Peripheral Access Layer Header File
   4:Drivers/CMSIS/Include/core_cm33.h ****  * @version  V5.1.0
   5:Drivers/CMSIS/Include/core_cm33.h ****  * @date     12. November 2018
   6:Drivers/CMSIS/Include/core_cm33.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/core_cm33.h **** /*
   8:Drivers/CMSIS/Include/core_cm33.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/core_cm33.h ****  *
  10:Drivers/CMSIS/Include/core_cm33.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/core_cm33.h ****  *
  12:Drivers/CMSIS/Include/core_cm33.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/core_cm33.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/core_cm33.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/core_cm33.h ****  *
  16:Drivers/CMSIS/Include/core_cm33.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/core_cm33.h ****  *
  18:Drivers/CMSIS/Include/core_cm33.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/core_cm33.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/core_cm33.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/core_cm33.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/core_cm33.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/core_cm33.h ****  */
  24:Drivers/CMSIS/Include/core_cm33.h **** 
  25:Drivers/CMSIS/Include/core_cm33.h **** #if   defined ( __ICCARM__ )
  26:Drivers/CMSIS/Include/core_cm33.h ****   #pragma system_include         /* treat file as system include file for MISRA check */
  27:Drivers/CMSIS/Include/core_cm33.h **** #elif defined (__clang__)
  28:Drivers/CMSIS/Include/core_cm33.h ****   #pragma clang system_header   /* treat file as system include file */
  29:Drivers/CMSIS/Include/core_cm33.h **** #endif
ARM GAS  /tmp/ccvX52LM.s 			page 2


  30:Drivers/CMSIS/Include/core_cm33.h **** 
  31:Drivers/CMSIS/Include/core_cm33.h **** #ifndef __CORE_CM33_H_GENERIC
  32:Drivers/CMSIS/Include/core_cm33.h **** #define __CORE_CM33_H_GENERIC
  33:Drivers/CMSIS/Include/core_cm33.h **** 
  34:Drivers/CMSIS/Include/core_cm33.h **** #include <stdint.h>
  35:Drivers/CMSIS/Include/core_cm33.h **** 
  36:Drivers/CMSIS/Include/core_cm33.h **** #ifdef __cplusplus
  37:Drivers/CMSIS/Include/core_cm33.h ****  extern "C" {
  38:Drivers/CMSIS/Include/core_cm33.h **** #endif
  39:Drivers/CMSIS/Include/core_cm33.h **** 
  40:Drivers/CMSIS/Include/core_cm33.h **** /**
  41:Drivers/CMSIS/Include/core_cm33.h ****   \page CMSIS_MISRA_Exceptions  MISRA-C:2004 Compliance Exceptions
  42:Drivers/CMSIS/Include/core_cm33.h ****   CMSIS violates the following MISRA-C:2004 rules:
  43:Drivers/CMSIS/Include/core_cm33.h **** 
  44:Drivers/CMSIS/Include/core_cm33.h ****    \li Required Rule 8.5, object/function definition in header file.<br>
  45:Drivers/CMSIS/Include/core_cm33.h ****      Function definitions in header files are used to allow 'inlining'.
  46:Drivers/CMSIS/Include/core_cm33.h **** 
  47:Drivers/CMSIS/Include/core_cm33.h ****    \li Required Rule 18.4, declaration of union type or object of union type: '{...}'.<br>
  48:Drivers/CMSIS/Include/core_cm33.h ****      Unions are used for effective representation of core registers.
  49:Drivers/CMSIS/Include/core_cm33.h **** 
  50:Drivers/CMSIS/Include/core_cm33.h ****    \li Advisory Rule 19.7, Function-like macro defined.<br>
  51:Drivers/CMSIS/Include/core_cm33.h ****      Function-like macros are used to allow more efficient code.
  52:Drivers/CMSIS/Include/core_cm33.h ****  */
  53:Drivers/CMSIS/Include/core_cm33.h **** 
  54:Drivers/CMSIS/Include/core_cm33.h **** 
  55:Drivers/CMSIS/Include/core_cm33.h **** /*******************************************************************************
  56:Drivers/CMSIS/Include/core_cm33.h ****  *                 CMSIS definitions
  57:Drivers/CMSIS/Include/core_cm33.h ****  ******************************************************************************/
  58:Drivers/CMSIS/Include/core_cm33.h **** /**
  59:Drivers/CMSIS/Include/core_cm33.h ****   \ingroup Cortex_M33
  60:Drivers/CMSIS/Include/core_cm33.h ****   @{
  61:Drivers/CMSIS/Include/core_cm33.h ****  */
  62:Drivers/CMSIS/Include/core_cm33.h **** 
  63:Drivers/CMSIS/Include/core_cm33.h **** #include "cmsis_version.h"
  64:Drivers/CMSIS/Include/core_cm33.h **** 
  65:Drivers/CMSIS/Include/core_cm33.h **** /*  CMSIS CM33 definitions */
  66:Drivers/CMSIS/Include/core_cm33.h **** #define __CM33_CMSIS_VERSION_MAIN  (__CM_CMSIS_VERSION_MAIN)                   /*!< \deprecated [31
  67:Drivers/CMSIS/Include/core_cm33.h **** #define __CM33_CMSIS_VERSION_SUB   (__CM_CMSIS_VERSION_SUB)                    /*!< \deprecated [15
  68:Drivers/CMSIS/Include/core_cm33.h **** #define __CM33_CMSIS_VERSION       ((__CM33_CMSIS_VERSION_MAIN << 16U) | \
  69:Drivers/CMSIS/Include/core_cm33.h ****                                      __CM33_CMSIS_VERSION_SUB           )      /*!< \deprecated CMS
  70:Drivers/CMSIS/Include/core_cm33.h **** 
  71:Drivers/CMSIS/Include/core_cm33.h **** #define __CORTEX_M                 (33U)                                       /*!< Cortex-M Core *
  72:Drivers/CMSIS/Include/core_cm33.h **** 
  73:Drivers/CMSIS/Include/core_cm33.h **** /** __FPU_USED indicates whether an FPU is used or not.
  74:Drivers/CMSIS/Include/core_cm33.h ****     For this, __FPU_PRESENT has to be checked prior to making use of FPU specific registers and fun
  75:Drivers/CMSIS/Include/core_cm33.h **** */
  76:Drivers/CMSIS/Include/core_cm33.h **** #if defined ( __CC_ARM )
  77:Drivers/CMSIS/Include/core_cm33.h ****   #if defined (__TARGET_FPU_VFP)
  78:Drivers/CMSIS/Include/core_cm33.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
  79:Drivers/CMSIS/Include/core_cm33.h ****       #define __FPU_USED       1U
  80:Drivers/CMSIS/Include/core_cm33.h ****     #else
  81:Drivers/CMSIS/Include/core_cm33.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
  82:Drivers/CMSIS/Include/core_cm33.h ****       #define __FPU_USED       0U
  83:Drivers/CMSIS/Include/core_cm33.h ****     #endif
  84:Drivers/CMSIS/Include/core_cm33.h ****   #else
  85:Drivers/CMSIS/Include/core_cm33.h ****     #define __FPU_USED         0U
  86:Drivers/CMSIS/Include/core_cm33.h ****   #endif
ARM GAS  /tmp/ccvX52LM.s 			page 3


  87:Drivers/CMSIS/Include/core_cm33.h **** 
  88:Drivers/CMSIS/Include/core_cm33.h ****   #if defined (__ARM_FEATURE_DSP) && (__ARM_FEATURE_DSP == 1U)
  89:Drivers/CMSIS/Include/core_cm33.h ****     #if defined (__DSP_PRESENT) && (__DSP_PRESENT == 1U)
  90:Drivers/CMSIS/Include/core_cm33.h ****       #define __DSP_USED       1U
  91:Drivers/CMSIS/Include/core_cm33.h ****     #else
  92:Drivers/CMSIS/Include/core_cm33.h ****       #error "Compiler generates DSP (SIMD) instructions for a devices without DSP extensions (chec
  93:Drivers/CMSIS/Include/core_cm33.h ****       #define __DSP_USED         0U
  94:Drivers/CMSIS/Include/core_cm33.h ****     #endif
  95:Drivers/CMSIS/Include/core_cm33.h ****   #else
  96:Drivers/CMSIS/Include/core_cm33.h ****     #define __DSP_USED         0U
  97:Drivers/CMSIS/Include/core_cm33.h ****   #endif
  98:Drivers/CMSIS/Include/core_cm33.h **** 
  99:Drivers/CMSIS/Include/core_cm33.h **** #elif defined (__ARMCC_VERSION) && (__ARMCC_VERSION >= 6010050)
 100:Drivers/CMSIS/Include/core_cm33.h ****   #if defined (__ARM_FP)
 101:Drivers/CMSIS/Include/core_cm33.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 102:Drivers/CMSIS/Include/core_cm33.h ****       #define __FPU_USED       1U
 103:Drivers/CMSIS/Include/core_cm33.h ****     #else
 104:Drivers/CMSIS/Include/core_cm33.h ****       #warning "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESEN
 105:Drivers/CMSIS/Include/core_cm33.h ****       #define __FPU_USED       0U
 106:Drivers/CMSIS/Include/core_cm33.h ****     #endif
 107:Drivers/CMSIS/Include/core_cm33.h ****   #else
 108:Drivers/CMSIS/Include/core_cm33.h ****     #define __FPU_USED         0U
 109:Drivers/CMSIS/Include/core_cm33.h ****   #endif
 110:Drivers/CMSIS/Include/core_cm33.h **** 
 111:Drivers/CMSIS/Include/core_cm33.h ****   #if defined (__ARM_FEATURE_DSP) && (__ARM_FEATURE_DSP == 1U)
 112:Drivers/CMSIS/Include/core_cm33.h ****     #if defined (__DSP_PRESENT) && (__DSP_PRESENT == 1U)
 113:Drivers/CMSIS/Include/core_cm33.h ****       #define __DSP_USED       1U
 114:Drivers/CMSIS/Include/core_cm33.h ****     #else
 115:Drivers/CMSIS/Include/core_cm33.h ****       #error "Compiler generates DSP (SIMD) instructions for a devices without DSP extensions (chec
 116:Drivers/CMSIS/Include/core_cm33.h ****       #define __DSP_USED         0U
 117:Drivers/CMSIS/Include/core_cm33.h ****     #endif
 118:Drivers/CMSIS/Include/core_cm33.h ****   #else
 119:Drivers/CMSIS/Include/core_cm33.h ****     #define __DSP_USED         0U
 120:Drivers/CMSIS/Include/core_cm33.h ****   #endif
 121:Drivers/CMSIS/Include/core_cm33.h **** 
 122:Drivers/CMSIS/Include/core_cm33.h **** #elif defined ( __GNUC__ )
 123:Drivers/CMSIS/Include/core_cm33.h ****   #if defined (__VFP_FP__) && !defined(__SOFTFP__)
 124:Drivers/CMSIS/Include/core_cm33.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 125:Drivers/CMSIS/Include/core_cm33.h ****       #define __FPU_USED       1U
 126:Drivers/CMSIS/Include/core_cm33.h ****     #else
 127:Drivers/CMSIS/Include/core_cm33.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 128:Drivers/CMSIS/Include/core_cm33.h ****       #define __FPU_USED       0U
 129:Drivers/CMSIS/Include/core_cm33.h ****     #endif
 130:Drivers/CMSIS/Include/core_cm33.h ****   #else
 131:Drivers/CMSIS/Include/core_cm33.h ****     #define __FPU_USED         0U
 132:Drivers/CMSIS/Include/core_cm33.h ****   #endif
 133:Drivers/CMSIS/Include/core_cm33.h **** 
 134:Drivers/CMSIS/Include/core_cm33.h ****   #if defined (__ARM_FEATURE_DSP) && (__ARM_FEATURE_DSP == 1U)
 135:Drivers/CMSIS/Include/core_cm33.h ****     #if defined (__DSP_PRESENT) && (__DSP_PRESENT == 1U)
 136:Drivers/CMSIS/Include/core_cm33.h ****       #define __DSP_USED       1U
 137:Drivers/CMSIS/Include/core_cm33.h ****     #else
 138:Drivers/CMSIS/Include/core_cm33.h ****       #error "Compiler generates DSP (SIMD) instructions for a devices without DSP extensions (chec
 139:Drivers/CMSIS/Include/core_cm33.h ****       #define __DSP_USED         0U
 140:Drivers/CMSIS/Include/core_cm33.h ****     #endif
 141:Drivers/CMSIS/Include/core_cm33.h ****   #else
 142:Drivers/CMSIS/Include/core_cm33.h ****     #define __DSP_USED         0U
 143:Drivers/CMSIS/Include/core_cm33.h ****   #endif
ARM GAS  /tmp/ccvX52LM.s 			page 4


 144:Drivers/CMSIS/Include/core_cm33.h **** 
 145:Drivers/CMSIS/Include/core_cm33.h **** #elif defined ( __ICCARM__ )
 146:Drivers/CMSIS/Include/core_cm33.h ****   #if defined (__ARMVFP__)
 147:Drivers/CMSIS/Include/core_cm33.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 148:Drivers/CMSIS/Include/core_cm33.h ****       #define __FPU_USED       1U
 149:Drivers/CMSIS/Include/core_cm33.h ****     #else
 150:Drivers/CMSIS/Include/core_cm33.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 151:Drivers/CMSIS/Include/core_cm33.h ****       #define __FPU_USED       0U
 152:Drivers/CMSIS/Include/core_cm33.h ****     #endif
 153:Drivers/CMSIS/Include/core_cm33.h ****   #else
 154:Drivers/CMSIS/Include/core_cm33.h ****     #define __FPU_USED         0U
 155:Drivers/CMSIS/Include/core_cm33.h ****   #endif
 156:Drivers/CMSIS/Include/core_cm33.h **** 
 157:Drivers/CMSIS/Include/core_cm33.h ****   #if defined (__ARM_FEATURE_DSP) && (__ARM_FEATURE_DSP == 1U)
 158:Drivers/CMSIS/Include/core_cm33.h ****     #if defined (__DSP_PRESENT) && (__DSP_PRESENT == 1U)
 159:Drivers/CMSIS/Include/core_cm33.h ****       #define __DSP_USED       1U
 160:Drivers/CMSIS/Include/core_cm33.h ****     #else
 161:Drivers/CMSIS/Include/core_cm33.h ****       #error "Compiler generates DSP (SIMD) instructions for a devices without DSP extensions (chec
 162:Drivers/CMSIS/Include/core_cm33.h ****       #define __DSP_USED         0U
 163:Drivers/CMSIS/Include/core_cm33.h ****     #endif
 164:Drivers/CMSIS/Include/core_cm33.h ****   #else
 165:Drivers/CMSIS/Include/core_cm33.h ****     #define __DSP_USED         0U
 166:Drivers/CMSIS/Include/core_cm33.h ****   #endif
 167:Drivers/CMSIS/Include/core_cm33.h **** 
 168:Drivers/CMSIS/Include/core_cm33.h **** #elif defined ( __TI_ARM__ )
 169:Drivers/CMSIS/Include/core_cm33.h ****   #if defined (__TI_VFP_SUPPORT__)
 170:Drivers/CMSIS/Include/core_cm33.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 171:Drivers/CMSIS/Include/core_cm33.h ****       #define __FPU_USED       1U
 172:Drivers/CMSIS/Include/core_cm33.h ****     #else
 173:Drivers/CMSIS/Include/core_cm33.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 174:Drivers/CMSIS/Include/core_cm33.h ****       #define __FPU_USED       0U
 175:Drivers/CMSIS/Include/core_cm33.h ****     #endif
 176:Drivers/CMSIS/Include/core_cm33.h ****   #else
 177:Drivers/CMSIS/Include/core_cm33.h ****     #define __FPU_USED         0U
 178:Drivers/CMSIS/Include/core_cm33.h ****   #endif
 179:Drivers/CMSIS/Include/core_cm33.h **** 
 180:Drivers/CMSIS/Include/core_cm33.h **** #elif defined ( __TASKING__ )
 181:Drivers/CMSIS/Include/core_cm33.h ****   #if defined (__FPU_VFP__)
 182:Drivers/CMSIS/Include/core_cm33.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 183:Drivers/CMSIS/Include/core_cm33.h ****       #define __FPU_USED       1U
 184:Drivers/CMSIS/Include/core_cm33.h ****     #else
 185:Drivers/CMSIS/Include/core_cm33.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 186:Drivers/CMSIS/Include/core_cm33.h ****       #define __FPU_USED       0U
 187:Drivers/CMSIS/Include/core_cm33.h ****     #endif
 188:Drivers/CMSIS/Include/core_cm33.h ****   #else
 189:Drivers/CMSIS/Include/core_cm33.h ****     #define __FPU_USED         0U
 190:Drivers/CMSIS/Include/core_cm33.h ****   #endif
 191:Drivers/CMSIS/Include/core_cm33.h **** 
 192:Drivers/CMSIS/Include/core_cm33.h **** #elif defined ( __CSMC__ )
 193:Drivers/CMSIS/Include/core_cm33.h ****   #if ( __CSMC__ & 0x400U)
 194:Drivers/CMSIS/Include/core_cm33.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 195:Drivers/CMSIS/Include/core_cm33.h ****       #define __FPU_USED       1U
 196:Drivers/CMSIS/Include/core_cm33.h ****     #else
 197:Drivers/CMSIS/Include/core_cm33.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 198:Drivers/CMSIS/Include/core_cm33.h ****       #define __FPU_USED       0U
 199:Drivers/CMSIS/Include/core_cm33.h ****     #endif
 200:Drivers/CMSIS/Include/core_cm33.h ****   #else
ARM GAS  /tmp/ccvX52LM.s 			page 5


 201:Drivers/CMSIS/Include/core_cm33.h ****     #define __FPU_USED         0U
 202:Drivers/CMSIS/Include/core_cm33.h ****   #endif
 203:Drivers/CMSIS/Include/core_cm33.h **** 
 204:Drivers/CMSIS/Include/core_cm33.h **** #endif
 205:Drivers/CMSIS/Include/core_cm33.h **** 
 206:Drivers/CMSIS/Include/core_cm33.h **** #include "cmsis_compiler.h"               /* CMSIS compiler specific defines */
 207:Drivers/CMSIS/Include/core_cm33.h **** 
 208:Drivers/CMSIS/Include/core_cm33.h **** 
 209:Drivers/CMSIS/Include/core_cm33.h **** #ifdef __cplusplus
 210:Drivers/CMSIS/Include/core_cm33.h **** }
 211:Drivers/CMSIS/Include/core_cm33.h **** #endif
 212:Drivers/CMSIS/Include/core_cm33.h **** 
 213:Drivers/CMSIS/Include/core_cm33.h **** #endif /* __CORE_CM33_H_GENERIC */
 214:Drivers/CMSIS/Include/core_cm33.h **** 
 215:Drivers/CMSIS/Include/core_cm33.h **** #ifndef __CMSIS_GENERIC
 216:Drivers/CMSIS/Include/core_cm33.h **** 
 217:Drivers/CMSIS/Include/core_cm33.h **** #ifndef __CORE_CM33_H_DEPENDANT
 218:Drivers/CMSIS/Include/core_cm33.h **** #define __CORE_CM33_H_DEPENDANT
 219:Drivers/CMSIS/Include/core_cm33.h **** 
 220:Drivers/CMSIS/Include/core_cm33.h **** #ifdef __cplusplus
 221:Drivers/CMSIS/Include/core_cm33.h ****  extern "C" {
 222:Drivers/CMSIS/Include/core_cm33.h **** #endif
 223:Drivers/CMSIS/Include/core_cm33.h **** 
 224:Drivers/CMSIS/Include/core_cm33.h **** /* check device defines and use defaults */
 225:Drivers/CMSIS/Include/core_cm33.h **** #if defined __CHECK_DEVICE_DEFINES
 226:Drivers/CMSIS/Include/core_cm33.h ****   #ifndef __CM33_REV
 227:Drivers/CMSIS/Include/core_cm33.h ****     #define __CM33_REV                0x0000U
 228:Drivers/CMSIS/Include/core_cm33.h ****     #warning "__CM33_REV not defined in device header file; using default!"
 229:Drivers/CMSIS/Include/core_cm33.h ****   #endif
 230:Drivers/CMSIS/Include/core_cm33.h **** 
 231:Drivers/CMSIS/Include/core_cm33.h ****   #ifndef __FPU_PRESENT
 232:Drivers/CMSIS/Include/core_cm33.h ****     #define __FPU_PRESENT             0U
 233:Drivers/CMSIS/Include/core_cm33.h ****     #warning "__FPU_PRESENT not defined in device header file; using default!"
 234:Drivers/CMSIS/Include/core_cm33.h ****   #endif
 235:Drivers/CMSIS/Include/core_cm33.h **** 
 236:Drivers/CMSIS/Include/core_cm33.h ****   #ifndef __MPU_PRESENT
 237:Drivers/CMSIS/Include/core_cm33.h ****     #define __MPU_PRESENT             0U
 238:Drivers/CMSIS/Include/core_cm33.h ****     #warning "__MPU_PRESENT not defined in device header file; using default!"
 239:Drivers/CMSIS/Include/core_cm33.h ****   #endif
 240:Drivers/CMSIS/Include/core_cm33.h **** 
 241:Drivers/CMSIS/Include/core_cm33.h ****   #ifndef __SAUREGION_PRESENT
 242:Drivers/CMSIS/Include/core_cm33.h ****     #define __SAUREGION_PRESENT       0U
 243:Drivers/CMSIS/Include/core_cm33.h ****     #warning "__SAUREGION_PRESENT not defined in device header file; using default!"
 244:Drivers/CMSIS/Include/core_cm33.h ****   #endif
 245:Drivers/CMSIS/Include/core_cm33.h **** 
 246:Drivers/CMSIS/Include/core_cm33.h ****   #ifndef __DSP_PRESENT
 247:Drivers/CMSIS/Include/core_cm33.h ****     #define __DSP_PRESENT             0U
 248:Drivers/CMSIS/Include/core_cm33.h ****     #warning "__DSP_PRESENT not defined in device header file; using default!"
 249:Drivers/CMSIS/Include/core_cm33.h ****   #endif
 250:Drivers/CMSIS/Include/core_cm33.h **** 
 251:Drivers/CMSIS/Include/core_cm33.h ****   #ifndef __NVIC_PRIO_BITS
 252:Drivers/CMSIS/Include/core_cm33.h ****     #define __NVIC_PRIO_BITS          3U
 253:Drivers/CMSIS/Include/core_cm33.h ****     #warning "__NVIC_PRIO_BITS not defined in device header file; using default!"
 254:Drivers/CMSIS/Include/core_cm33.h ****   #endif
 255:Drivers/CMSIS/Include/core_cm33.h **** 
 256:Drivers/CMSIS/Include/core_cm33.h ****   #ifndef __Vendor_SysTickConfig
 257:Drivers/CMSIS/Include/core_cm33.h ****     #define __Vendor_SysTickConfig    0U
ARM GAS  /tmp/ccvX52LM.s 			page 6


 258:Drivers/CMSIS/Include/core_cm33.h ****     #warning "__Vendor_SysTickConfig not defined in device header file; using default!"
 259:Drivers/CMSIS/Include/core_cm33.h ****   #endif
 260:Drivers/CMSIS/Include/core_cm33.h **** #endif
 261:Drivers/CMSIS/Include/core_cm33.h **** 
 262:Drivers/CMSIS/Include/core_cm33.h **** /* IO definitions (access restrictions to peripheral registers) */
 263:Drivers/CMSIS/Include/core_cm33.h **** /**
 264:Drivers/CMSIS/Include/core_cm33.h ****     \defgroup CMSIS_glob_defs CMSIS Global Defines
 265:Drivers/CMSIS/Include/core_cm33.h **** 
 266:Drivers/CMSIS/Include/core_cm33.h ****     <strong>IO Type Qualifiers</strong> are used
 267:Drivers/CMSIS/Include/core_cm33.h ****     \li to specify the access to peripheral variables.
 268:Drivers/CMSIS/Include/core_cm33.h ****     \li for automatic generation of peripheral register debug information.
 269:Drivers/CMSIS/Include/core_cm33.h **** */
 270:Drivers/CMSIS/Include/core_cm33.h **** #ifdef __cplusplus
 271:Drivers/CMSIS/Include/core_cm33.h ****   #define   __I     volatile             /*!< Defines 'read only' permissions */
 272:Drivers/CMSIS/Include/core_cm33.h **** #else
 273:Drivers/CMSIS/Include/core_cm33.h ****   #define   __I     volatile const       /*!< Defines 'read only' permissions */
 274:Drivers/CMSIS/Include/core_cm33.h **** #endif
 275:Drivers/CMSIS/Include/core_cm33.h **** #define     __O     volatile             /*!< Defines 'write only' permissions */
 276:Drivers/CMSIS/Include/core_cm33.h **** #define     __IO    volatile             /*!< Defines 'read / write' permissions */
 277:Drivers/CMSIS/Include/core_cm33.h **** 
 278:Drivers/CMSIS/Include/core_cm33.h **** /* following defines should be used for structure members */
 279:Drivers/CMSIS/Include/core_cm33.h **** #define     __IM     volatile const      /*! Defines 'read only' structure member permissions */
 280:Drivers/CMSIS/Include/core_cm33.h **** #define     __OM     volatile            /*! Defines 'write only' structure member permissions */
 281:Drivers/CMSIS/Include/core_cm33.h **** #define     __IOM    volatile            /*! Defines 'read / write' structure member permissions */
 282:Drivers/CMSIS/Include/core_cm33.h **** 
 283:Drivers/CMSIS/Include/core_cm33.h **** /*@} end of group Cortex_M33 */
 284:Drivers/CMSIS/Include/core_cm33.h **** 
 285:Drivers/CMSIS/Include/core_cm33.h **** 
 286:Drivers/CMSIS/Include/core_cm33.h **** 
 287:Drivers/CMSIS/Include/core_cm33.h **** /*******************************************************************************
 288:Drivers/CMSIS/Include/core_cm33.h ****  *                 Register Abstraction
 289:Drivers/CMSIS/Include/core_cm33.h ****   Core Register contain:
 290:Drivers/CMSIS/Include/core_cm33.h ****   - Core Register
 291:Drivers/CMSIS/Include/core_cm33.h ****   - Core NVIC Register
 292:Drivers/CMSIS/Include/core_cm33.h ****   - Core SCB Register
 293:Drivers/CMSIS/Include/core_cm33.h ****   - Core SysTick Register
 294:Drivers/CMSIS/Include/core_cm33.h ****   - Core Debug Register
 295:Drivers/CMSIS/Include/core_cm33.h ****   - Core MPU Register
 296:Drivers/CMSIS/Include/core_cm33.h ****   - Core SAU Register
 297:Drivers/CMSIS/Include/core_cm33.h ****   - Core FPU Register
 298:Drivers/CMSIS/Include/core_cm33.h ****  ******************************************************************************/
 299:Drivers/CMSIS/Include/core_cm33.h **** /**
 300:Drivers/CMSIS/Include/core_cm33.h ****   \defgroup CMSIS_core_register Defines and Type Definitions
 301:Drivers/CMSIS/Include/core_cm33.h ****   \brief Type definitions and defines for Cortex-M processor based devices.
 302:Drivers/CMSIS/Include/core_cm33.h **** */
 303:Drivers/CMSIS/Include/core_cm33.h **** 
 304:Drivers/CMSIS/Include/core_cm33.h **** /**
 305:Drivers/CMSIS/Include/core_cm33.h ****   \ingroup    CMSIS_core_register
 306:Drivers/CMSIS/Include/core_cm33.h ****   \defgroup   CMSIS_CORE  Status and Control Registers
 307:Drivers/CMSIS/Include/core_cm33.h ****   \brief      Core Register type definitions.
 308:Drivers/CMSIS/Include/core_cm33.h ****   @{
 309:Drivers/CMSIS/Include/core_cm33.h ****  */
 310:Drivers/CMSIS/Include/core_cm33.h **** 
 311:Drivers/CMSIS/Include/core_cm33.h **** /**
 312:Drivers/CMSIS/Include/core_cm33.h ****   \brief  Union type to access the Application Program Status Register (APSR).
 313:Drivers/CMSIS/Include/core_cm33.h ****  */
 314:Drivers/CMSIS/Include/core_cm33.h **** typedef union
ARM GAS  /tmp/ccvX52LM.s 			page 7


 315:Drivers/CMSIS/Include/core_cm33.h **** {
 316:Drivers/CMSIS/Include/core_cm33.h ****   struct
 317:Drivers/CMSIS/Include/core_cm33.h ****   {
 318:Drivers/CMSIS/Include/core_cm33.h ****     uint32_t _reserved0:16;              /*!< bit:  0..15  Reserved */
 319:Drivers/CMSIS/Include/core_cm33.h ****     uint32_t GE:4;                       /*!< bit: 16..19  Greater than or Equal flags */
 320:Drivers/CMSIS/Include/core_cm33.h ****     uint32_t _reserved1:7;               /*!< bit: 20..26  Reserved */
 321:Drivers/CMSIS/Include/core_cm33.h ****     uint32_t Q:1;                        /*!< bit:     27  Saturation condition flag */
 322:Drivers/CMSIS/Include/core_cm33.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag */
 323:Drivers/CMSIS/Include/core_cm33.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag */
 324:Drivers/CMSIS/Include/core_cm33.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag */
 325:Drivers/CMSIS/Include/core_cm33.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag */
 326:Drivers/CMSIS/Include/core_cm33.h ****   } b;                                   /*!< Structure used for bit  access */
 327:Drivers/CMSIS/Include/core_cm33.h ****   uint32_t w;                            /*!< Type      used for word access */
 328:Drivers/CMSIS/Include/core_cm33.h **** } APSR_Type;
 329:Drivers/CMSIS/Include/core_cm33.h **** 
 330:Drivers/CMSIS/Include/core_cm33.h **** /* APSR Register Definitions */
 331:Drivers/CMSIS/Include/core_cm33.h **** #define APSR_N_Pos                         31U                                            /*!< APSR
 332:Drivers/CMSIS/Include/core_cm33.h **** #define APSR_N_Msk                         (1UL << APSR_N_Pos)                            /*!< APSR
 333:Drivers/CMSIS/Include/core_cm33.h **** 
 334:Drivers/CMSIS/Include/core_cm33.h **** #define APSR_Z_Pos                         30U                                            /*!< APSR
 335:Drivers/CMSIS/Include/core_cm33.h **** #define APSR_Z_Msk                         (1UL << APSR_Z_Pos)                            /*!< APSR
 336:Drivers/CMSIS/Include/core_cm33.h **** 
 337:Drivers/CMSIS/Include/core_cm33.h **** #define APSR_C_Pos                         29U                                            /*!< APSR
 338:Drivers/CMSIS/Include/core_cm33.h **** #define APSR_C_Msk                         (1UL << APSR_C_Pos)                            /*!< APSR
 339:Drivers/CMSIS/Include/core_cm33.h **** 
 340:Drivers/CMSIS/Include/core_cm33.h **** #define APSR_V_Pos                         28U                                            /*!< APSR
 341:Drivers/CMSIS/Include/core_cm33.h **** #define APSR_V_Msk                         (1UL << APSR_V_Pos)                            /*!< APSR
 342:Drivers/CMSIS/Include/core_cm33.h **** 
 343:Drivers/CMSIS/Include/core_cm33.h **** #define APSR_Q_Pos                         27U                                            /*!< APSR
 344:Drivers/CMSIS/Include/core_cm33.h **** #define APSR_Q_Msk                         (1UL << APSR_Q_Pos)                            /*!< APSR
 345:Drivers/CMSIS/Include/core_cm33.h **** 
 346:Drivers/CMSIS/Include/core_cm33.h **** #define APSR_GE_Pos                        16U                                            /*!< APSR
 347:Drivers/CMSIS/Include/core_cm33.h **** #define APSR_GE_Msk                        (0xFUL << APSR_GE_Pos)                         /*!< APSR
 348:Drivers/CMSIS/Include/core_cm33.h **** 
 349:Drivers/CMSIS/Include/core_cm33.h **** 
 350:Drivers/CMSIS/Include/core_cm33.h **** /**
 351:Drivers/CMSIS/Include/core_cm33.h ****   \brief  Union type to access the Interrupt Program Status Register (IPSR).
 352:Drivers/CMSIS/Include/core_cm33.h ****  */
 353:Drivers/CMSIS/Include/core_cm33.h **** typedef union
 354:Drivers/CMSIS/Include/core_cm33.h **** {
 355:Drivers/CMSIS/Include/core_cm33.h ****   struct
 356:Drivers/CMSIS/Include/core_cm33.h ****   {
 357:Drivers/CMSIS/Include/core_cm33.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number */
 358:Drivers/CMSIS/Include/core_cm33.h ****     uint32_t _reserved0:23;              /*!< bit:  9..31  Reserved */
 359:Drivers/CMSIS/Include/core_cm33.h ****   } b;                                   /*!< Structure used for bit  access */
 360:Drivers/CMSIS/Include/core_cm33.h ****   uint32_t w;                            /*!< Type      used for word access */
 361:Drivers/CMSIS/Include/core_cm33.h **** } IPSR_Type;
 362:Drivers/CMSIS/Include/core_cm33.h **** 
 363:Drivers/CMSIS/Include/core_cm33.h **** /* IPSR Register Definitions */
 364:Drivers/CMSIS/Include/core_cm33.h **** #define IPSR_ISR_Pos                        0U                                            /*!< IPSR
 365:Drivers/CMSIS/Include/core_cm33.h **** #define IPSR_ISR_Msk                       (0x1FFUL /*<< IPSR_ISR_Pos*/)                  /*!< IPSR
 366:Drivers/CMSIS/Include/core_cm33.h **** 
 367:Drivers/CMSIS/Include/core_cm33.h **** 
 368:Drivers/CMSIS/Include/core_cm33.h **** /**
 369:Drivers/CMSIS/Include/core_cm33.h ****   \brief  Union type to access the Special-Purpose Program Status Registers (xPSR).
 370:Drivers/CMSIS/Include/core_cm33.h ****  */
 371:Drivers/CMSIS/Include/core_cm33.h **** typedef union
ARM GAS  /tmp/ccvX52LM.s 			page 8


 372:Drivers/CMSIS/Include/core_cm33.h **** {
 373:Drivers/CMSIS/Include/core_cm33.h ****   struct
 374:Drivers/CMSIS/Include/core_cm33.h ****   {
 375:Drivers/CMSIS/Include/core_cm33.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number */
 376:Drivers/CMSIS/Include/core_cm33.h ****     uint32_t _reserved0:7;               /*!< bit:  9..15  Reserved */
 377:Drivers/CMSIS/Include/core_cm33.h ****     uint32_t GE:4;                       /*!< bit: 16..19  Greater than or Equal flags */
 378:Drivers/CMSIS/Include/core_cm33.h ****     uint32_t _reserved1:4;               /*!< bit: 20..23  Reserved */
 379:Drivers/CMSIS/Include/core_cm33.h ****     uint32_t T:1;                        /*!< bit:     24  Thumb bit        (read 0) */
 380:Drivers/CMSIS/Include/core_cm33.h ****     uint32_t IT:2;                       /*!< bit: 25..26  saved IT state   (read 0) */
 381:Drivers/CMSIS/Include/core_cm33.h ****     uint32_t Q:1;                        /*!< bit:     27  Saturation condition flag */
 382:Drivers/CMSIS/Include/core_cm33.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag */
 383:Drivers/CMSIS/Include/core_cm33.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag */
 384:Drivers/CMSIS/Include/core_cm33.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag */
 385:Drivers/CMSIS/Include/core_cm33.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag */
 386:Drivers/CMSIS/Include/core_cm33.h ****   } b;                                   /*!< Structure used for bit  access */
 387:Drivers/CMSIS/Include/core_cm33.h ****   uint32_t w;                            /*!< Type      used for word access */
 388:Drivers/CMSIS/Include/core_cm33.h **** } xPSR_Type;
 389:Drivers/CMSIS/Include/core_cm33.h **** 
 390:Drivers/CMSIS/Include/core_cm33.h **** /* xPSR Register Definitions */
 391:Drivers/CMSIS/Include/core_cm33.h **** #define xPSR_N_Pos                         31U                                            /*!< xPSR
 392:Drivers/CMSIS/Include/core_cm33.h **** #define xPSR_N_Msk                         (1UL << xPSR_N_Pos)                            /*!< xPSR
 393:Drivers/CMSIS/Include/core_cm33.h **** 
 394:Drivers/CMSIS/Include/core_cm33.h **** #define xPSR_Z_Pos                         30U                                            /*!< xPSR
 395:Drivers/CMSIS/Include/core_cm33.h **** #define xPSR_Z_Msk                         (1UL << xPSR_Z_Pos)                            /*!< xPSR
 396:Drivers/CMSIS/Include/core_cm33.h **** 
 397:Drivers/CMSIS/Include/core_cm33.h **** #define xPSR_C_Pos                         29U                                            /*!< xPSR
 398:Drivers/CMSIS/Include/core_cm33.h **** #define xPSR_C_Msk                         (1UL << xPSR_C_Pos)                            /*!< xPSR
 399:Drivers/CMSIS/Include/core_cm33.h **** 
 400:Drivers/CMSIS/Include/core_cm33.h **** #define xPSR_V_Pos                         28U                                            /*!< xPSR
 401:Drivers/CMSIS/Include/core_cm33.h **** #define xPSR_V_Msk                         (1UL << xPSR_V_Pos)                            /*!< xPSR
 402:Drivers/CMSIS/Include/core_cm33.h **** 
 403:Drivers/CMSIS/Include/core_cm33.h **** #define xPSR_Q_Pos                         27U                                            /*!< xPSR
 404:Drivers/CMSIS/Include/core_cm33.h **** #define xPSR_Q_Msk                         (1UL << xPSR_Q_Pos)                            /*!< xPSR
 405:Drivers/CMSIS/Include/core_cm33.h **** 
 406:Drivers/CMSIS/Include/core_cm33.h **** #define xPSR_IT_Pos                        25U                                            /*!< xPSR
 407:Drivers/CMSIS/Include/core_cm33.h **** #define xPSR_IT_Msk                        (3UL << xPSR_IT_Pos)                           /*!< xPSR
 408:Drivers/CMSIS/Include/core_cm33.h **** 
 409:Drivers/CMSIS/Include/core_cm33.h **** #define xPSR_T_Pos                         24U                                            /*!< xPSR
 410:Drivers/CMSIS/Include/core_cm33.h **** #define xPSR_T_Msk                         (1UL << xPSR_T_Pos)                            /*!< xPSR
 411:Drivers/CMSIS/Include/core_cm33.h **** 
 412:Drivers/CMSIS/Include/core_cm33.h **** #define xPSR_GE_Pos                        16U                                            /*!< xPSR
 413:Drivers/CMSIS/Include/core_cm33.h **** #define xPSR_GE_Msk                        (0xFUL << xPSR_GE_Pos)                         /*!< xPSR
 414:Drivers/CMSIS/Include/core_cm33.h **** 
 415:Drivers/CMSIS/Include/core_cm33.h **** #define xPSR_ISR_Pos                        0U                                            /*!< xPSR
 416:Drivers/CMSIS/Include/core_cm33.h **** #define xPSR_ISR_Msk                       (0x1FFUL /*<< xPSR_ISR_Pos*/)                  /*!< xPSR
 417:Drivers/CMSIS/Include/core_cm33.h **** 
 418:Drivers/CMSIS/Include/core_cm33.h **** 
 419:Drivers/CMSIS/Include/core_cm33.h **** /**
 420:Drivers/CMSIS/Include/core_cm33.h ****   \brief  Union type to access the Control Registers (CONTROL).
 421:Drivers/CMSIS/Include/core_cm33.h ****  */
 422:Drivers/CMSIS/Include/core_cm33.h **** typedef union
 423:Drivers/CMSIS/Include/core_cm33.h **** {
 424:Drivers/CMSIS/Include/core_cm33.h ****   struct
 425:Drivers/CMSIS/Include/core_cm33.h ****   {
 426:Drivers/CMSIS/Include/core_cm33.h ****     uint32_t nPRIV:1;                    /*!< bit:      0  Execution privilege in Thread mode */
 427:Drivers/CMSIS/Include/core_cm33.h ****     uint32_t SPSEL:1;                    /*!< bit:      1  Stack-pointer select */
 428:Drivers/CMSIS/Include/core_cm33.h ****     uint32_t FPCA:1;                     /*!< bit:      2  Floating-point context active */
ARM GAS  /tmp/ccvX52LM.s 			page 9


 429:Drivers/CMSIS/Include/core_cm33.h ****     uint32_t SFPA:1;                     /*!< bit:      3  Secure floating-point active */
 430:Drivers/CMSIS/Include/core_cm33.h ****     uint32_t _reserved1:28;              /*!< bit:  4..31  Reserved */
 431:Drivers/CMSIS/Include/core_cm33.h ****   } b;                                   /*!< Structure used for bit  access */
 432:Drivers/CMSIS/Include/core_cm33.h ****   uint32_t w;                            /*!< Type      used for word access */
 433:Drivers/CMSIS/Include/core_cm33.h **** } CONTROL_Type;
 434:Drivers/CMSIS/Include/core_cm33.h **** 
 435:Drivers/CMSIS/Include/core_cm33.h **** /* CONTROL Register Definitions */
 436:Drivers/CMSIS/Include/core_cm33.h **** #define CONTROL_SFPA_Pos                    3U                                            /*!< CONT
 437:Drivers/CMSIS/Include/core_cm33.h **** #define CONTROL_SFPA_Msk                   (1UL << CONTROL_SFPA_Pos)                      /*!< CONT
 438:Drivers/CMSIS/Include/core_cm33.h **** 
 439:Drivers/CMSIS/Include/core_cm33.h **** #define CONTROL_FPCA_Pos                    2U                                            /*!< CONT
 440:Drivers/CMSIS/Include/core_cm33.h **** #define CONTROL_FPCA_Msk                   (1UL << CONTROL_FPCA_Pos)                      /*!< CONT
 441:Drivers/CMSIS/Include/core_cm33.h **** 
 442:Drivers/CMSIS/Include/core_cm33.h **** #define CONTROL_SPSEL_Pos                   1U                                            /*!< CONT
 443:Drivers/CMSIS/Include/core_cm33.h **** #define CONTROL_SPSEL_Msk                  (1UL << CONTROL_SPSEL_Pos)                     /*!< CONT
 444:Drivers/CMSIS/Include/core_cm33.h **** 
 445:Drivers/CMSIS/Include/core_cm33.h **** #define CONTROL_nPRIV_Pos                   0U                                            /*!< CONT
 446:Drivers/CMSIS/Include/core_cm33.h **** #define CONTROL_nPRIV_Msk                  (1UL /*<< CONTROL_nPRIV_Pos*/)                 /*!< CONT
 447:Drivers/CMSIS/Include/core_cm33.h **** 
 448:Drivers/CMSIS/Include/core_cm33.h **** /*@} end of group CMSIS_CORE */
 449:Drivers/CMSIS/Include/core_cm33.h **** 
 450:Drivers/CMSIS/Include/core_cm33.h **** 
 451:Drivers/CMSIS/Include/core_cm33.h **** /**
 452:Drivers/CMSIS/Include/core_cm33.h ****   \ingroup    CMSIS_core_register
 453:Drivers/CMSIS/Include/core_cm33.h ****   \defgroup   CMSIS_NVIC  Nested Vectored Interrupt Controller (NVIC)
 454:Drivers/CMSIS/Include/core_cm33.h ****   \brief      Type definitions for the NVIC Registers
 455:Drivers/CMSIS/Include/core_cm33.h ****   @{
 456:Drivers/CMSIS/Include/core_cm33.h ****  */
 457:Drivers/CMSIS/Include/core_cm33.h **** 
 458:Drivers/CMSIS/Include/core_cm33.h **** /**
 459:Drivers/CMSIS/Include/core_cm33.h ****   \brief  Structure type to access the Nested Vectored Interrupt Controller (NVIC).
 460:Drivers/CMSIS/Include/core_cm33.h ****  */
 461:Drivers/CMSIS/Include/core_cm33.h **** typedef struct
 462:Drivers/CMSIS/Include/core_cm33.h **** {
 463:Drivers/CMSIS/Include/core_cm33.h ****   __IOM uint32_t ISER[16U];              /*!< Offset: 0x000 (R/W)  Interrupt Set Enable Register */
 464:Drivers/CMSIS/Include/core_cm33.h ****         uint32_t RESERVED0[16U];
 465:Drivers/CMSIS/Include/core_cm33.h ****   __IOM uint32_t ICER[16U];              /*!< Offset: 0x080 (R/W)  Interrupt Clear Enable Register 
 466:Drivers/CMSIS/Include/core_cm33.h ****         uint32_t RSERVED1[16U];
 467:Drivers/CMSIS/Include/core_cm33.h ****   __IOM uint32_t ISPR[16U];              /*!< Offset: 0x100 (R/W)  Interrupt Set Pending Register *
 468:Drivers/CMSIS/Include/core_cm33.h ****         uint32_t RESERVED2[16U];
 469:Drivers/CMSIS/Include/core_cm33.h ****   __IOM uint32_t ICPR[16U];              /*!< Offset: 0x180 (R/W)  Interrupt Clear Pending Register
 470:Drivers/CMSIS/Include/core_cm33.h ****         uint32_t RESERVED3[16U];
 471:Drivers/CMSIS/Include/core_cm33.h ****   __IOM uint32_t IABR[16U];              /*!< Offset: 0x200 (R/W)  Interrupt Active bit Register */
 472:Drivers/CMSIS/Include/core_cm33.h ****         uint32_t RESERVED4[16U];
 473:Drivers/CMSIS/Include/core_cm33.h ****   __IOM uint32_t ITNS[16U];              /*!< Offset: 0x280 (R/W)  Interrupt Non-Secure State Regis
 474:Drivers/CMSIS/Include/core_cm33.h ****         uint32_t RESERVED5[16U];
 475:Drivers/CMSIS/Include/core_cm33.h ****   __IOM uint8_t  IPR[496U];              /*!< Offset: 0x300 (R/W)  Interrupt Priority Register (8Bi
 476:Drivers/CMSIS/Include/core_cm33.h ****         uint32_t RESERVED6[580U];
 477:Drivers/CMSIS/Include/core_cm33.h ****   __OM  uint32_t STIR;                   /*!< Offset: 0xE00 ( /W)  Software Trigger Interrupt Regis
 478:Drivers/CMSIS/Include/core_cm33.h **** }  NVIC_Type;
 479:Drivers/CMSIS/Include/core_cm33.h **** 
 480:Drivers/CMSIS/Include/core_cm33.h **** /* Software Triggered Interrupt Register Definitions */
 481:Drivers/CMSIS/Include/core_cm33.h **** #define NVIC_STIR_INTID_Pos                 0U                                         /*!< STIR: I
 482:Drivers/CMSIS/Include/core_cm33.h **** #define NVIC_STIR_INTID_Msk                (0x1FFUL /*<< NVIC_STIR_INTID_Pos*/)        /*!< STIR: I
 483:Drivers/CMSIS/Include/core_cm33.h **** 
 484:Drivers/CMSIS/Include/core_cm33.h **** /*@} end of group CMSIS_NVIC */
 485:Drivers/CMSIS/Include/core_cm33.h **** 
ARM GAS  /tmp/ccvX52LM.s 			page 10


 486:Drivers/CMSIS/Include/core_cm33.h **** 
 487:Drivers/CMSIS/Include/core_cm33.h **** /**
 488:Drivers/CMSIS/Include/core_cm33.h ****   \ingroup  CMSIS_core_register
 489:Drivers/CMSIS/Include/core_cm33.h ****   \defgroup CMSIS_SCB     System Control Block (SCB)
 490:Drivers/CMSIS/Include/core_cm33.h ****   \brief    Type definitions for the System Control Block Registers
 491:Drivers/CMSIS/Include/core_cm33.h ****   @{
 492:Drivers/CMSIS/Include/core_cm33.h ****  */
 493:Drivers/CMSIS/Include/core_cm33.h **** 
 494:Drivers/CMSIS/Include/core_cm33.h **** /**
 495:Drivers/CMSIS/Include/core_cm33.h ****   \brief  Structure type to access the System Control Block (SCB).
 496:Drivers/CMSIS/Include/core_cm33.h ****  */
 497:Drivers/CMSIS/Include/core_cm33.h **** typedef struct
 498:Drivers/CMSIS/Include/core_cm33.h **** {
 499:Drivers/CMSIS/Include/core_cm33.h ****   __IM  uint32_t CPUID;                  /*!< Offset: 0x000 (R/ )  CPUID Base Register */
 500:Drivers/CMSIS/Include/core_cm33.h ****   __IOM uint32_t ICSR;                   /*!< Offset: 0x004 (R/W)  Interrupt Control and State Regi
 501:Drivers/CMSIS/Include/core_cm33.h ****   __IOM uint32_t VTOR;                   /*!< Offset: 0x008 (R/W)  Vector Table Offset Register */
 502:Drivers/CMSIS/Include/core_cm33.h ****   __IOM uint32_t AIRCR;                  /*!< Offset: 0x00C (R/W)  Application Interrupt and Reset 
 503:Drivers/CMSIS/Include/core_cm33.h ****   __IOM uint32_t SCR;                    /*!< Offset: 0x010 (R/W)  System Control Register */
 504:Drivers/CMSIS/Include/core_cm33.h ****   __IOM uint32_t CCR;                    /*!< Offset: 0x014 (R/W)  Configuration Control Register *
 505:Drivers/CMSIS/Include/core_cm33.h ****   __IOM uint8_t  SHPR[12U];              /*!< Offset: 0x018 (R/W)  System Handlers Priority Registe
 506:Drivers/CMSIS/Include/core_cm33.h ****   __IOM uint32_t SHCSR;                  /*!< Offset: 0x024 (R/W)  System Handler Control and State
 507:Drivers/CMSIS/Include/core_cm33.h ****   __IOM uint32_t CFSR;                   /*!< Offset: 0x028 (R/W)  Configurable Fault Status Regist
 508:Drivers/CMSIS/Include/core_cm33.h ****   __IOM uint32_t HFSR;                   /*!< Offset: 0x02C (R/W)  HardFault Status Register */
 509:Drivers/CMSIS/Include/core_cm33.h ****   __IOM uint32_t DFSR;                   /*!< Offset: 0x030 (R/W)  Debug Fault Status Register */
 510:Drivers/CMSIS/Include/core_cm33.h ****   __IOM uint32_t MMFAR;                  /*!< Offset: 0x034 (R/W)  MemManage Fault Address Register
 511:Drivers/CMSIS/Include/core_cm33.h ****   __IOM uint32_t BFAR;                   /*!< Offset: 0x038 (R/W)  BusFault Address Register */
 512:Drivers/CMSIS/Include/core_cm33.h ****   __IOM uint32_t AFSR;                   /*!< Offset: 0x03C (R/W)  Auxiliary Fault Status Register 
 513:Drivers/CMSIS/Include/core_cm33.h ****   __IM  uint32_t ID_PFR[2U];             /*!< Offset: 0x040 (R/ )  Processor Feature Register */
 514:Drivers/CMSIS/Include/core_cm33.h ****   __IM  uint32_t ID_DFR;                 /*!< Offset: 0x048 (R/ )  Debug Feature Register */
 515:Drivers/CMSIS/Include/core_cm33.h ****   __IM  uint32_t ID_ADR;                 /*!< Offset: 0x04C (R/ )  Auxiliary Feature Register */
 516:Drivers/CMSIS/Include/core_cm33.h ****   __IM  uint32_t ID_MMFR[4U];            /*!< Offset: 0x050 (R/ )  Memory Model Feature Register */
 517:Drivers/CMSIS/Include/core_cm33.h ****   __IM  uint32_t ID_ISAR[6U];            /*!< Offset: 0x060 (R/ )  Instruction Set Attributes Regis
 518:Drivers/CMSIS/Include/core_cm33.h ****   __IM  uint32_t CLIDR;                  /*!< Offset: 0x078 (R/ )  Cache Level ID register */
 519:Drivers/CMSIS/Include/core_cm33.h ****   __IM  uint32_t CTR;                    /*!< Offset: 0x07C (R/ )  Cache Type register */
 520:Drivers/CMSIS/Include/core_cm33.h ****   __IM  uint32_t CCSIDR;                 /*!< Offset: 0x080 (R/ )  Cache Size ID Register */
 521:Drivers/CMSIS/Include/core_cm33.h ****   __IOM uint32_t CSSELR;                 /*!< Offset: 0x084 (R/W)  Cache Size Selection Register */
 522:Drivers/CMSIS/Include/core_cm33.h ****   __IOM uint32_t CPACR;                  /*!< Offset: 0x088 (R/W)  Coprocessor Access Control Regis
 523:Drivers/CMSIS/Include/core_cm33.h ****   __IOM uint32_t NSACR;                  /*!< Offset: 0x08C (R/W)  Non-Secure Access Control Regist
 524:Drivers/CMSIS/Include/core_cm33.h ****         uint32_t RESERVED3[92U];
 525:Drivers/CMSIS/Include/core_cm33.h ****   __OM  uint32_t STIR;                   /*!< Offset: 0x200 ( /W)  Software Triggered Interrupt Reg
 526:Drivers/CMSIS/Include/core_cm33.h ****         uint32_t RESERVED4[15U];
 527:Drivers/CMSIS/Include/core_cm33.h ****   __IM  uint32_t MVFR0;                  /*!< Offset: 0x240 (R/ )  Media and VFP Feature Register 0
 528:Drivers/CMSIS/Include/core_cm33.h ****   __IM  uint32_t MVFR1;                  /*!< Offset: 0x244 (R/ )  Media and VFP Feature Register 1
 529:Drivers/CMSIS/Include/core_cm33.h ****   __IM  uint32_t MVFR2;                  /*!< Offset: 0x248 (R/ )  Media and VFP Feature Register 2
 530:Drivers/CMSIS/Include/core_cm33.h ****         uint32_t RESERVED5[1U];
 531:Drivers/CMSIS/Include/core_cm33.h ****   __OM  uint32_t ICIALLU;                /*!< Offset: 0x250 ( /W)  I-Cache Invalidate All to PoU */
 532:Drivers/CMSIS/Include/core_cm33.h ****         uint32_t RESERVED6[1U];
 533:Drivers/CMSIS/Include/core_cm33.h ****   __OM  uint32_t ICIMVAU;                /*!< Offset: 0x258 ( /W)  I-Cache Invalidate by MVA to PoU
 534:Drivers/CMSIS/Include/core_cm33.h ****   __OM  uint32_t DCIMVAC;                /*!< Offset: 0x25C ( /W)  D-Cache Invalidate by MVA to PoC
 535:Drivers/CMSIS/Include/core_cm33.h ****   __OM  uint32_t DCISW;                  /*!< Offset: 0x260 ( /W)  D-Cache Invalidate by Set-way */
 536:Drivers/CMSIS/Include/core_cm33.h ****   __OM  uint32_t DCCMVAU;                /*!< Offset: 0x264 ( /W)  D-Cache Clean by MVA to PoU */
 537:Drivers/CMSIS/Include/core_cm33.h ****   __OM  uint32_t DCCMVAC;                /*!< Offset: 0x268 ( /W)  D-Cache Clean by MVA to PoC */
 538:Drivers/CMSIS/Include/core_cm33.h ****   __OM  uint32_t DCCSW;                  /*!< Offset: 0x26C ( /W)  D-Cache Clean by Set-way */
 539:Drivers/CMSIS/Include/core_cm33.h ****   __OM  uint32_t DCCIMVAC;               /*!< Offset: 0x270 ( /W)  D-Cache Clean and Invalidate by 
 540:Drivers/CMSIS/Include/core_cm33.h ****   __OM  uint32_t DCCISW;                 /*!< Offset: 0x274 ( /W)  D-Cache Clean and Invalidate by 
 541:Drivers/CMSIS/Include/core_cm33.h **** } SCB_Type;
 542:Drivers/CMSIS/Include/core_cm33.h **** 
ARM GAS  /tmp/ccvX52LM.s 			page 11


 543:Drivers/CMSIS/Include/core_cm33.h **** /* SCB CPUID Register Definitions */
 544:Drivers/CMSIS/Include/core_cm33.h **** #define SCB_CPUID_IMPLEMENTER_Pos          24U                                            /*!< SCB 
 545:Drivers/CMSIS/Include/core_cm33.h **** #define SCB_CPUID_IMPLEMENTER_Msk          (0xFFUL << SCB_CPUID_IMPLEMENTER_Pos)          /*!< SCB 
 546:Drivers/CMSIS/Include/core_cm33.h **** 
 547:Drivers/CMSIS/Include/core_cm33.h **** #define SCB_CPUID_VARIANT_Pos              20U                                            /*!< SCB 
 548:Drivers/CMSIS/Include/core_cm33.h **** #define SCB_CPUID_VARIANT_Msk              (0xFUL << SCB_CPUID_VARIANT_Pos)               /*!< SCB 
 549:Drivers/CMSIS/Include/core_cm33.h **** 
 550:Drivers/CMSIS/Include/core_cm33.h **** #define SCB_CPUID_ARCHITECTURE_Pos         16U                                            /*!< SCB 
 551:Drivers/CMSIS/Include/core_cm33.h **** #define SCB_CPUID_ARCHITECTURE_Msk         (0xFUL << SCB_CPUID_ARCHITECTURE_Pos)          /*!< SCB 
 552:Drivers/CMSIS/Include/core_cm33.h **** 
 553:Drivers/CMSIS/Include/core_cm33.h **** #define SCB_CPUID_PARTNO_Pos                4U                                            /*!< SCB 
 554:Drivers/CMSIS/Include/core_cm33.h **** #define SCB_CPUID_PARTNO_Msk               (0xFFFUL << SCB_CPUID_PARTNO_Pos)              /*!< SCB 
 555:Drivers/CMSIS/Include/core_cm33.h **** 
 556:Drivers/CMSIS/Include/core_cm33.h **** #define SCB_CPUID_REVISION_Pos              0U                                            /*!< SCB 
 557:Drivers/CMSIS/Include/core_cm33.h **** #define SCB_CPUID_REVISION_Msk             (0xFUL /*<< SCB_CPUID_REVISION_Pos*/)          /*!< SCB 
 558:Drivers/CMSIS/Include/core_cm33.h **** 
 559:Drivers/CMSIS/Include/core_cm33.h **** /* SCB Interrupt Control State Register Definitions */
 560:Drivers/CMSIS/Include/core_cm33.h **** #define SCB_ICSR_PENDNMISET_Pos            31U                                            /*!< SCB 
 561:Drivers/CMSIS/Include/core_cm33.h **** #define SCB_ICSR_PENDNMISET_Msk            (1UL << SCB_ICSR_PENDNMISET_Pos)               /*!< SCB 
 562:Drivers/CMSIS/Include/core_cm33.h **** 
 563:Drivers/CMSIS/Include/core_cm33.h **** #define SCB_ICSR_NMIPENDSET_Pos            SCB_ICSR_PENDNMISET_Pos                        /*!< SCB 
 564:Drivers/CMSIS/Include/core_cm33.h **** #define SCB_ICSR_NMIPENDSET_Msk            SCB_ICSR_PENDNMISET_Msk                        /*!< SCB 
 565:Drivers/CMSIS/Include/core_cm33.h **** 
 566:Drivers/CMSIS/Include/core_cm33.h **** #define SCB_ICSR_PENDNMICLR_Pos            30U                                            /*!< SCB 
 567:Drivers/CMSIS/Include/core_cm33.h **** #define SCB_ICSR_PENDNMICLR_Msk            (1UL << SCB_ICSR_PENDNMICLR_Pos)               /*!< SCB 
 568:Drivers/CMSIS/Include/core_cm33.h **** 
 569:Drivers/CMSIS/Include/core_cm33.h **** #define SCB_ICSR_PENDSVSET_Pos             28U                                            /*!< SCB 
 570:Drivers/CMSIS/Include/core_cm33.h **** #define SCB_ICSR_PENDSVSET_Msk             (1UL << SCB_ICSR_PENDSVSET_Pos)                /*!< SCB 
 571:Drivers/CMSIS/Include/core_cm33.h **** 
 572:Drivers/CMSIS/Include/core_cm33.h **** #define SCB_ICSR_PENDSVCLR_Pos             27U                                            /*!< SCB 
 573:Drivers/CMSIS/Include/core_cm33.h **** #define SCB_ICSR_PENDSVCLR_Msk             (1UL << SCB_ICSR_PENDSVCLR_Pos)                /*!< SCB 
 574:Drivers/CMSIS/Include/core_cm33.h **** 
 575:Drivers/CMSIS/Include/core_cm33.h **** #define SCB_ICSR_PENDSTSET_Pos             26U                                            /*!< SCB 
 576:Drivers/CMSIS/Include/core_cm33.h **** #define SCB_ICSR_PENDSTSET_Msk             (1UL << SCB_ICSR_PENDSTSET_Pos)                /*!< SCB 
 577:Drivers/CMSIS/Include/core_cm33.h **** 
 578:Drivers/CMSIS/Include/core_cm33.h **** #define SCB_ICSR_PENDSTCLR_Pos             25U                                            /*!< SCB 
 579:Drivers/CMSIS/Include/core_cm33.h **** #define SCB_ICSR_PENDSTCLR_Msk             (1UL << SCB_ICSR_PENDSTCLR_Pos)                /*!< SCB 
 580:Drivers/CMSIS/Include/core_cm33.h **** 
 581:Drivers/CMSIS/Include/core_cm33.h **** #define SCB_ICSR_STTNS_Pos                 24U                                            /*!< SCB 
 582:Drivers/CMSIS/Include/core_cm33.h **** #define SCB_ICSR_STTNS_Msk                 (1UL << SCB_ICSR_STTNS_Pos)                    /*!< SCB 
 583:Drivers/CMSIS/Include/core_cm33.h **** 
 584:Drivers/CMSIS/Include/core_cm33.h **** #define SCB_ICSR_ISRPREEMPT_Pos            23U                                            /*!< SCB 
 585:Drivers/CMSIS/Include/core_cm33.h **** #define SCB_ICSR_ISRPREEMPT_Msk            (1UL << SCB_ICSR_ISRPREEMPT_Pos)               /*!< SCB 
 586:Drivers/CMSIS/Include/core_cm33.h **** 
 587:Drivers/CMSIS/Include/core_cm33.h **** #define SCB_ICSR_ISRPENDING_Pos            22U                                            /*!< SCB 
 588:Drivers/CMSIS/Include/core_cm33.h **** #define SCB_ICSR_ISRPENDING_Msk            (1UL << SCB_ICSR_ISRPENDING_Pos)               /*!< SCB 
 589:Drivers/CMSIS/Include/core_cm33.h **** 
 590:Drivers/CMSIS/Include/core_cm33.h **** #define SCB_ICSR_VECTPENDING_Pos           12U                                            /*!< SCB 
 591:Drivers/CMSIS/Include/core_cm33.h **** #define SCB_ICSR_VECTPENDING_Msk           (0x1FFUL << SCB_ICSR_VECTPENDING_Pos)          /*!< SCB 
 592:Drivers/CMSIS/Include/core_cm33.h **** 
 593:Drivers/CMSIS/Include/core_cm33.h **** #define SCB_ICSR_RETTOBASE_Pos             11U                                            /*!< SCB 
 594:Drivers/CMSIS/Include/core_cm33.h **** #define SCB_ICSR_RETTOBASE_Msk             (1UL << SCB_ICSR_RETTOBASE_Pos)                /*!< SCB 
 595:Drivers/CMSIS/Include/core_cm33.h **** 
 596:Drivers/CMSIS/Include/core_cm33.h **** #define SCB_ICSR_VECTACTIVE_Pos             0U                                            /*!< SCB 
 597:Drivers/CMSIS/Include/core_cm33.h **** #define SCB_ICSR_VECTACTIVE_Msk            (0x1FFUL /*<< SCB_ICSR_VECTACTIVE_Pos*/)       /*!< SCB 
 598:Drivers/CMSIS/Include/core_cm33.h **** 
 599:Drivers/CMSIS/Include/core_cm33.h **** /* SCB Vector Table Offset Register Definitions */
ARM GAS  /tmp/ccvX52LM.s 			page 12


 600:Drivers/CMSIS/Include/core_cm33.h **** #define SCB_VTOR_TBLOFF_Pos                 7U                                            /*!< SCB 
 601:Drivers/CMSIS/Include/core_cm33.h **** #define SCB_VTOR_TBLOFF_Msk                (0x1FFFFFFUL << SCB_VTOR_TBLOFF_Pos)           /*!< SCB 
 602:Drivers/CMSIS/Include/core_cm33.h **** 
 603:Drivers/CMSIS/Include/core_cm33.h **** /* SCB Application Interrupt and Reset Control Register Definitions */
 604:Drivers/CMSIS/Include/core_cm33.h **** #define SCB_AIRCR_VECTKEY_Pos              16U                                            /*!< SCB 
 605:Drivers/CMSIS/Include/core_cm33.h **** #define SCB_AIRCR_VECTKEY_Msk              (0xFFFFUL << SCB_AIRCR_VECTKEY_Pos)            /*!< SCB 
 606:Drivers/CMSIS/Include/core_cm33.h **** 
 607:Drivers/CMSIS/Include/core_cm33.h **** #define SCB_AIRCR_VECTKEYSTAT_Pos          16U                                            /*!< SCB 
 608:Drivers/CMSIS/Include/core_cm33.h **** #define SCB_AIRCR_VECTKEYSTAT_Msk          (0xFFFFUL << SCB_AIRCR_VECTKEYSTAT_Pos)        /*!< SCB 
 609:Drivers/CMSIS/Include/core_cm33.h **** 
 610:Drivers/CMSIS/Include/core_cm33.h **** #define SCB_AIRCR_ENDIANESS_Pos            15U                                            /*!< SCB 
 611:Drivers/CMSIS/Include/core_cm33.h **** #define SCB_AIRCR_ENDIANESS_Msk            (1UL << SCB_AIRCR_ENDIANESS_Pos)               /*!< SCB 
 612:Drivers/CMSIS/Include/core_cm33.h **** 
 613:Drivers/CMSIS/Include/core_cm33.h **** #define SCB_AIRCR_PRIS_Pos                 14U                                            /*!< SCB 
 614:Drivers/CMSIS/Include/core_cm33.h **** #define SCB_AIRCR_PRIS_Msk                 (1UL << SCB_AIRCR_PRIS_Pos)                    /*!< SCB 
 615:Drivers/CMSIS/Include/core_cm33.h **** 
 616:Drivers/CMSIS/Include/core_cm33.h **** #define SCB_AIRCR_BFHFNMINS_Pos            13U                                            /*!< SCB 
 617:Drivers/CMSIS/Include/core_cm33.h **** #define SCB_AIRCR_BFHFNMINS_Msk            (1UL << SCB_AIRCR_BFHFNMINS_Pos)               /*!< SCB 
 618:Drivers/CMSIS/Include/core_cm33.h **** 
 619:Drivers/CMSIS/Include/core_cm33.h **** #define SCB_AIRCR_PRIGROUP_Pos              8U                                            /*!< SCB 
 620:Drivers/CMSIS/Include/core_cm33.h **** #define SCB_AIRCR_PRIGROUP_Msk             (7UL << SCB_AIRCR_PRIGROUP_Pos)                /*!< SCB 
 621:Drivers/CMSIS/Include/core_cm33.h **** 
 622:Drivers/CMSIS/Include/core_cm33.h **** #define SCB_AIRCR_SYSRESETREQS_Pos          3U                                            /*!< SCB 
 623:Drivers/CMSIS/Include/core_cm33.h **** #define SCB_AIRCR_SYSRESETREQS_Msk         (1UL << SCB_AIRCR_SYSRESETREQS_Pos)            /*!< SCB 
 624:Drivers/CMSIS/Include/core_cm33.h **** 
 625:Drivers/CMSIS/Include/core_cm33.h **** #define SCB_AIRCR_SYSRESETREQ_Pos           2U                                            /*!< SCB 
 626:Drivers/CMSIS/Include/core_cm33.h **** #define SCB_AIRCR_SYSRESETREQ_Msk          (1UL << SCB_AIRCR_SYSRESETREQ_Pos)             /*!< SCB 
 627:Drivers/CMSIS/Include/core_cm33.h **** 
 628:Drivers/CMSIS/Include/core_cm33.h **** #define SCB_AIRCR_VECTCLRACTIVE_Pos         1U                                            /*!< SCB 
 629:Drivers/CMSIS/Include/core_cm33.h **** #define SCB_AIRCR_VECTCLRACTIVE_Msk        (1UL << SCB_AIRCR_VECTCLRACTIVE_Pos)           /*!< SCB 
 630:Drivers/CMSIS/Include/core_cm33.h **** 
 631:Drivers/CMSIS/Include/core_cm33.h **** /* SCB System Control Register Definitions */
 632:Drivers/CMSIS/Include/core_cm33.h **** #define SCB_SCR_SEVONPEND_Pos               4U                                            /*!< SCB 
 633:Drivers/CMSIS/Include/core_cm33.h **** #define SCB_SCR_SEVONPEND_Msk              (1UL << SCB_SCR_SEVONPEND_Pos)                 /*!< SCB 
 634:Drivers/CMSIS/Include/core_cm33.h **** 
 635:Drivers/CMSIS/Include/core_cm33.h **** #define SCB_SCR_SLEEPDEEPS_Pos              3U                                            /*!< SCB 
 636:Drivers/CMSIS/Include/core_cm33.h **** #define SCB_SCR_SLEEPDEEPS_Msk             (1UL << SCB_SCR_SLEEPDEEPS_Pos)                /*!< SCB 
 637:Drivers/CMSIS/Include/core_cm33.h **** 
 638:Drivers/CMSIS/Include/core_cm33.h **** #define SCB_SCR_SLEEPDEEP_Pos               2U                                            /*!< SCB 
 639:Drivers/CMSIS/Include/core_cm33.h **** #define SCB_SCR_SLEEPDEEP_Msk              (1UL << SCB_SCR_SLEEPDEEP_Pos)                 /*!< SCB 
 640:Drivers/CMSIS/Include/core_cm33.h **** 
 641:Drivers/CMSIS/Include/core_cm33.h **** #define SCB_SCR_SLEEPONEXIT_Pos             1U                                            /*!< SCB 
 642:Drivers/CMSIS/Include/core_cm33.h **** #define SCB_SCR_SLEEPONEXIT_Msk            (1UL << SCB_SCR_SLEEPONEXIT_Pos)               /*!< SCB 
 643:Drivers/CMSIS/Include/core_cm33.h **** 
 644:Drivers/CMSIS/Include/core_cm33.h **** /* SCB Configuration Control Register Definitions */
 645:Drivers/CMSIS/Include/core_cm33.h **** #define SCB_CCR_BP_Pos                     18U                                            /*!< SCB 
 646:Drivers/CMSIS/Include/core_cm33.h **** #define SCB_CCR_BP_Msk                     (1UL << SCB_CCR_BP_Pos)                        /*!< SCB 
 647:Drivers/CMSIS/Include/core_cm33.h **** 
 648:Drivers/CMSIS/Include/core_cm33.h **** #define SCB_CCR_IC_Pos                     17U                                            /*!< SCB 
 649:Drivers/CMSIS/Include/core_cm33.h **** #define SCB_CCR_IC_Msk                     (1UL << SCB_CCR_IC_Pos)                        /*!< SCB 
 650:Drivers/CMSIS/Include/core_cm33.h **** 
 651:Drivers/CMSIS/Include/core_cm33.h **** #define SCB_CCR_DC_Pos                     16U                                            /*!< SCB 
 652:Drivers/CMSIS/Include/core_cm33.h **** #define SCB_CCR_DC_Msk                     (1UL << SCB_CCR_DC_Pos)                        /*!< SCB 
 653:Drivers/CMSIS/Include/core_cm33.h **** 
 654:Drivers/CMSIS/Include/core_cm33.h **** #define SCB_CCR_STKOFHFNMIGN_Pos           10U                                            /*!< SCB 
 655:Drivers/CMSIS/Include/core_cm33.h **** #define SCB_CCR_STKOFHFNMIGN_Msk           (1UL << SCB_CCR_STKOFHFNMIGN_Pos)              /*!< SCB 
 656:Drivers/CMSIS/Include/core_cm33.h **** 
ARM GAS  /tmp/ccvX52LM.s 			page 13


 657:Drivers/CMSIS/Include/core_cm33.h **** #define SCB_CCR_BFHFNMIGN_Pos               8U                                            /*!< SCB 
 658:Drivers/CMSIS/Include/core_cm33.h **** #define SCB_CCR_BFHFNMIGN_Msk              (1UL << SCB_CCR_BFHFNMIGN_Pos)                 /*!< SCB 
 659:Drivers/CMSIS/Include/core_cm33.h **** 
 660:Drivers/CMSIS/Include/core_cm33.h **** #define SCB_CCR_DIV_0_TRP_Pos               4U                                            /*!< SCB 
 661:Drivers/CMSIS/Include/core_cm33.h **** #define SCB_CCR_DIV_0_TRP_Msk              (1UL << SCB_CCR_DIV_0_TRP_Pos)                 /*!< SCB 
 662:Drivers/CMSIS/Include/core_cm33.h **** 
 663:Drivers/CMSIS/Include/core_cm33.h **** #define SCB_CCR_UNALIGN_TRP_Pos             3U                                            /*!< SCB 
 664:Drivers/CMSIS/Include/core_cm33.h **** #define SCB_CCR_UNALIGN_TRP_Msk            (1UL << SCB_CCR_UNALIGN_TRP_Pos)               /*!< SCB 
 665:Drivers/CMSIS/Include/core_cm33.h **** 
 666:Drivers/CMSIS/Include/core_cm33.h **** #define SCB_CCR_USERSETMPEND_Pos            1U                                            /*!< SCB 
 667:Drivers/CMSIS/Include/core_cm33.h **** #define SCB_CCR_USERSETMPEND_Msk           (1UL << SCB_CCR_USERSETMPEND_Pos)              /*!< SCB 
 668:Drivers/CMSIS/Include/core_cm33.h **** 
 669:Drivers/CMSIS/Include/core_cm33.h **** /* SCB System Handler Control and State Register Definitions */
 670:Drivers/CMSIS/Include/core_cm33.h **** #define SCB_SHCSR_HARDFAULTPENDED_Pos      21U                                            /*!< SCB 
 671:Drivers/CMSIS/Include/core_cm33.h **** #define SCB_SHCSR_HARDFAULTPENDED_Msk      (1UL << SCB_SHCSR_HARDFAULTPENDED_Pos)         /*!< SCB 
 672:Drivers/CMSIS/Include/core_cm33.h **** 
 673:Drivers/CMSIS/Include/core_cm33.h **** #define SCB_SHCSR_SECUREFAULTPENDED_Pos    20U                                            /*!< SCB 
 674:Drivers/CMSIS/Include/core_cm33.h **** #define SCB_SHCSR_SECUREFAULTPENDED_Msk    (1UL << SCB_SHCSR_SECUREFAULTPENDED_Pos)       /*!< SCB 
 675:Drivers/CMSIS/Include/core_cm33.h **** 
 676:Drivers/CMSIS/Include/core_cm33.h **** #define SCB_SHCSR_SECUREFAULTENA_Pos       19U                                            /*!< SCB 
 677:Drivers/CMSIS/Include/core_cm33.h **** #define SCB_SHCSR_SECUREFAULTENA_Msk       (1UL << SCB_SHCSR_SECUREFAULTENA_Pos)          /*!< SCB 
 678:Drivers/CMSIS/Include/core_cm33.h **** 
 679:Drivers/CMSIS/Include/core_cm33.h **** #define SCB_SHCSR_USGFAULTENA_Pos          18U                                            /*!< SCB 
 680:Drivers/CMSIS/Include/core_cm33.h **** #define SCB_SHCSR_USGFAULTENA_Msk          (1UL << SCB_SHCSR_USGFAULTENA_Pos)             /*!< SCB 
 681:Drivers/CMSIS/Include/core_cm33.h **** 
 682:Drivers/CMSIS/Include/core_cm33.h **** #define SCB_SHCSR_BUSFAULTENA_Pos          17U                                            /*!< SCB 
 683:Drivers/CMSIS/Include/core_cm33.h **** #define SCB_SHCSR_BUSFAULTENA_Msk          (1UL << SCB_SHCSR_BUSFAULTENA_Pos)             /*!< SCB 
 684:Drivers/CMSIS/Include/core_cm33.h **** 
 685:Drivers/CMSIS/Include/core_cm33.h **** #define SCB_SHCSR_MEMFAULTENA_Pos          16U                                            /*!< SCB 
 686:Drivers/CMSIS/Include/core_cm33.h **** #define SCB_SHCSR_MEMFAULTENA_Msk          (1UL << SCB_SHCSR_MEMFAULTENA_Pos)             /*!< SCB 
 687:Drivers/CMSIS/Include/core_cm33.h **** 
 688:Drivers/CMSIS/Include/core_cm33.h **** #define SCB_SHCSR_SVCALLPENDED_Pos         15U                                            /*!< SCB 
 689:Drivers/CMSIS/Include/core_cm33.h **** #define SCB_SHCSR_SVCALLPENDED_Msk         (1UL << SCB_SHCSR_SVCALLPENDED_Pos)            /*!< SCB 
 690:Drivers/CMSIS/Include/core_cm33.h **** 
 691:Drivers/CMSIS/Include/core_cm33.h **** #define SCB_SHCSR_BUSFAULTPENDED_Pos       14U                                            /*!< SCB 
 692:Drivers/CMSIS/Include/core_cm33.h **** #define SCB_SHCSR_BUSFAULTPENDED_Msk       (1UL << SCB_SHCSR_BUSFAULTPENDED_Pos)          /*!< SCB 
 693:Drivers/CMSIS/Include/core_cm33.h **** 
 694:Drivers/CMSIS/Include/core_cm33.h **** #define SCB_SHCSR_MEMFAULTPENDED_Pos       13U                                            /*!< SCB 
 695:Drivers/CMSIS/Include/core_cm33.h **** #define SCB_SHCSR_MEMFAULTPENDED_Msk       (1UL << SCB_SHCSR_MEMFAULTPENDED_Pos)          /*!< SCB 
 696:Drivers/CMSIS/Include/core_cm33.h **** 
 697:Drivers/CMSIS/Include/core_cm33.h **** #define SCB_SHCSR_USGFAULTPENDED_Pos       12U                                            /*!< SCB 
 698:Drivers/CMSIS/Include/core_cm33.h **** #define SCB_SHCSR_USGFAULTPENDED_Msk       (1UL << SCB_SHCSR_USGFAULTPENDED_Pos)          /*!< SCB 
 699:Drivers/CMSIS/Include/core_cm33.h **** 
 700:Drivers/CMSIS/Include/core_cm33.h **** #define SCB_SHCSR_SYSTICKACT_Pos           11U                                            /*!< SCB 
 701:Drivers/CMSIS/Include/core_cm33.h **** #define SCB_SHCSR_SYSTICKACT_Msk           (1UL << SCB_SHCSR_SYSTICKACT_Pos)              /*!< SCB 
 702:Drivers/CMSIS/Include/core_cm33.h **** 
 703:Drivers/CMSIS/Include/core_cm33.h **** #define SCB_SHCSR_PENDSVACT_Pos            10U                                            /*!< SCB 
 704:Drivers/CMSIS/Include/core_cm33.h **** #define SCB_SHCSR_PENDSVACT_Msk            (1UL << SCB_SHCSR_PENDSVACT_Pos)               /*!< SCB 
 705:Drivers/CMSIS/Include/core_cm33.h **** 
 706:Drivers/CMSIS/Include/core_cm33.h **** #define SCB_SHCSR_MONITORACT_Pos            8U                                            /*!< SCB 
 707:Drivers/CMSIS/Include/core_cm33.h **** #define SCB_SHCSR_MONITORACT_Msk           (1UL << SCB_SHCSR_MONITORACT_Pos)              /*!< SCB 
 708:Drivers/CMSIS/Include/core_cm33.h **** 
 709:Drivers/CMSIS/Include/core_cm33.h **** #define SCB_SHCSR_SVCALLACT_Pos             7U                                            /*!< SCB 
 710:Drivers/CMSIS/Include/core_cm33.h **** #define SCB_SHCSR_SVCALLACT_Msk            (1UL << SCB_SHCSR_SVCALLACT_Pos)               /*!< SCB 
 711:Drivers/CMSIS/Include/core_cm33.h **** 
 712:Drivers/CMSIS/Include/core_cm33.h **** #define SCB_SHCSR_NMIACT_Pos                5U                                            /*!< SCB 
 713:Drivers/CMSIS/Include/core_cm33.h **** #define SCB_SHCSR_NMIACT_Msk               (1UL << SCB_SHCSR_NMIACT_Pos)                  /*!< SCB 
ARM GAS  /tmp/ccvX52LM.s 			page 14


 714:Drivers/CMSIS/Include/core_cm33.h **** 
 715:Drivers/CMSIS/Include/core_cm33.h **** #define SCB_SHCSR_SECUREFAULTACT_Pos        4U                                            /*!< SCB 
 716:Drivers/CMSIS/Include/core_cm33.h **** #define SCB_SHCSR_SECUREFAULTACT_Msk       (1UL << SCB_SHCSR_SECUREFAULTACT_Pos)          /*!< SCB 
 717:Drivers/CMSIS/Include/core_cm33.h **** 
 718:Drivers/CMSIS/Include/core_cm33.h **** #define SCB_SHCSR_USGFAULTACT_Pos           3U                                            /*!< SCB 
 719:Drivers/CMSIS/Include/core_cm33.h **** #define SCB_SHCSR_USGFAULTACT_Msk          (1UL << SCB_SHCSR_USGFAULTACT_Pos)             /*!< SCB 
 720:Drivers/CMSIS/Include/core_cm33.h **** 
 721:Drivers/CMSIS/Include/core_cm33.h **** #define SCB_SHCSR_HARDFAULTACT_Pos          2U                                            /*!< SCB 
 722:Drivers/CMSIS/Include/core_cm33.h **** #define SCB_SHCSR_HARDFAULTACT_Msk         (1UL << SCB_SHCSR_HARDFAULTACT_Pos)            /*!< SCB 
 723:Drivers/CMSIS/Include/core_cm33.h **** 
 724:Drivers/CMSIS/Include/core_cm33.h **** #define SCB_SHCSR_BUSFAULTACT_Pos           1U                                            /*!< SCB 
 725:Drivers/CMSIS/Include/core_cm33.h **** #define SCB_SHCSR_BUSFAULTACT_Msk          (1UL << SCB_SHCSR_BUSFAULTACT_Pos)             /*!< SCB 
 726:Drivers/CMSIS/Include/core_cm33.h **** 
 727:Drivers/CMSIS/Include/core_cm33.h **** #define SCB_SHCSR_MEMFAULTACT_Pos           0U                                            /*!< SCB 
 728:Drivers/CMSIS/Include/core_cm33.h **** #define SCB_SHCSR_MEMFAULTACT_Msk          (1UL /*<< SCB_SHCSR_MEMFAULTACT_Pos*/)         /*!< SCB 
 729:Drivers/CMSIS/Include/core_cm33.h **** 
 730:Drivers/CMSIS/Include/core_cm33.h **** /* SCB Configurable Fault Status Register Definitions */
 731:Drivers/CMSIS/Include/core_cm33.h **** #define SCB_CFSR_USGFAULTSR_Pos            16U                                            /*!< SCB 
 732:Drivers/CMSIS/Include/core_cm33.h **** #define SCB_CFSR_USGFAULTSR_Msk            (0xFFFFUL << SCB_CFSR_USGFAULTSR_Pos)          /*!< SCB 
 733:Drivers/CMSIS/Include/core_cm33.h **** 
 734:Drivers/CMSIS/Include/core_cm33.h **** #define SCB_CFSR_BUSFAULTSR_Pos             8U                                            /*!< SCB 
 735:Drivers/CMSIS/Include/core_cm33.h **** #define SCB_CFSR_BUSFAULTSR_Msk            (0xFFUL << SCB_CFSR_BUSFAULTSR_Pos)            /*!< SCB 
 736:Drivers/CMSIS/Include/core_cm33.h **** 
 737:Drivers/CMSIS/Include/core_cm33.h **** #define SCB_CFSR_MEMFAULTSR_Pos             0U                                            /*!< SCB 
 738:Drivers/CMSIS/Include/core_cm33.h **** #define SCB_CFSR_MEMFAULTSR_Msk            (0xFFUL /*<< SCB_CFSR_MEMFAULTSR_Pos*/)        /*!< SCB 
 739:Drivers/CMSIS/Include/core_cm33.h **** 
 740:Drivers/CMSIS/Include/core_cm33.h **** /* MemManage Fault Status Register (part of SCB Configurable Fault Status Register) */
 741:Drivers/CMSIS/Include/core_cm33.h **** #define SCB_CFSR_MMARVALID_Pos             (SCB_SHCSR_MEMFAULTACT_Pos + 7U)               /*!< SCB 
 742:Drivers/CMSIS/Include/core_cm33.h **** #define SCB_CFSR_MMARVALID_Msk             (1UL << SCB_CFSR_MMARVALID_Pos)                /*!< SCB 
 743:Drivers/CMSIS/Include/core_cm33.h **** 
 744:Drivers/CMSIS/Include/core_cm33.h **** #define SCB_CFSR_MLSPERR_Pos               (SCB_SHCSR_MEMFAULTACT_Pos + 5U)               /*!< SCB 
 745:Drivers/CMSIS/Include/core_cm33.h **** #define SCB_CFSR_MLSPERR_Msk               (1UL << SCB_CFSR_MLSPERR_Pos)                  /*!< SCB 
 746:Drivers/CMSIS/Include/core_cm33.h **** 
 747:Drivers/CMSIS/Include/core_cm33.h **** #define SCB_CFSR_MSTKERR_Pos               (SCB_SHCSR_MEMFAULTACT_Pos + 4U)               /*!< SCB 
 748:Drivers/CMSIS/Include/core_cm33.h **** #define SCB_CFSR_MSTKERR_Msk               (1UL << SCB_CFSR_MSTKERR_Pos)                  /*!< SCB 
 749:Drivers/CMSIS/Include/core_cm33.h **** 
 750:Drivers/CMSIS/Include/core_cm33.h **** #define SCB_CFSR_MUNSTKERR_Pos             (SCB_SHCSR_MEMFAULTACT_Pos + 3U)               /*!< SCB 
 751:Drivers/CMSIS/Include/core_cm33.h **** #define SCB_CFSR_MUNSTKERR_Msk             (1UL << SCB_CFSR_MUNSTKERR_Pos)                /*!< SCB 
 752:Drivers/CMSIS/Include/core_cm33.h **** 
 753:Drivers/CMSIS/Include/core_cm33.h **** #define SCB_CFSR_DACCVIOL_Pos              (SCB_SHCSR_MEMFAULTACT_Pos + 1U)               /*!< SCB 
 754:Drivers/CMSIS/Include/core_cm33.h **** #define SCB_CFSR_DACCVIOL_Msk              (1UL << SCB_CFSR_DACCVIOL_Pos)                 /*!< SCB 
 755:Drivers/CMSIS/Include/core_cm33.h **** 
 756:Drivers/CMSIS/Include/core_cm33.h **** #define SCB_CFSR_IACCVIOL_Pos              (SCB_SHCSR_MEMFAULTACT_Pos + 0U)               /*!< SCB 
 757:Drivers/CMSIS/Include/core_cm33.h **** #define SCB_CFSR_IACCVIOL_Msk              (1UL /*<< SCB_CFSR_IACCVIOL_Pos*/)             /*!< SCB 
 758:Drivers/CMSIS/Include/core_cm33.h **** 
 759:Drivers/CMSIS/Include/core_cm33.h **** /* BusFault Status Register (part of SCB Configurable Fault Status Register) */
 760:Drivers/CMSIS/Include/core_cm33.h **** #define SCB_CFSR_BFARVALID_Pos            (SCB_CFSR_BUSFAULTSR_Pos + 7U)                  /*!< SCB 
 761:Drivers/CMSIS/Include/core_cm33.h **** #define SCB_CFSR_BFARVALID_Msk            (1UL << SCB_CFSR_BFARVALID_Pos)                 /*!< SCB 
 762:Drivers/CMSIS/Include/core_cm33.h **** 
 763:Drivers/CMSIS/Include/core_cm33.h **** #define SCB_CFSR_LSPERR_Pos               (SCB_CFSR_BUSFAULTSR_Pos + 5U)                  /*!< SCB 
 764:Drivers/CMSIS/Include/core_cm33.h **** #define SCB_CFSR_LSPERR_Msk               (1UL << SCB_CFSR_LSPERR_Pos)                    /*!< SCB 
 765:Drivers/CMSIS/Include/core_cm33.h **** 
 766:Drivers/CMSIS/Include/core_cm33.h **** #define SCB_CFSR_STKERR_Pos               (SCB_CFSR_BUSFAULTSR_Pos + 4U)                  /*!< SCB 
 767:Drivers/CMSIS/Include/core_cm33.h **** #define SCB_CFSR_STKERR_Msk               (1UL << SCB_CFSR_STKERR_Pos)                    /*!< SCB 
 768:Drivers/CMSIS/Include/core_cm33.h **** 
 769:Drivers/CMSIS/Include/core_cm33.h **** #define SCB_CFSR_UNSTKERR_Pos             (SCB_CFSR_BUSFAULTSR_Pos + 3U)                  /*!< SCB 
 770:Drivers/CMSIS/Include/core_cm33.h **** #define SCB_CFSR_UNSTKERR_Msk             (1UL << SCB_CFSR_UNSTKERR_Pos)                  /*!< SCB 
ARM GAS  /tmp/ccvX52LM.s 			page 15


 771:Drivers/CMSIS/Include/core_cm33.h **** 
 772:Drivers/CMSIS/Include/core_cm33.h **** #define SCB_CFSR_IMPRECISERR_Pos          (SCB_CFSR_BUSFAULTSR_Pos + 2U)                  /*!< SCB 
 773:Drivers/CMSIS/Include/core_cm33.h **** #define SCB_CFSR_IMPRECISERR_Msk          (1UL << SCB_CFSR_IMPRECISERR_Pos)               /*!< SCB 
 774:Drivers/CMSIS/Include/core_cm33.h **** 
 775:Drivers/CMSIS/Include/core_cm33.h **** #define SCB_CFSR_PRECISERR_Pos            (SCB_CFSR_BUSFAULTSR_Pos + 1U)                  /*!< SCB 
 776:Drivers/CMSIS/Include/core_cm33.h **** #define SCB_CFSR_PRECISERR_Msk            (1UL << SCB_CFSR_PRECISERR_Pos)                 /*!< SCB 
 777:Drivers/CMSIS/Include/core_cm33.h **** 
 778:Drivers/CMSIS/Include/core_cm33.h **** #define SCB_CFSR_IBUSERR_Pos              (SCB_CFSR_BUSFAULTSR_Pos + 0U)                  /*!< SCB 
 779:Drivers/CMSIS/Include/core_cm33.h **** #define SCB_CFSR_IBUSERR_Msk              (1UL << SCB_CFSR_IBUSERR_Pos)                   /*!< SCB 
 780:Drivers/CMSIS/Include/core_cm33.h **** 
 781:Drivers/CMSIS/Include/core_cm33.h **** /* UsageFault Status Register (part of SCB Configurable Fault Status Register) */
 782:Drivers/CMSIS/Include/core_cm33.h **** #define SCB_CFSR_DIVBYZERO_Pos            (SCB_CFSR_USGFAULTSR_Pos + 9U)                  /*!< SCB 
 783:Drivers/CMSIS/Include/core_cm33.h **** #define SCB_CFSR_DIVBYZERO_Msk            (1UL << SCB_CFSR_DIVBYZERO_Pos)                 /*!< SCB 
 784:Drivers/CMSIS/Include/core_cm33.h **** 
 785:Drivers/CMSIS/Include/core_cm33.h **** #define SCB_CFSR_UNALIGNED_Pos            (SCB_CFSR_USGFAULTSR_Pos + 8U)                  /*!< SCB 
 786:Drivers/CMSIS/Include/core_cm33.h **** #define SCB_CFSR_UNALIGNED_Msk            (1UL << SCB_CFSR_UNALIGNED_Pos)                 /*!< SCB 
 787:Drivers/CMSIS/Include/core_cm33.h **** 
 788:Drivers/CMSIS/Include/core_cm33.h **** #define SCB_CFSR_STKOF_Pos                (SCB_CFSR_USGFAULTSR_Pos + 4U)                  /*!< SCB 
 789:Drivers/CMSIS/Include/core_cm33.h **** #define SCB_CFSR_STKOF_Msk                (1UL << SCB_CFSR_STKOF_Pos)                     /*!< SCB 
 790:Drivers/CMSIS/Include/core_cm33.h **** 
 791:Drivers/CMSIS/Include/core_cm33.h **** #define SCB_CFSR_NOCP_Pos                 (SCB_CFSR_USGFAULTSR_Pos + 3U)                  /*!< SCB 
 792:Drivers/CMSIS/Include/core_cm33.h **** #define SCB_CFSR_NOCP_Msk                 (1UL << SCB_CFSR_NOCP_Pos)                      /*!< SCB 
 793:Drivers/CMSIS/Include/core_cm33.h **** 
 794:Drivers/CMSIS/Include/core_cm33.h **** #define SCB_CFSR_INVPC_Pos                (SCB_CFSR_USGFAULTSR_Pos + 2U)                  /*!< SCB 
 795:Drivers/CMSIS/Include/core_cm33.h **** #define SCB_CFSR_INVPC_Msk                (1UL << SCB_CFSR_INVPC_Pos)                     /*!< SCB 
 796:Drivers/CMSIS/Include/core_cm33.h **** 
 797:Drivers/CMSIS/Include/core_cm33.h **** #define SCB_CFSR_INVSTATE_Pos             (SCB_CFSR_USGFAULTSR_Pos + 1U)                  /*!< SCB 
 798:Drivers/CMSIS/Include/core_cm33.h **** #define SCB_CFSR_INVSTATE_Msk             (1UL << SCB_CFSR_INVSTATE_Pos)                  /*!< SCB 
 799:Drivers/CMSIS/Include/core_cm33.h **** 
 800:Drivers/CMSIS/Include/core_cm33.h **** #define SCB_CFSR_UNDEFINSTR_Pos           (SCB_CFSR_USGFAULTSR_Pos + 0U)                  /*!< SCB 
 801:Drivers/CMSIS/Include/core_cm33.h **** #define SCB_CFSR_UNDEFINSTR_Msk           (1UL << SCB_CFSR_UNDEFINSTR_Pos)                /*!< SCB 
 802:Drivers/CMSIS/Include/core_cm33.h **** 
 803:Drivers/CMSIS/Include/core_cm33.h **** /* SCB Hard Fault Status Register Definitions */
 804:Drivers/CMSIS/Include/core_cm33.h **** #define SCB_HFSR_DEBUGEVT_Pos              31U                                            /*!< SCB 
 805:Drivers/CMSIS/Include/core_cm33.h **** #define SCB_HFSR_DEBUGEVT_Msk              (1UL << SCB_HFSR_DEBUGEVT_Pos)                 /*!< SCB 
 806:Drivers/CMSIS/Include/core_cm33.h **** 
 807:Drivers/CMSIS/Include/core_cm33.h **** #define SCB_HFSR_FORCED_Pos                30U                                            /*!< SCB 
 808:Drivers/CMSIS/Include/core_cm33.h **** #define SCB_HFSR_FORCED_Msk                (1UL << SCB_HFSR_FORCED_Pos)                   /*!< SCB 
 809:Drivers/CMSIS/Include/core_cm33.h **** 
 810:Drivers/CMSIS/Include/core_cm33.h **** #define SCB_HFSR_VECTTBL_Pos                1U                                            /*!< SCB 
 811:Drivers/CMSIS/Include/core_cm33.h **** #define SCB_HFSR_VECTTBL_Msk               (1UL << SCB_HFSR_VECTTBL_Pos)                  /*!< SCB 
 812:Drivers/CMSIS/Include/core_cm33.h **** 
 813:Drivers/CMSIS/Include/core_cm33.h **** /* SCB Debug Fault Status Register Definitions */
 814:Drivers/CMSIS/Include/core_cm33.h **** #define SCB_DFSR_EXTERNAL_Pos               4U                                            /*!< SCB 
 815:Drivers/CMSIS/Include/core_cm33.h **** #define SCB_DFSR_EXTERNAL_Msk              (1UL << SCB_DFSR_EXTERNAL_Pos)                 /*!< SCB 
 816:Drivers/CMSIS/Include/core_cm33.h **** 
 817:Drivers/CMSIS/Include/core_cm33.h **** #define SCB_DFSR_VCATCH_Pos                 3U                                            /*!< SCB 
 818:Drivers/CMSIS/Include/core_cm33.h **** #define SCB_DFSR_VCATCH_Msk                (1UL << SCB_DFSR_VCATCH_Pos)                   /*!< SCB 
 819:Drivers/CMSIS/Include/core_cm33.h **** 
 820:Drivers/CMSIS/Include/core_cm33.h **** #define SCB_DFSR_DWTTRAP_Pos                2U                                            /*!< SCB 
 821:Drivers/CMSIS/Include/core_cm33.h **** #define SCB_DFSR_DWTTRAP_Msk               (1UL << SCB_DFSR_DWTTRAP_Pos)                  /*!< SCB 
 822:Drivers/CMSIS/Include/core_cm33.h **** 
 823:Drivers/CMSIS/Include/core_cm33.h **** #define SCB_DFSR_BKPT_Pos                   1U                                            /*!< SCB 
 824:Drivers/CMSIS/Include/core_cm33.h **** #define SCB_DFSR_BKPT_Msk                  (1UL << SCB_DFSR_BKPT_Pos)                     /*!< SCB 
 825:Drivers/CMSIS/Include/core_cm33.h **** 
 826:Drivers/CMSIS/Include/core_cm33.h **** #define SCB_DFSR_HALTED_Pos                 0U                                            /*!< SCB 
 827:Drivers/CMSIS/Include/core_cm33.h **** #define SCB_DFSR_HALTED_Msk                (1UL /*<< SCB_DFSR_HALTED_Pos*/)               /*!< SCB 
ARM GAS  /tmp/ccvX52LM.s 			page 16


 828:Drivers/CMSIS/Include/core_cm33.h **** 
 829:Drivers/CMSIS/Include/core_cm33.h **** /* SCB Non-Secure Access Control Register Definitions */
 830:Drivers/CMSIS/Include/core_cm33.h **** #define SCB_NSACR_CP11_Pos                 11U                                            /*!< SCB 
 831:Drivers/CMSIS/Include/core_cm33.h **** #define SCB_NSACR_CP11_Msk                 (1UL << SCB_NSACR_CP11_Pos)                    /*!< SCB 
 832:Drivers/CMSIS/Include/core_cm33.h **** 
 833:Drivers/CMSIS/Include/core_cm33.h **** #define SCB_NSACR_CP10_Pos                 10U                                            /*!< SCB 
 834:Drivers/CMSIS/Include/core_cm33.h **** #define SCB_NSACR_CP10_Msk                 (1UL << SCB_NSACR_CP10_Pos)                    /*!< SCB 
 835:Drivers/CMSIS/Include/core_cm33.h **** 
 836:Drivers/CMSIS/Include/core_cm33.h **** #define SCB_NSACR_CPn_Pos                   0U                                            /*!< SCB 
 837:Drivers/CMSIS/Include/core_cm33.h **** #define SCB_NSACR_CPn_Msk                  (1UL /*<< SCB_NSACR_CPn_Pos*/)                 /*!< SCB 
 838:Drivers/CMSIS/Include/core_cm33.h **** 
 839:Drivers/CMSIS/Include/core_cm33.h **** /* SCB Cache Level ID Register Definitions */
 840:Drivers/CMSIS/Include/core_cm33.h **** #define SCB_CLIDR_LOUU_Pos                 27U                                            /*!< SCB 
 841:Drivers/CMSIS/Include/core_cm33.h **** #define SCB_CLIDR_LOUU_Msk                 (7UL << SCB_CLIDR_LOUU_Pos)                    /*!< SCB 
 842:Drivers/CMSIS/Include/core_cm33.h **** 
 843:Drivers/CMSIS/Include/core_cm33.h **** #define SCB_CLIDR_LOC_Pos                  24U                                            /*!< SCB 
 844:Drivers/CMSIS/Include/core_cm33.h **** #define SCB_CLIDR_LOC_Msk                  (7UL << SCB_CLIDR_LOC_Pos)                     /*!< SCB 
 845:Drivers/CMSIS/Include/core_cm33.h **** 
 846:Drivers/CMSIS/Include/core_cm33.h **** /* SCB Cache Type Register Definitions */
 847:Drivers/CMSIS/Include/core_cm33.h **** #define SCB_CTR_FORMAT_Pos                 29U                                            /*!< SCB 
 848:Drivers/CMSIS/Include/core_cm33.h **** #define SCB_CTR_FORMAT_Msk                 (7UL << SCB_CTR_FORMAT_Pos)                    /*!< SCB 
 849:Drivers/CMSIS/Include/core_cm33.h **** 
 850:Drivers/CMSIS/Include/core_cm33.h **** #define SCB_CTR_CWG_Pos                    24U                                            /*!< SCB 
 851:Drivers/CMSIS/Include/core_cm33.h **** #define SCB_CTR_CWG_Msk                    (0xFUL << SCB_CTR_CWG_Pos)                     /*!< SCB 
 852:Drivers/CMSIS/Include/core_cm33.h **** 
 853:Drivers/CMSIS/Include/core_cm33.h **** #define SCB_CTR_ERG_Pos                    20U                                            /*!< SCB 
 854:Drivers/CMSIS/Include/core_cm33.h **** #define SCB_CTR_ERG_Msk                    (0xFUL << SCB_CTR_ERG_Pos)                     /*!< SCB 
 855:Drivers/CMSIS/Include/core_cm33.h **** 
 856:Drivers/CMSIS/Include/core_cm33.h **** #define SCB_CTR_DMINLINE_Pos               16U                                            /*!< SCB 
 857:Drivers/CMSIS/Include/core_cm33.h **** #define SCB_CTR_DMINLINE_Msk               (0xFUL << SCB_CTR_DMINLINE_Pos)                /*!< SCB 
 858:Drivers/CMSIS/Include/core_cm33.h **** 
 859:Drivers/CMSIS/Include/core_cm33.h **** #define SCB_CTR_IMINLINE_Pos                0U                                            /*!< SCB 
 860:Drivers/CMSIS/Include/core_cm33.h **** #define SCB_CTR_IMINLINE_Msk               (0xFUL /*<< SCB_CTR_IMINLINE_Pos*/)            /*!< SCB 
 861:Drivers/CMSIS/Include/core_cm33.h **** 
 862:Drivers/CMSIS/Include/core_cm33.h **** /* SCB Cache Size ID Register Definitions */
 863:Drivers/CMSIS/Include/core_cm33.h **** #define SCB_CCSIDR_WT_Pos                  31U                                            /*!< SCB 
 864:Drivers/CMSIS/Include/core_cm33.h **** #define SCB_CCSIDR_WT_Msk                  (1UL << SCB_CCSIDR_WT_Pos)                     /*!< SCB 
 865:Drivers/CMSIS/Include/core_cm33.h **** 
 866:Drivers/CMSIS/Include/core_cm33.h **** #define SCB_CCSIDR_WB_Pos                  30U                                            /*!< SCB 
 867:Drivers/CMSIS/Include/core_cm33.h **** #define SCB_CCSIDR_WB_Msk                  (1UL << SCB_CCSIDR_WB_Pos)                     /*!< SCB 
 868:Drivers/CMSIS/Include/core_cm33.h **** 
 869:Drivers/CMSIS/Include/core_cm33.h **** #define SCB_CCSIDR_RA_Pos                  29U                                            /*!< SCB 
 870:Drivers/CMSIS/Include/core_cm33.h **** #define SCB_CCSIDR_RA_Msk                  (1UL << SCB_CCSIDR_RA_Pos)                     /*!< SCB 
 871:Drivers/CMSIS/Include/core_cm33.h **** 
 872:Drivers/CMSIS/Include/core_cm33.h **** #define SCB_CCSIDR_WA_Pos                  28U                                            /*!< SCB 
 873:Drivers/CMSIS/Include/core_cm33.h **** #define SCB_CCSIDR_WA_Msk                  (1UL << SCB_CCSIDR_WA_Pos)                     /*!< SCB 
 874:Drivers/CMSIS/Include/core_cm33.h **** 
 875:Drivers/CMSIS/Include/core_cm33.h **** #define SCB_CCSIDR_NUMSETS_Pos             13U                                            /*!< SCB 
 876:Drivers/CMSIS/Include/core_cm33.h **** #define SCB_CCSIDR_NUMSETS_Msk             (0x7FFFUL << SCB_CCSIDR_NUMSETS_Pos)           /*!< SCB 
 877:Drivers/CMSIS/Include/core_cm33.h **** 
 878:Drivers/CMSIS/Include/core_cm33.h **** #define SCB_CCSIDR_ASSOCIATIVITY_Pos        3U                                            /*!< SCB 
 879:Drivers/CMSIS/Include/core_cm33.h **** #define SCB_CCSIDR_ASSOCIATIVITY_Msk       (0x3FFUL << SCB_CCSIDR_ASSOCIATIVITY_Pos)      /*!< SCB 
 880:Drivers/CMSIS/Include/core_cm33.h **** 
 881:Drivers/CMSIS/Include/core_cm33.h **** #define SCB_CCSIDR_LINESIZE_Pos             0U                                            /*!< SCB 
 882:Drivers/CMSIS/Include/core_cm33.h **** #define SCB_CCSIDR_LINESIZE_Msk            (7UL /*<< SCB_CCSIDR_LINESIZE_Pos*/)           /*!< SCB 
 883:Drivers/CMSIS/Include/core_cm33.h **** 
 884:Drivers/CMSIS/Include/core_cm33.h **** /* SCB Cache Size Selection Register Definitions */
ARM GAS  /tmp/ccvX52LM.s 			page 17


 885:Drivers/CMSIS/Include/core_cm33.h **** #define SCB_CSSELR_LEVEL_Pos                1U                                            /*!< SCB 
 886:Drivers/CMSIS/Include/core_cm33.h **** #define SCB_CSSELR_LEVEL_Msk               (7UL << SCB_CSSELR_LEVEL_Pos)                  /*!< SCB 
 887:Drivers/CMSIS/Include/core_cm33.h **** 
 888:Drivers/CMSIS/Include/core_cm33.h **** #define SCB_CSSELR_IND_Pos                  0U                                            /*!< SCB 
 889:Drivers/CMSIS/Include/core_cm33.h **** #define SCB_CSSELR_IND_Msk                 (1UL /*<< SCB_CSSELR_IND_Pos*/)                /*!< SCB 
 890:Drivers/CMSIS/Include/core_cm33.h **** 
 891:Drivers/CMSIS/Include/core_cm33.h **** /* SCB Software Triggered Interrupt Register Definitions */
 892:Drivers/CMSIS/Include/core_cm33.h **** #define SCB_STIR_INTID_Pos                  0U                                            /*!< SCB 
 893:Drivers/CMSIS/Include/core_cm33.h **** #define SCB_STIR_INTID_Msk                 (0x1FFUL /*<< SCB_STIR_INTID_Pos*/)            /*!< SCB 
 894:Drivers/CMSIS/Include/core_cm33.h **** 
 895:Drivers/CMSIS/Include/core_cm33.h **** /* SCB D-Cache Invalidate by Set-way Register Definitions */
 896:Drivers/CMSIS/Include/core_cm33.h **** #define SCB_DCISW_WAY_Pos                  30U                                            /*!< SCB 
 897:Drivers/CMSIS/Include/core_cm33.h **** #define SCB_DCISW_WAY_Msk                  (3UL << SCB_DCISW_WAY_Pos)                     /*!< SCB 
 898:Drivers/CMSIS/Include/core_cm33.h **** 
 899:Drivers/CMSIS/Include/core_cm33.h **** #define SCB_DCISW_SET_Pos                   5U                                            /*!< SCB 
 900:Drivers/CMSIS/Include/core_cm33.h **** #define SCB_DCISW_SET_Msk                  (0x1FFUL << SCB_DCISW_SET_Pos)                 /*!< SCB 
 901:Drivers/CMSIS/Include/core_cm33.h **** 
 902:Drivers/CMSIS/Include/core_cm33.h **** /* SCB D-Cache Clean by Set-way Register Definitions */
 903:Drivers/CMSIS/Include/core_cm33.h **** #define SCB_DCCSW_WAY_Pos                  30U                                            /*!< SCB 
 904:Drivers/CMSIS/Include/core_cm33.h **** #define SCB_DCCSW_WAY_Msk                  (3UL << SCB_DCCSW_WAY_Pos)                     /*!< SCB 
 905:Drivers/CMSIS/Include/core_cm33.h **** 
 906:Drivers/CMSIS/Include/core_cm33.h **** #define SCB_DCCSW_SET_Pos                   5U                                            /*!< SCB 
 907:Drivers/CMSIS/Include/core_cm33.h **** #define SCB_DCCSW_SET_Msk                  (0x1FFUL << SCB_DCCSW_SET_Pos)                 /*!< SCB 
 908:Drivers/CMSIS/Include/core_cm33.h **** 
 909:Drivers/CMSIS/Include/core_cm33.h **** /* SCB D-Cache Clean and Invalidate by Set-way Register Definitions */
 910:Drivers/CMSIS/Include/core_cm33.h **** #define SCB_DCCISW_WAY_Pos                 30U                                            /*!< SCB 
 911:Drivers/CMSIS/Include/core_cm33.h **** #define SCB_DCCISW_WAY_Msk                 (3UL << SCB_DCCISW_WAY_Pos)                    /*!< SCB 
 912:Drivers/CMSIS/Include/core_cm33.h **** 
 913:Drivers/CMSIS/Include/core_cm33.h **** #define SCB_DCCISW_SET_Pos                  5U                                            /*!< SCB 
 914:Drivers/CMSIS/Include/core_cm33.h **** #define SCB_DCCISW_SET_Msk                 (0x1FFUL << SCB_DCCISW_SET_Pos)                /*!< SCB 
 915:Drivers/CMSIS/Include/core_cm33.h **** 
 916:Drivers/CMSIS/Include/core_cm33.h **** /*@} end of group CMSIS_SCB */
 917:Drivers/CMSIS/Include/core_cm33.h **** 
 918:Drivers/CMSIS/Include/core_cm33.h **** 
 919:Drivers/CMSIS/Include/core_cm33.h **** /**
 920:Drivers/CMSIS/Include/core_cm33.h ****   \ingroup  CMSIS_core_register
 921:Drivers/CMSIS/Include/core_cm33.h ****   \defgroup CMSIS_SCnSCB System Controls not in SCB (SCnSCB)
 922:Drivers/CMSIS/Include/core_cm33.h ****   \brief    Type definitions for the System Control and ID Register not in the SCB
 923:Drivers/CMSIS/Include/core_cm33.h ****   @{
 924:Drivers/CMSIS/Include/core_cm33.h ****  */
 925:Drivers/CMSIS/Include/core_cm33.h **** 
 926:Drivers/CMSIS/Include/core_cm33.h **** /**
 927:Drivers/CMSIS/Include/core_cm33.h ****   \brief  Structure type to access the System Control and ID Register not in the SCB.
 928:Drivers/CMSIS/Include/core_cm33.h ****  */
 929:Drivers/CMSIS/Include/core_cm33.h **** typedef struct
 930:Drivers/CMSIS/Include/core_cm33.h **** {
 931:Drivers/CMSIS/Include/core_cm33.h ****         uint32_t RESERVED0[1U];
 932:Drivers/CMSIS/Include/core_cm33.h ****   __IM  uint32_t ICTR;                   /*!< Offset: 0x004 (R/ )  Interrupt Controller Type Regist
 933:Drivers/CMSIS/Include/core_cm33.h ****   __IOM uint32_t ACTLR;                  /*!< Offset: 0x008 (R/W)  Auxiliary Control Register */
 934:Drivers/CMSIS/Include/core_cm33.h ****   __IOM uint32_t CPPWR;                  /*!< Offset: 0x00C (R/W)  Coprocessor Power Control  Regis
 935:Drivers/CMSIS/Include/core_cm33.h **** } SCnSCB_Type;
 936:Drivers/CMSIS/Include/core_cm33.h **** 
 937:Drivers/CMSIS/Include/core_cm33.h **** /* Interrupt Controller Type Register Definitions */
 938:Drivers/CMSIS/Include/core_cm33.h **** #define SCnSCB_ICTR_INTLINESNUM_Pos         0U                                         /*!< ICTR: I
 939:Drivers/CMSIS/Include/core_cm33.h **** #define SCnSCB_ICTR_INTLINESNUM_Msk        (0xFUL /*<< SCnSCB_ICTR_INTLINESNUM_Pos*/)  /*!< ICTR: I
 940:Drivers/CMSIS/Include/core_cm33.h **** 
 941:Drivers/CMSIS/Include/core_cm33.h **** /*@} end of group CMSIS_SCnotSCB */
ARM GAS  /tmp/ccvX52LM.s 			page 18


 942:Drivers/CMSIS/Include/core_cm33.h **** 
 943:Drivers/CMSIS/Include/core_cm33.h **** 
 944:Drivers/CMSIS/Include/core_cm33.h **** /**
 945:Drivers/CMSIS/Include/core_cm33.h ****   \ingroup  CMSIS_core_register
 946:Drivers/CMSIS/Include/core_cm33.h ****   \defgroup CMSIS_SysTick     System Tick Timer (SysTick)
 947:Drivers/CMSIS/Include/core_cm33.h ****   \brief    Type definitions for the System Timer Registers.
 948:Drivers/CMSIS/Include/core_cm33.h ****   @{
 949:Drivers/CMSIS/Include/core_cm33.h ****  */
 950:Drivers/CMSIS/Include/core_cm33.h **** 
 951:Drivers/CMSIS/Include/core_cm33.h **** /**
 952:Drivers/CMSIS/Include/core_cm33.h ****   \brief  Structure type to access the System Timer (SysTick).
 953:Drivers/CMSIS/Include/core_cm33.h ****  */
 954:Drivers/CMSIS/Include/core_cm33.h **** typedef struct
 955:Drivers/CMSIS/Include/core_cm33.h **** {
 956:Drivers/CMSIS/Include/core_cm33.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x000 (R/W)  SysTick Control and Status Regis
 957:Drivers/CMSIS/Include/core_cm33.h ****   __IOM uint32_t LOAD;                   /*!< Offset: 0x004 (R/W)  SysTick Reload Value Register */
 958:Drivers/CMSIS/Include/core_cm33.h ****   __IOM uint32_t VAL;                    /*!< Offset: 0x008 (R/W)  SysTick Current Value Register *
 959:Drivers/CMSIS/Include/core_cm33.h ****   __IM  uint32_t CALIB;                  /*!< Offset: 0x00C (R/ )  SysTick Calibration Register */
 960:Drivers/CMSIS/Include/core_cm33.h **** } SysTick_Type;
 961:Drivers/CMSIS/Include/core_cm33.h **** 
 962:Drivers/CMSIS/Include/core_cm33.h **** /* SysTick Control / Status Register Definitions */
 963:Drivers/CMSIS/Include/core_cm33.h **** #define SysTick_CTRL_COUNTFLAG_Pos         16U                                            /*!< SysT
 964:Drivers/CMSIS/Include/core_cm33.h **** #define SysTick_CTRL_COUNTFLAG_Msk         (1UL << SysTick_CTRL_COUNTFLAG_Pos)            /*!< SysT
 965:Drivers/CMSIS/Include/core_cm33.h **** 
 966:Drivers/CMSIS/Include/core_cm33.h **** #define SysTick_CTRL_CLKSOURCE_Pos          2U                                            /*!< SysT
 967:Drivers/CMSIS/Include/core_cm33.h **** #define SysTick_CTRL_CLKSOURCE_Msk         (1UL << SysTick_CTRL_CLKSOURCE_Pos)            /*!< SysT
 968:Drivers/CMSIS/Include/core_cm33.h **** 
 969:Drivers/CMSIS/Include/core_cm33.h **** #define SysTick_CTRL_TICKINT_Pos            1U                                            /*!< SysT
 970:Drivers/CMSIS/Include/core_cm33.h **** #define SysTick_CTRL_TICKINT_Msk           (1UL << SysTick_CTRL_TICKINT_Pos)              /*!< SysT
 971:Drivers/CMSIS/Include/core_cm33.h **** 
 972:Drivers/CMSIS/Include/core_cm33.h **** #define SysTick_CTRL_ENABLE_Pos             0U                                            /*!< SysT
 973:Drivers/CMSIS/Include/core_cm33.h **** #define SysTick_CTRL_ENABLE_Msk            (1UL /*<< SysTick_CTRL_ENABLE_Pos*/)           /*!< SysT
 974:Drivers/CMSIS/Include/core_cm33.h **** 
 975:Drivers/CMSIS/Include/core_cm33.h **** /* SysTick Reload Register Definitions */
 976:Drivers/CMSIS/Include/core_cm33.h **** #define SysTick_LOAD_RELOAD_Pos             0U                                            /*!< SysT
 977:Drivers/CMSIS/Include/core_cm33.h **** #define SysTick_LOAD_RELOAD_Msk            (0xFFFFFFUL /*<< SysTick_LOAD_RELOAD_Pos*/)    /*!< SysT
 978:Drivers/CMSIS/Include/core_cm33.h **** 
 979:Drivers/CMSIS/Include/core_cm33.h **** /* SysTick Current Register Definitions */
 980:Drivers/CMSIS/Include/core_cm33.h **** #define SysTick_VAL_CURRENT_Pos             0U                                            /*!< SysT
 981:Drivers/CMSIS/Include/core_cm33.h **** #define SysTick_VAL_CURRENT_Msk            (0xFFFFFFUL /*<< SysTick_VAL_CURRENT_Pos*/)    /*!< SysT
 982:Drivers/CMSIS/Include/core_cm33.h **** 
 983:Drivers/CMSIS/Include/core_cm33.h **** /* SysTick Calibration Register Definitions */
 984:Drivers/CMSIS/Include/core_cm33.h **** #define SysTick_CALIB_NOREF_Pos            31U                                            /*!< SysT
 985:Drivers/CMSIS/Include/core_cm33.h **** #define SysTick_CALIB_NOREF_Msk            (1UL << SysTick_CALIB_NOREF_Pos)               /*!< SysT
 986:Drivers/CMSIS/Include/core_cm33.h **** 
 987:Drivers/CMSIS/Include/core_cm33.h **** #define SysTick_CALIB_SKEW_Pos             30U                                            /*!< SysT
 988:Drivers/CMSIS/Include/core_cm33.h **** #define SysTick_CALIB_SKEW_Msk             (1UL << SysTick_CALIB_SKEW_Pos)                /*!< SysT
 989:Drivers/CMSIS/Include/core_cm33.h **** 
 990:Drivers/CMSIS/Include/core_cm33.h **** #define SysTick_CALIB_TENMS_Pos             0U                                            /*!< SysT
 991:Drivers/CMSIS/Include/core_cm33.h **** #define SysTick_CALIB_TENMS_Msk            (0xFFFFFFUL /*<< SysTick_CALIB_TENMS_Pos*/)    /*!< SysT
 992:Drivers/CMSIS/Include/core_cm33.h **** 
 993:Drivers/CMSIS/Include/core_cm33.h **** /*@} end of group CMSIS_SysTick */
 994:Drivers/CMSIS/Include/core_cm33.h **** 
 995:Drivers/CMSIS/Include/core_cm33.h **** 
 996:Drivers/CMSIS/Include/core_cm33.h **** /**
 997:Drivers/CMSIS/Include/core_cm33.h ****   \ingroup  CMSIS_core_register
 998:Drivers/CMSIS/Include/core_cm33.h ****   \defgroup CMSIS_ITM     Instrumentation Trace Macrocell (ITM)
ARM GAS  /tmp/ccvX52LM.s 			page 19


 999:Drivers/CMSIS/Include/core_cm33.h ****   \brief    Type definitions for the Instrumentation Trace Macrocell (ITM)
1000:Drivers/CMSIS/Include/core_cm33.h ****   @{
1001:Drivers/CMSIS/Include/core_cm33.h ****  */
1002:Drivers/CMSIS/Include/core_cm33.h **** 
1003:Drivers/CMSIS/Include/core_cm33.h **** /**
1004:Drivers/CMSIS/Include/core_cm33.h ****   \brief  Structure type to access the Instrumentation Trace Macrocell Register (ITM).
1005:Drivers/CMSIS/Include/core_cm33.h ****  */
1006:Drivers/CMSIS/Include/core_cm33.h **** typedef struct
1007:Drivers/CMSIS/Include/core_cm33.h **** {
1008:Drivers/CMSIS/Include/core_cm33.h ****   __OM  union
1009:Drivers/CMSIS/Include/core_cm33.h ****   {
1010:Drivers/CMSIS/Include/core_cm33.h ****     __OM  uint8_t    u8;                 /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 8-bit */
1011:Drivers/CMSIS/Include/core_cm33.h ****     __OM  uint16_t   u16;                /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 16-bit */
1012:Drivers/CMSIS/Include/core_cm33.h ****     __OM  uint32_t   u32;                /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 32-bit */
1013:Drivers/CMSIS/Include/core_cm33.h ****   }  PORT [32U];                         /*!< Offset: 0x000 ( /W)  ITM Stimulus Port Registers */
1014:Drivers/CMSIS/Include/core_cm33.h ****         uint32_t RESERVED0[864U];
1015:Drivers/CMSIS/Include/core_cm33.h ****   __IOM uint32_t TER;                    /*!< Offset: 0xE00 (R/W)  ITM Trace Enable Register */
1016:Drivers/CMSIS/Include/core_cm33.h ****         uint32_t RESERVED1[15U];
1017:Drivers/CMSIS/Include/core_cm33.h ****   __IOM uint32_t TPR;                    /*!< Offset: 0xE40 (R/W)  ITM Trace Privilege Register */
1018:Drivers/CMSIS/Include/core_cm33.h ****         uint32_t RESERVED2[15U];
1019:Drivers/CMSIS/Include/core_cm33.h ****   __IOM uint32_t TCR;                    /*!< Offset: 0xE80 (R/W)  ITM Trace Control Register */
1020:Drivers/CMSIS/Include/core_cm33.h ****         uint32_t RESERVED3[32U];
1021:Drivers/CMSIS/Include/core_cm33.h ****         uint32_t RESERVED4[43U];
1022:Drivers/CMSIS/Include/core_cm33.h ****   __OM  uint32_t LAR;                    /*!< Offset: 0xFB0 ( /W)  ITM Lock Access Register */
1023:Drivers/CMSIS/Include/core_cm33.h ****   __IM  uint32_t LSR;                    /*!< Offset: 0xFB4 (R/ )  ITM Lock Status Register */
1024:Drivers/CMSIS/Include/core_cm33.h ****         uint32_t RESERVED5[1U];
1025:Drivers/CMSIS/Include/core_cm33.h ****   __IM  uint32_t DEVARCH;                /*!< Offset: 0xFBC (R/ )  ITM Device Architecture Register
1026:Drivers/CMSIS/Include/core_cm33.h ****         uint32_t RESERVED6[4U];
1027:Drivers/CMSIS/Include/core_cm33.h ****   __IM  uint32_t PID4;                   /*!< Offset: 0xFD0 (R/ )  ITM Peripheral Identification Re
1028:Drivers/CMSIS/Include/core_cm33.h ****   __IM  uint32_t PID5;                   /*!< Offset: 0xFD4 (R/ )  ITM Peripheral Identification Re
1029:Drivers/CMSIS/Include/core_cm33.h ****   __IM  uint32_t PID6;                   /*!< Offset: 0xFD8 (R/ )  ITM Peripheral Identification Re
1030:Drivers/CMSIS/Include/core_cm33.h ****   __IM  uint32_t PID7;                   /*!< Offset: 0xFDC (R/ )  ITM Peripheral Identification Re
1031:Drivers/CMSIS/Include/core_cm33.h ****   __IM  uint32_t PID0;                   /*!< Offset: 0xFE0 (R/ )  ITM Peripheral Identification Re
1032:Drivers/CMSIS/Include/core_cm33.h ****   __IM  uint32_t PID1;                   /*!< Offset: 0xFE4 (R/ )  ITM Peripheral Identification Re
1033:Drivers/CMSIS/Include/core_cm33.h ****   __IM  uint32_t PID2;                   /*!< Offset: 0xFE8 (R/ )  ITM Peripheral Identification Re
1034:Drivers/CMSIS/Include/core_cm33.h ****   __IM  uint32_t PID3;                   /*!< Offset: 0xFEC (R/ )  ITM Peripheral Identification Re
1035:Drivers/CMSIS/Include/core_cm33.h ****   __IM  uint32_t CID0;                   /*!< Offset: 0xFF0 (R/ )  ITM Component  Identification Re
1036:Drivers/CMSIS/Include/core_cm33.h ****   __IM  uint32_t CID1;                   /*!< Offset: 0xFF4 (R/ )  ITM Component  Identification Re
1037:Drivers/CMSIS/Include/core_cm33.h ****   __IM  uint32_t CID2;                   /*!< Offset: 0xFF8 (R/ )  ITM Component  Identification Re
1038:Drivers/CMSIS/Include/core_cm33.h ****   __IM  uint32_t CID3;                   /*!< Offset: 0xFFC (R/ )  ITM Component  Identification Re
1039:Drivers/CMSIS/Include/core_cm33.h **** } ITM_Type;
1040:Drivers/CMSIS/Include/core_cm33.h **** 
1041:Drivers/CMSIS/Include/core_cm33.h **** /* ITM Stimulus Port Register Definitions */
1042:Drivers/CMSIS/Include/core_cm33.h **** #define ITM_STIM_DISABLED_Pos               1U                                            /*!< ITM 
1043:Drivers/CMSIS/Include/core_cm33.h **** #define ITM_STIM_DISABLED_Msk              (0x1UL << ITM_STIM_DISABLED_Pos)               /*!< ITM 
1044:Drivers/CMSIS/Include/core_cm33.h **** 
1045:Drivers/CMSIS/Include/core_cm33.h **** #define ITM_STIM_FIFOREADY_Pos              0U                                            /*!< ITM 
1046:Drivers/CMSIS/Include/core_cm33.h **** #define ITM_STIM_FIFOREADY_Msk             (0x1UL /*<< ITM_STIM_FIFOREADY_Pos*/)          /*!< ITM 
1047:Drivers/CMSIS/Include/core_cm33.h **** 
1048:Drivers/CMSIS/Include/core_cm33.h **** /* ITM Trace Privilege Register Definitions */
1049:Drivers/CMSIS/Include/core_cm33.h **** #define ITM_TPR_PRIVMASK_Pos                0U                                            /*!< ITM 
1050:Drivers/CMSIS/Include/core_cm33.h **** #define ITM_TPR_PRIVMASK_Msk               (0xFFFFFFFFUL /*<< ITM_TPR_PRIVMASK_Pos*/)     /*!< ITM 
1051:Drivers/CMSIS/Include/core_cm33.h **** 
1052:Drivers/CMSIS/Include/core_cm33.h **** /* ITM Trace Control Register Definitions */
1053:Drivers/CMSIS/Include/core_cm33.h **** #define ITM_TCR_BUSY_Pos                   23U                                            /*!< ITM 
1054:Drivers/CMSIS/Include/core_cm33.h **** #define ITM_TCR_BUSY_Msk                   (1UL << ITM_TCR_BUSY_Pos)                      /*!< ITM 
1055:Drivers/CMSIS/Include/core_cm33.h **** 
ARM GAS  /tmp/ccvX52LM.s 			page 20


1056:Drivers/CMSIS/Include/core_cm33.h **** #define ITM_TCR_TRACEBUSID_Pos             16U                                            /*!< ITM 
1057:Drivers/CMSIS/Include/core_cm33.h **** #define ITM_TCR_TRACEBUSID_Msk             (0x7FUL << ITM_TCR_TRACEBUSID_Pos)             /*!< ITM 
1058:Drivers/CMSIS/Include/core_cm33.h **** 
1059:Drivers/CMSIS/Include/core_cm33.h **** #define ITM_TCR_GTSFREQ_Pos                10U                                            /*!< ITM 
1060:Drivers/CMSIS/Include/core_cm33.h **** #define ITM_TCR_GTSFREQ_Msk                (3UL << ITM_TCR_GTSFREQ_Pos)                   /*!< ITM 
1061:Drivers/CMSIS/Include/core_cm33.h **** 
1062:Drivers/CMSIS/Include/core_cm33.h **** #define ITM_TCR_TSPRESCALE_Pos              8U                                            /*!< ITM 
1063:Drivers/CMSIS/Include/core_cm33.h **** #define ITM_TCR_TSPRESCALE_Msk             (3UL << ITM_TCR_TSPRESCALE_Pos)                /*!< ITM 
1064:Drivers/CMSIS/Include/core_cm33.h **** 
1065:Drivers/CMSIS/Include/core_cm33.h **** #define ITM_TCR_STALLENA_Pos                5U                                            /*!< ITM 
1066:Drivers/CMSIS/Include/core_cm33.h **** #define ITM_TCR_STALLENA_Msk               (1UL << ITM_TCR_STALLENA_Pos)                  /*!< ITM 
1067:Drivers/CMSIS/Include/core_cm33.h **** 
1068:Drivers/CMSIS/Include/core_cm33.h **** #define ITM_TCR_SWOENA_Pos                  4U                                            /*!< ITM 
1069:Drivers/CMSIS/Include/core_cm33.h **** #define ITM_TCR_SWOENA_Msk                 (1UL << ITM_TCR_SWOENA_Pos)                    /*!< ITM 
1070:Drivers/CMSIS/Include/core_cm33.h **** 
1071:Drivers/CMSIS/Include/core_cm33.h **** #define ITM_TCR_DWTENA_Pos                  3U                                            /*!< ITM 
1072:Drivers/CMSIS/Include/core_cm33.h **** #define ITM_TCR_DWTENA_Msk                 (1UL << ITM_TCR_DWTENA_Pos)                    /*!< ITM 
1073:Drivers/CMSIS/Include/core_cm33.h **** 
1074:Drivers/CMSIS/Include/core_cm33.h **** #define ITM_TCR_SYNCENA_Pos                 2U                                            /*!< ITM 
1075:Drivers/CMSIS/Include/core_cm33.h **** #define ITM_TCR_SYNCENA_Msk                (1UL << ITM_TCR_SYNCENA_Pos)                   /*!< ITM 
1076:Drivers/CMSIS/Include/core_cm33.h **** 
1077:Drivers/CMSIS/Include/core_cm33.h **** #define ITM_TCR_TSENA_Pos                   1U                                            /*!< ITM 
1078:Drivers/CMSIS/Include/core_cm33.h **** #define ITM_TCR_TSENA_Msk                  (1UL << ITM_TCR_TSENA_Pos)                     /*!< ITM 
1079:Drivers/CMSIS/Include/core_cm33.h **** 
1080:Drivers/CMSIS/Include/core_cm33.h **** #define ITM_TCR_ITMENA_Pos                  0U                                            /*!< ITM 
1081:Drivers/CMSIS/Include/core_cm33.h **** #define ITM_TCR_ITMENA_Msk                 (1UL /*<< ITM_TCR_ITMENA_Pos*/)                /*!< ITM 
1082:Drivers/CMSIS/Include/core_cm33.h **** 
1083:Drivers/CMSIS/Include/core_cm33.h **** /* ITM Lock Status Register Definitions */
1084:Drivers/CMSIS/Include/core_cm33.h **** #define ITM_LSR_ByteAcc_Pos                 2U                                            /*!< ITM 
1085:Drivers/CMSIS/Include/core_cm33.h **** #define ITM_LSR_ByteAcc_Msk                (1UL << ITM_LSR_ByteAcc_Pos)                   /*!< ITM 
1086:Drivers/CMSIS/Include/core_cm33.h **** 
1087:Drivers/CMSIS/Include/core_cm33.h **** #define ITM_LSR_Access_Pos                  1U                                            /*!< ITM 
1088:Drivers/CMSIS/Include/core_cm33.h **** #define ITM_LSR_Access_Msk                 (1UL << ITM_LSR_Access_Pos)                    /*!< ITM 
1089:Drivers/CMSIS/Include/core_cm33.h **** 
1090:Drivers/CMSIS/Include/core_cm33.h **** #define ITM_LSR_Present_Pos                 0U                                            /*!< ITM 
1091:Drivers/CMSIS/Include/core_cm33.h **** #define ITM_LSR_Present_Msk                (1UL /*<< ITM_LSR_Present_Pos*/)               /*!< ITM 
1092:Drivers/CMSIS/Include/core_cm33.h **** 
1093:Drivers/CMSIS/Include/core_cm33.h **** /*@}*/ /* end of group CMSIS_ITM */
1094:Drivers/CMSIS/Include/core_cm33.h **** 
1095:Drivers/CMSIS/Include/core_cm33.h **** 
1096:Drivers/CMSIS/Include/core_cm33.h **** /**
1097:Drivers/CMSIS/Include/core_cm33.h ****   \ingroup  CMSIS_core_register
1098:Drivers/CMSIS/Include/core_cm33.h ****   \defgroup CMSIS_DWT     Data Watchpoint and Trace (DWT)
1099:Drivers/CMSIS/Include/core_cm33.h ****   \brief    Type definitions for the Data Watchpoint and Trace (DWT)
1100:Drivers/CMSIS/Include/core_cm33.h ****   @{
1101:Drivers/CMSIS/Include/core_cm33.h ****  */
1102:Drivers/CMSIS/Include/core_cm33.h **** 
1103:Drivers/CMSIS/Include/core_cm33.h **** /**
1104:Drivers/CMSIS/Include/core_cm33.h ****   \brief  Structure type to access the Data Watchpoint and Trace Register (DWT).
1105:Drivers/CMSIS/Include/core_cm33.h ****  */
1106:Drivers/CMSIS/Include/core_cm33.h **** typedef struct
1107:Drivers/CMSIS/Include/core_cm33.h **** {
1108:Drivers/CMSIS/Include/core_cm33.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x000 (R/W)  Control Register */
1109:Drivers/CMSIS/Include/core_cm33.h ****   __IOM uint32_t CYCCNT;                 /*!< Offset: 0x004 (R/W)  Cycle Count Register */
1110:Drivers/CMSIS/Include/core_cm33.h ****   __IOM uint32_t CPICNT;                 /*!< Offset: 0x008 (R/W)  CPI Count Register */
1111:Drivers/CMSIS/Include/core_cm33.h ****   __IOM uint32_t EXCCNT;                 /*!< Offset: 0x00C (R/W)  Exception Overhead Count Registe
1112:Drivers/CMSIS/Include/core_cm33.h ****   __IOM uint32_t SLEEPCNT;               /*!< Offset: 0x010 (R/W)  Sleep Count Register */
ARM GAS  /tmp/ccvX52LM.s 			page 21


1113:Drivers/CMSIS/Include/core_cm33.h ****   __IOM uint32_t LSUCNT;                 /*!< Offset: 0x014 (R/W)  LSU Count Register */
1114:Drivers/CMSIS/Include/core_cm33.h ****   __IOM uint32_t FOLDCNT;                /*!< Offset: 0x018 (R/W)  Folded-instruction Count Registe
1115:Drivers/CMSIS/Include/core_cm33.h ****   __IM  uint32_t PCSR;                   /*!< Offset: 0x01C (R/ )  Program Counter Sample Register 
1116:Drivers/CMSIS/Include/core_cm33.h ****   __IOM uint32_t COMP0;                  /*!< Offset: 0x020 (R/W)  Comparator Register 0 */
1117:Drivers/CMSIS/Include/core_cm33.h ****         uint32_t RESERVED1[1U];
1118:Drivers/CMSIS/Include/core_cm33.h ****   __IOM uint32_t FUNCTION0;              /*!< Offset: 0x028 (R/W)  Function Register 0 */
1119:Drivers/CMSIS/Include/core_cm33.h ****         uint32_t RESERVED2[1U];
1120:Drivers/CMSIS/Include/core_cm33.h ****   __IOM uint32_t COMP1;                  /*!< Offset: 0x030 (R/W)  Comparator Register 1 */
1121:Drivers/CMSIS/Include/core_cm33.h ****         uint32_t RESERVED3[1U];
1122:Drivers/CMSIS/Include/core_cm33.h ****   __IOM uint32_t FUNCTION1;              /*!< Offset: 0x038 (R/W)  Function Register 1 */
1123:Drivers/CMSIS/Include/core_cm33.h ****         uint32_t RESERVED4[1U];
1124:Drivers/CMSIS/Include/core_cm33.h ****   __IOM uint32_t COMP2;                  /*!< Offset: 0x040 (R/W)  Comparator Register 2 */
1125:Drivers/CMSIS/Include/core_cm33.h ****         uint32_t RESERVED5[1U];
1126:Drivers/CMSIS/Include/core_cm33.h ****   __IOM uint32_t FUNCTION2;              /*!< Offset: 0x048 (R/W)  Function Register 2 */
1127:Drivers/CMSIS/Include/core_cm33.h ****         uint32_t RESERVED6[1U];
1128:Drivers/CMSIS/Include/core_cm33.h ****   __IOM uint32_t COMP3;                  /*!< Offset: 0x050 (R/W)  Comparator Register 3 */
1129:Drivers/CMSIS/Include/core_cm33.h ****         uint32_t RESERVED7[1U];
1130:Drivers/CMSIS/Include/core_cm33.h ****   __IOM uint32_t FUNCTION3;              /*!< Offset: 0x058 (R/W)  Function Register 3 */
1131:Drivers/CMSIS/Include/core_cm33.h ****         uint32_t RESERVED8[1U];
1132:Drivers/CMSIS/Include/core_cm33.h ****   __IOM uint32_t COMP4;                  /*!< Offset: 0x060 (R/W)  Comparator Register 4 */
1133:Drivers/CMSIS/Include/core_cm33.h ****         uint32_t RESERVED9[1U];
1134:Drivers/CMSIS/Include/core_cm33.h ****   __IOM uint32_t FUNCTION4;              /*!< Offset: 0x068 (R/W)  Function Register 4 */
1135:Drivers/CMSIS/Include/core_cm33.h ****         uint32_t RESERVED10[1U];
1136:Drivers/CMSIS/Include/core_cm33.h ****   __IOM uint32_t COMP5;                  /*!< Offset: 0x070 (R/W)  Comparator Register 5 */
1137:Drivers/CMSIS/Include/core_cm33.h ****         uint32_t RESERVED11[1U];
1138:Drivers/CMSIS/Include/core_cm33.h ****   __IOM uint32_t FUNCTION5;              /*!< Offset: 0x078 (R/W)  Function Register 5 */
1139:Drivers/CMSIS/Include/core_cm33.h ****         uint32_t RESERVED12[1U];
1140:Drivers/CMSIS/Include/core_cm33.h ****   __IOM uint32_t COMP6;                  /*!< Offset: 0x080 (R/W)  Comparator Register 6 */
1141:Drivers/CMSIS/Include/core_cm33.h ****         uint32_t RESERVED13[1U];
1142:Drivers/CMSIS/Include/core_cm33.h ****   __IOM uint32_t FUNCTION6;              /*!< Offset: 0x088 (R/W)  Function Register 6 */
1143:Drivers/CMSIS/Include/core_cm33.h ****         uint32_t RESERVED14[1U];
1144:Drivers/CMSIS/Include/core_cm33.h ****   __IOM uint32_t COMP7;                  /*!< Offset: 0x090 (R/W)  Comparator Register 7 */
1145:Drivers/CMSIS/Include/core_cm33.h ****         uint32_t RESERVED15[1U];
1146:Drivers/CMSIS/Include/core_cm33.h ****   __IOM uint32_t FUNCTION7;              /*!< Offset: 0x098 (R/W)  Function Register 7 */
1147:Drivers/CMSIS/Include/core_cm33.h ****         uint32_t RESERVED16[1U];
1148:Drivers/CMSIS/Include/core_cm33.h ****   __IOM uint32_t COMP8;                  /*!< Offset: 0x0A0 (R/W)  Comparator Register 8 */
1149:Drivers/CMSIS/Include/core_cm33.h ****         uint32_t RESERVED17[1U];
1150:Drivers/CMSIS/Include/core_cm33.h ****   __IOM uint32_t FUNCTION8;              /*!< Offset: 0x0A8 (R/W)  Function Register 8 */
1151:Drivers/CMSIS/Include/core_cm33.h ****         uint32_t RESERVED18[1U];
1152:Drivers/CMSIS/Include/core_cm33.h ****   __IOM uint32_t COMP9;                  /*!< Offset: 0x0B0 (R/W)  Comparator Register 9 */
1153:Drivers/CMSIS/Include/core_cm33.h ****         uint32_t RESERVED19[1U];
1154:Drivers/CMSIS/Include/core_cm33.h ****   __IOM uint32_t FUNCTION9;              /*!< Offset: 0x0B8 (R/W)  Function Register 9 */
1155:Drivers/CMSIS/Include/core_cm33.h ****         uint32_t RESERVED20[1U];
1156:Drivers/CMSIS/Include/core_cm33.h ****   __IOM uint32_t COMP10;                 /*!< Offset: 0x0C0 (R/W)  Comparator Register 10 */
1157:Drivers/CMSIS/Include/core_cm33.h ****         uint32_t RESERVED21[1U];
1158:Drivers/CMSIS/Include/core_cm33.h ****   __IOM uint32_t FUNCTION10;             /*!< Offset: 0x0C8 (R/W)  Function Register 10 */
1159:Drivers/CMSIS/Include/core_cm33.h ****         uint32_t RESERVED22[1U];
1160:Drivers/CMSIS/Include/core_cm33.h ****   __IOM uint32_t COMP11;                 /*!< Offset: 0x0D0 (R/W)  Comparator Register 11 */
1161:Drivers/CMSIS/Include/core_cm33.h ****         uint32_t RESERVED23[1U];
1162:Drivers/CMSIS/Include/core_cm33.h ****   __IOM uint32_t FUNCTION11;             /*!< Offset: 0x0D8 (R/W)  Function Register 11 */
1163:Drivers/CMSIS/Include/core_cm33.h ****         uint32_t RESERVED24[1U];
1164:Drivers/CMSIS/Include/core_cm33.h ****   __IOM uint32_t COMP12;                 /*!< Offset: 0x0E0 (R/W)  Comparator Register 12 */
1165:Drivers/CMSIS/Include/core_cm33.h ****         uint32_t RESERVED25[1U];
1166:Drivers/CMSIS/Include/core_cm33.h ****   __IOM uint32_t FUNCTION12;             /*!< Offset: 0x0E8 (R/W)  Function Register 12 */
1167:Drivers/CMSIS/Include/core_cm33.h ****         uint32_t RESERVED26[1U];
1168:Drivers/CMSIS/Include/core_cm33.h ****   __IOM uint32_t COMP13;                 /*!< Offset: 0x0F0 (R/W)  Comparator Register 13 */
1169:Drivers/CMSIS/Include/core_cm33.h ****         uint32_t RESERVED27[1U];
ARM GAS  /tmp/ccvX52LM.s 			page 22


1170:Drivers/CMSIS/Include/core_cm33.h ****   __IOM uint32_t FUNCTION13;             /*!< Offset: 0x0F8 (R/W)  Function Register 13 */
1171:Drivers/CMSIS/Include/core_cm33.h ****         uint32_t RESERVED28[1U];
1172:Drivers/CMSIS/Include/core_cm33.h ****   __IOM uint32_t COMP14;                 /*!< Offset: 0x100 (R/W)  Comparator Register 14 */
1173:Drivers/CMSIS/Include/core_cm33.h ****         uint32_t RESERVED29[1U];
1174:Drivers/CMSIS/Include/core_cm33.h ****   __IOM uint32_t FUNCTION14;             /*!< Offset: 0x108 (R/W)  Function Register 14 */
1175:Drivers/CMSIS/Include/core_cm33.h ****         uint32_t RESERVED30[1U];
1176:Drivers/CMSIS/Include/core_cm33.h ****   __IOM uint32_t COMP15;                 /*!< Offset: 0x110 (R/W)  Comparator Register 15 */
1177:Drivers/CMSIS/Include/core_cm33.h ****         uint32_t RESERVED31[1U];
1178:Drivers/CMSIS/Include/core_cm33.h ****   __IOM uint32_t FUNCTION15;             /*!< Offset: 0x118 (R/W)  Function Register 15 */
1179:Drivers/CMSIS/Include/core_cm33.h ****         uint32_t RESERVED32[934U];
1180:Drivers/CMSIS/Include/core_cm33.h ****   __IM  uint32_t LSR;                    /*!< Offset: 0xFB4 (R  )  Lock Status Register */
1181:Drivers/CMSIS/Include/core_cm33.h ****         uint32_t RESERVED33[1U];
1182:Drivers/CMSIS/Include/core_cm33.h ****   __IM  uint32_t DEVARCH;                /*!< Offset: 0xFBC (R/ )  Device Architecture Register */
1183:Drivers/CMSIS/Include/core_cm33.h **** } DWT_Type;
1184:Drivers/CMSIS/Include/core_cm33.h **** 
1185:Drivers/CMSIS/Include/core_cm33.h **** /* DWT Control Register Definitions */
1186:Drivers/CMSIS/Include/core_cm33.h **** #define DWT_CTRL_NUMCOMP_Pos               28U                                         /*!< DWT CTR
1187:Drivers/CMSIS/Include/core_cm33.h **** #define DWT_CTRL_NUMCOMP_Msk               (0xFUL << DWT_CTRL_NUMCOMP_Pos)             /*!< DWT CTR
1188:Drivers/CMSIS/Include/core_cm33.h **** 
1189:Drivers/CMSIS/Include/core_cm33.h **** #define DWT_CTRL_NOTRCPKT_Pos              27U                                         /*!< DWT CTR
1190:Drivers/CMSIS/Include/core_cm33.h **** #define DWT_CTRL_NOTRCPKT_Msk              (0x1UL << DWT_CTRL_NOTRCPKT_Pos)            /*!< DWT CTR
1191:Drivers/CMSIS/Include/core_cm33.h **** 
1192:Drivers/CMSIS/Include/core_cm33.h **** #define DWT_CTRL_NOEXTTRIG_Pos             26U                                         /*!< DWT CTR
1193:Drivers/CMSIS/Include/core_cm33.h **** #define DWT_CTRL_NOEXTTRIG_Msk             (0x1UL << DWT_CTRL_NOEXTTRIG_Pos)           /*!< DWT CTR
1194:Drivers/CMSIS/Include/core_cm33.h **** 
1195:Drivers/CMSIS/Include/core_cm33.h **** #define DWT_CTRL_NOCYCCNT_Pos              25U                                         /*!< DWT CTR
1196:Drivers/CMSIS/Include/core_cm33.h **** #define DWT_CTRL_NOCYCCNT_Msk              (0x1UL << DWT_CTRL_NOCYCCNT_Pos)            /*!< DWT CTR
1197:Drivers/CMSIS/Include/core_cm33.h **** 
1198:Drivers/CMSIS/Include/core_cm33.h **** #define DWT_CTRL_NOPRFCNT_Pos              24U                                         /*!< DWT CTR
1199:Drivers/CMSIS/Include/core_cm33.h **** #define DWT_CTRL_NOPRFCNT_Msk              (0x1UL << DWT_CTRL_NOPRFCNT_Pos)            /*!< DWT CTR
1200:Drivers/CMSIS/Include/core_cm33.h **** 
1201:Drivers/CMSIS/Include/core_cm33.h **** #define DWT_CTRL_CYCDISS_Pos               23U                                         /*!< DWT CTR
1202:Drivers/CMSIS/Include/core_cm33.h **** #define DWT_CTRL_CYCDISS_Msk               (0x1UL << DWT_CTRL_CYCDISS_Pos)             /*!< DWT CTR
1203:Drivers/CMSIS/Include/core_cm33.h **** 
1204:Drivers/CMSIS/Include/core_cm33.h **** #define DWT_CTRL_CYCEVTENA_Pos             22U                                         /*!< DWT CTR
1205:Drivers/CMSIS/Include/core_cm33.h **** #define DWT_CTRL_CYCEVTENA_Msk             (0x1UL << DWT_CTRL_CYCEVTENA_Pos)           /*!< DWT CTR
1206:Drivers/CMSIS/Include/core_cm33.h **** 
1207:Drivers/CMSIS/Include/core_cm33.h **** #define DWT_CTRL_FOLDEVTENA_Pos            21U                                         /*!< DWT CTR
1208:Drivers/CMSIS/Include/core_cm33.h **** #define DWT_CTRL_FOLDEVTENA_Msk            (0x1UL << DWT_CTRL_FOLDEVTENA_Pos)          /*!< DWT CTR
1209:Drivers/CMSIS/Include/core_cm33.h **** 
1210:Drivers/CMSIS/Include/core_cm33.h **** #define DWT_CTRL_LSUEVTENA_Pos             20U                                         /*!< DWT CTR
1211:Drivers/CMSIS/Include/core_cm33.h **** #define DWT_CTRL_LSUEVTENA_Msk             (0x1UL << DWT_CTRL_LSUEVTENA_Pos)           /*!< DWT CTR
1212:Drivers/CMSIS/Include/core_cm33.h **** 
1213:Drivers/CMSIS/Include/core_cm33.h **** #define DWT_CTRL_SLEEPEVTENA_Pos           19U                                         /*!< DWT CTR
1214:Drivers/CMSIS/Include/core_cm33.h **** #define DWT_CTRL_SLEEPEVTENA_Msk           (0x1UL << DWT_CTRL_SLEEPEVTENA_Pos)         /*!< DWT CTR
1215:Drivers/CMSIS/Include/core_cm33.h **** 
1216:Drivers/CMSIS/Include/core_cm33.h **** #define DWT_CTRL_EXCEVTENA_Pos             18U                                         /*!< DWT CTR
1217:Drivers/CMSIS/Include/core_cm33.h **** #define DWT_CTRL_EXCEVTENA_Msk             (0x1UL << DWT_CTRL_EXCEVTENA_Pos)           /*!< DWT CTR
1218:Drivers/CMSIS/Include/core_cm33.h **** 
1219:Drivers/CMSIS/Include/core_cm33.h **** #define DWT_CTRL_CPIEVTENA_Pos             17U                                         /*!< DWT CTR
1220:Drivers/CMSIS/Include/core_cm33.h **** #define DWT_CTRL_CPIEVTENA_Msk             (0x1UL << DWT_CTRL_CPIEVTENA_Pos)           /*!< DWT CTR
1221:Drivers/CMSIS/Include/core_cm33.h **** 
1222:Drivers/CMSIS/Include/core_cm33.h **** #define DWT_CTRL_EXCTRCENA_Pos             16U                                         /*!< DWT CTR
1223:Drivers/CMSIS/Include/core_cm33.h **** #define DWT_CTRL_EXCTRCENA_Msk             (0x1UL << DWT_CTRL_EXCTRCENA_Pos)           /*!< DWT CTR
1224:Drivers/CMSIS/Include/core_cm33.h **** 
1225:Drivers/CMSIS/Include/core_cm33.h **** #define DWT_CTRL_PCSAMPLENA_Pos            12U                                         /*!< DWT CTR
1226:Drivers/CMSIS/Include/core_cm33.h **** #define DWT_CTRL_PCSAMPLENA_Msk            (0x1UL << DWT_CTRL_PCSAMPLENA_Pos)          /*!< DWT CTR
ARM GAS  /tmp/ccvX52LM.s 			page 23


1227:Drivers/CMSIS/Include/core_cm33.h **** 
1228:Drivers/CMSIS/Include/core_cm33.h **** #define DWT_CTRL_SYNCTAP_Pos               10U                                         /*!< DWT CTR
1229:Drivers/CMSIS/Include/core_cm33.h **** #define DWT_CTRL_SYNCTAP_Msk               (0x3UL << DWT_CTRL_SYNCTAP_Pos)             /*!< DWT CTR
1230:Drivers/CMSIS/Include/core_cm33.h **** 
1231:Drivers/CMSIS/Include/core_cm33.h **** #define DWT_CTRL_CYCTAP_Pos                 9U                                         /*!< DWT CTR
1232:Drivers/CMSIS/Include/core_cm33.h **** #define DWT_CTRL_CYCTAP_Msk                (0x1UL << DWT_CTRL_CYCTAP_Pos)              /*!< DWT CTR
1233:Drivers/CMSIS/Include/core_cm33.h **** 
1234:Drivers/CMSIS/Include/core_cm33.h **** #define DWT_CTRL_POSTINIT_Pos               5U                                         /*!< DWT CTR
1235:Drivers/CMSIS/Include/core_cm33.h **** #define DWT_CTRL_POSTINIT_Msk              (0xFUL << DWT_CTRL_POSTINIT_Pos)            /*!< DWT CTR
1236:Drivers/CMSIS/Include/core_cm33.h **** 
1237:Drivers/CMSIS/Include/core_cm33.h **** #define DWT_CTRL_POSTPRESET_Pos             1U                                         /*!< DWT CTR
1238:Drivers/CMSIS/Include/core_cm33.h **** #define DWT_CTRL_POSTPRESET_Msk            (0xFUL << DWT_CTRL_POSTPRESET_Pos)          /*!< DWT CTR
1239:Drivers/CMSIS/Include/core_cm33.h **** 
1240:Drivers/CMSIS/Include/core_cm33.h **** #define DWT_CTRL_CYCCNTENA_Pos              0U                                         /*!< DWT CTR
1241:Drivers/CMSIS/Include/core_cm33.h **** #define DWT_CTRL_CYCCNTENA_Msk             (0x1UL /*<< DWT_CTRL_CYCCNTENA_Pos*/)       /*!< DWT CTR
1242:Drivers/CMSIS/Include/core_cm33.h **** 
1243:Drivers/CMSIS/Include/core_cm33.h **** /* DWT CPI Count Register Definitions */
1244:Drivers/CMSIS/Include/core_cm33.h **** #define DWT_CPICNT_CPICNT_Pos               0U                                         /*!< DWT CPI
1245:Drivers/CMSIS/Include/core_cm33.h **** #define DWT_CPICNT_CPICNT_Msk              (0xFFUL /*<< DWT_CPICNT_CPICNT_Pos*/)       /*!< DWT CPI
1246:Drivers/CMSIS/Include/core_cm33.h **** 
1247:Drivers/CMSIS/Include/core_cm33.h **** /* DWT Exception Overhead Count Register Definitions */
1248:Drivers/CMSIS/Include/core_cm33.h **** #define DWT_EXCCNT_EXCCNT_Pos               0U                                         /*!< DWT EXC
1249:Drivers/CMSIS/Include/core_cm33.h **** #define DWT_EXCCNT_EXCCNT_Msk              (0xFFUL /*<< DWT_EXCCNT_EXCCNT_Pos*/)       /*!< DWT EXC
1250:Drivers/CMSIS/Include/core_cm33.h **** 
1251:Drivers/CMSIS/Include/core_cm33.h **** /* DWT Sleep Count Register Definitions */
1252:Drivers/CMSIS/Include/core_cm33.h **** #define DWT_SLEEPCNT_SLEEPCNT_Pos           0U                                         /*!< DWT SLE
1253:Drivers/CMSIS/Include/core_cm33.h **** #define DWT_SLEEPCNT_SLEEPCNT_Msk          (0xFFUL /*<< DWT_SLEEPCNT_SLEEPCNT_Pos*/)   /*!< DWT SLE
1254:Drivers/CMSIS/Include/core_cm33.h **** 
1255:Drivers/CMSIS/Include/core_cm33.h **** /* DWT LSU Count Register Definitions */
1256:Drivers/CMSIS/Include/core_cm33.h **** #define DWT_LSUCNT_LSUCNT_Pos               0U                                         /*!< DWT LSU
1257:Drivers/CMSIS/Include/core_cm33.h **** #define DWT_LSUCNT_LSUCNT_Msk              (0xFFUL /*<< DWT_LSUCNT_LSUCNT_Pos*/)       /*!< DWT LSU
1258:Drivers/CMSIS/Include/core_cm33.h **** 
1259:Drivers/CMSIS/Include/core_cm33.h **** /* DWT Folded-instruction Count Register Definitions */
1260:Drivers/CMSIS/Include/core_cm33.h **** #define DWT_FOLDCNT_FOLDCNT_Pos             0U                                         /*!< DWT FOL
1261:Drivers/CMSIS/Include/core_cm33.h **** #define DWT_FOLDCNT_FOLDCNT_Msk            (0xFFUL /*<< DWT_FOLDCNT_FOLDCNT_Pos*/)     /*!< DWT FOL
1262:Drivers/CMSIS/Include/core_cm33.h **** 
1263:Drivers/CMSIS/Include/core_cm33.h **** /* DWT Comparator Function Register Definitions */
1264:Drivers/CMSIS/Include/core_cm33.h **** #define DWT_FUNCTION_ID_Pos                27U                                         /*!< DWT FUN
1265:Drivers/CMSIS/Include/core_cm33.h **** #define DWT_FUNCTION_ID_Msk                (0x1FUL << DWT_FUNCTION_ID_Pos)             /*!< DWT FUN
1266:Drivers/CMSIS/Include/core_cm33.h **** 
1267:Drivers/CMSIS/Include/core_cm33.h **** #define DWT_FUNCTION_MATCHED_Pos           24U                                         /*!< DWT FUN
1268:Drivers/CMSIS/Include/core_cm33.h **** #define DWT_FUNCTION_MATCHED_Msk           (0x1UL << DWT_FUNCTION_MATCHED_Pos)         /*!< DWT FUN
1269:Drivers/CMSIS/Include/core_cm33.h **** 
1270:Drivers/CMSIS/Include/core_cm33.h **** #define DWT_FUNCTION_DATAVSIZE_Pos         10U                                         /*!< DWT FUN
1271:Drivers/CMSIS/Include/core_cm33.h **** #define DWT_FUNCTION_DATAVSIZE_Msk         (0x3UL << DWT_FUNCTION_DATAVSIZE_Pos)       /*!< DWT FUN
1272:Drivers/CMSIS/Include/core_cm33.h **** 
1273:Drivers/CMSIS/Include/core_cm33.h **** #define DWT_FUNCTION_ACTION_Pos             4U                                         /*!< DWT FUN
1274:Drivers/CMSIS/Include/core_cm33.h **** #define DWT_FUNCTION_ACTION_Msk            (0x1UL << DWT_FUNCTION_ACTION_Pos)          /*!< DWT FUN
1275:Drivers/CMSIS/Include/core_cm33.h **** 
1276:Drivers/CMSIS/Include/core_cm33.h **** #define DWT_FUNCTION_MATCH_Pos              0U                                         /*!< DWT FUN
1277:Drivers/CMSIS/Include/core_cm33.h **** #define DWT_FUNCTION_MATCH_Msk             (0xFUL /*<< DWT_FUNCTION_MATCH_Pos*/)       /*!< DWT FUN
1278:Drivers/CMSIS/Include/core_cm33.h **** 
1279:Drivers/CMSIS/Include/core_cm33.h **** /*@}*/ /* end of group CMSIS_DWT */
1280:Drivers/CMSIS/Include/core_cm33.h **** 
1281:Drivers/CMSIS/Include/core_cm33.h **** 
1282:Drivers/CMSIS/Include/core_cm33.h **** /**
1283:Drivers/CMSIS/Include/core_cm33.h ****   \ingroup  CMSIS_core_register
ARM GAS  /tmp/ccvX52LM.s 			page 24


1284:Drivers/CMSIS/Include/core_cm33.h ****   \defgroup CMSIS_TPI     Trace Port Interface (TPI)
1285:Drivers/CMSIS/Include/core_cm33.h ****   \brief    Type definitions for the Trace Port Interface (TPI)
1286:Drivers/CMSIS/Include/core_cm33.h ****   @{
1287:Drivers/CMSIS/Include/core_cm33.h ****  */
1288:Drivers/CMSIS/Include/core_cm33.h **** 
1289:Drivers/CMSIS/Include/core_cm33.h **** /**
1290:Drivers/CMSIS/Include/core_cm33.h ****   \brief  Structure type to access the Trace Port Interface Register (TPI).
1291:Drivers/CMSIS/Include/core_cm33.h ****  */
1292:Drivers/CMSIS/Include/core_cm33.h **** typedef struct
1293:Drivers/CMSIS/Include/core_cm33.h **** {
1294:Drivers/CMSIS/Include/core_cm33.h ****   __IM  uint32_t SSPSR;                  /*!< Offset: 0x000 (R/ )  Supported Parallel Port Size Reg
1295:Drivers/CMSIS/Include/core_cm33.h ****   __IOM uint32_t CSPSR;                  /*!< Offset: 0x004 (R/W)  Current Parallel Port Size Regis
1296:Drivers/CMSIS/Include/core_cm33.h ****         uint32_t RESERVED0[2U];
1297:Drivers/CMSIS/Include/core_cm33.h ****   __IOM uint32_t ACPR;                   /*!< Offset: 0x010 (R/W)  Asynchronous Clock Prescaler Reg
1298:Drivers/CMSIS/Include/core_cm33.h ****         uint32_t RESERVED1[55U];
1299:Drivers/CMSIS/Include/core_cm33.h ****   __IOM uint32_t SPPR;                   /*!< Offset: 0x0F0 (R/W)  Selected Pin Protocol Register *
1300:Drivers/CMSIS/Include/core_cm33.h ****         uint32_t RESERVED2[131U];
1301:Drivers/CMSIS/Include/core_cm33.h ****   __IM  uint32_t FFSR;                   /*!< Offset: 0x300 (R/ )  Formatter and Flush Status Regis
1302:Drivers/CMSIS/Include/core_cm33.h ****   __IOM uint32_t FFCR;                   /*!< Offset: 0x304 (R/W)  Formatter and Flush Control Regi
1303:Drivers/CMSIS/Include/core_cm33.h ****   __IOM uint32_t PSCR;                   /*!< Offset: 0x308 (R/W)  Periodic Synchronization Control
1304:Drivers/CMSIS/Include/core_cm33.h ****         uint32_t RESERVED3[759U];
1305:Drivers/CMSIS/Include/core_cm33.h ****   __IM  uint32_t TRIGGER;                /*!< Offset: 0xEE8 (R/ )  TRIGGER Register */
1306:Drivers/CMSIS/Include/core_cm33.h ****   __IM  uint32_t ITFTTD0;                /*!< Offset: 0xEEC (R/ )  Integration Test FIFO Test Data 
1307:Drivers/CMSIS/Include/core_cm33.h ****   __IOM uint32_t ITATBCTR2;              /*!< Offset: 0xEF0 (R/W)  Integration Test ATB Control Reg
1308:Drivers/CMSIS/Include/core_cm33.h ****         uint32_t RESERVED4[1U];
1309:Drivers/CMSIS/Include/core_cm33.h ****   __IM  uint32_t ITATBCTR0;              /*!< Offset: 0xEF8 (R/ )  Integration Test ATB Control Reg
1310:Drivers/CMSIS/Include/core_cm33.h ****   __IM  uint32_t ITFTTD1;                /*!< Offset: 0xEFC (R/ )  Integration Test FIFO Test Data 
1311:Drivers/CMSIS/Include/core_cm33.h ****   __IOM uint32_t ITCTRL;                 /*!< Offset: 0xF00 (R/W)  Integration Mode Control */
1312:Drivers/CMSIS/Include/core_cm33.h ****         uint32_t RESERVED5[39U];
1313:Drivers/CMSIS/Include/core_cm33.h ****   __IOM uint32_t CLAIMSET;               /*!< Offset: 0xFA0 (R/W)  Claim tag set */
1314:Drivers/CMSIS/Include/core_cm33.h ****   __IOM uint32_t CLAIMCLR;               /*!< Offset: 0xFA4 (R/W)  Claim tag clear */
1315:Drivers/CMSIS/Include/core_cm33.h ****         uint32_t RESERVED7[8U];
1316:Drivers/CMSIS/Include/core_cm33.h ****   __IM  uint32_t DEVID;                  /*!< Offset: 0xFC8 (R/ )  Device Configuration Register */
1317:Drivers/CMSIS/Include/core_cm33.h ****   __IM  uint32_t DEVTYPE;                /*!< Offset: 0xFCC (R/ )  Device Type Identifier Register 
1318:Drivers/CMSIS/Include/core_cm33.h **** } TPI_Type;
1319:Drivers/CMSIS/Include/core_cm33.h **** 
1320:Drivers/CMSIS/Include/core_cm33.h **** /* TPI Asynchronous Clock Prescaler Register Definitions */
1321:Drivers/CMSIS/Include/core_cm33.h **** #define TPI_ACPR_PRESCALER_Pos              0U                                         /*!< TPI ACP
1322:Drivers/CMSIS/Include/core_cm33.h **** #define TPI_ACPR_PRESCALER_Msk             (0x1FFFUL /*<< TPI_ACPR_PRESCALER_Pos*/)    /*!< TPI ACP
1323:Drivers/CMSIS/Include/core_cm33.h **** 
1324:Drivers/CMSIS/Include/core_cm33.h **** /* TPI Selected Pin Protocol Register Definitions */
1325:Drivers/CMSIS/Include/core_cm33.h **** #define TPI_SPPR_TXMODE_Pos                 0U                                         /*!< TPI SPP
1326:Drivers/CMSIS/Include/core_cm33.h **** #define TPI_SPPR_TXMODE_Msk                (0x3UL /*<< TPI_SPPR_TXMODE_Pos*/)          /*!< TPI SPP
1327:Drivers/CMSIS/Include/core_cm33.h **** 
1328:Drivers/CMSIS/Include/core_cm33.h **** /* TPI Formatter and Flush Status Register Definitions */
1329:Drivers/CMSIS/Include/core_cm33.h **** #define TPI_FFSR_FtNonStop_Pos              3U                                         /*!< TPI FFS
1330:Drivers/CMSIS/Include/core_cm33.h **** #define TPI_FFSR_FtNonStop_Msk             (0x1UL << TPI_FFSR_FtNonStop_Pos)           /*!< TPI FFS
1331:Drivers/CMSIS/Include/core_cm33.h **** 
1332:Drivers/CMSIS/Include/core_cm33.h **** #define TPI_FFSR_TCPresent_Pos              2U                                         /*!< TPI FFS
1333:Drivers/CMSIS/Include/core_cm33.h **** #define TPI_FFSR_TCPresent_Msk             (0x1UL << TPI_FFSR_TCPresent_Pos)           /*!< TPI FFS
1334:Drivers/CMSIS/Include/core_cm33.h **** 
1335:Drivers/CMSIS/Include/core_cm33.h **** #define TPI_FFSR_FtStopped_Pos              1U                                         /*!< TPI FFS
1336:Drivers/CMSIS/Include/core_cm33.h **** #define TPI_FFSR_FtStopped_Msk             (0x1UL << TPI_FFSR_FtStopped_Pos)           /*!< TPI FFS
1337:Drivers/CMSIS/Include/core_cm33.h **** 
1338:Drivers/CMSIS/Include/core_cm33.h **** #define TPI_FFSR_FlInProg_Pos               0U                                         /*!< TPI FFS
1339:Drivers/CMSIS/Include/core_cm33.h **** #define TPI_FFSR_FlInProg_Msk              (0x1UL /*<< TPI_FFSR_FlInProg_Pos*/)        /*!< TPI FFS
1340:Drivers/CMSIS/Include/core_cm33.h **** 
ARM GAS  /tmp/ccvX52LM.s 			page 25


1341:Drivers/CMSIS/Include/core_cm33.h **** /* TPI Formatter and Flush Control Register Definitions */
1342:Drivers/CMSIS/Include/core_cm33.h **** #define TPI_FFCR_TrigIn_Pos                 8U                                         /*!< TPI FFC
1343:Drivers/CMSIS/Include/core_cm33.h **** #define TPI_FFCR_TrigIn_Msk                (0x1UL << TPI_FFCR_TrigIn_Pos)              /*!< TPI FFC
1344:Drivers/CMSIS/Include/core_cm33.h **** 
1345:Drivers/CMSIS/Include/core_cm33.h **** #define TPI_FFCR_FOnMan_Pos                 6U                                         /*!< TPI FFC
1346:Drivers/CMSIS/Include/core_cm33.h **** #define TPI_FFCR_FOnMan_Msk                (0x1UL << TPI_FFCR_FOnMan_Pos)              /*!< TPI FFC
1347:Drivers/CMSIS/Include/core_cm33.h **** 
1348:Drivers/CMSIS/Include/core_cm33.h **** #define TPI_FFCR_EnFCont_Pos                1U                                         /*!< TPI FFC
1349:Drivers/CMSIS/Include/core_cm33.h **** #define TPI_FFCR_EnFCont_Msk               (0x1UL << TPI_FFCR_EnFCont_Pos)             /*!< TPI FFC
1350:Drivers/CMSIS/Include/core_cm33.h **** 
1351:Drivers/CMSIS/Include/core_cm33.h **** /* TPI TRIGGER Register Definitions */
1352:Drivers/CMSIS/Include/core_cm33.h **** #define TPI_TRIGGER_TRIGGER_Pos             0U                                         /*!< TPI TRI
1353:Drivers/CMSIS/Include/core_cm33.h **** #define TPI_TRIGGER_TRIGGER_Msk            (0x1UL /*<< TPI_TRIGGER_TRIGGER_Pos*/)      /*!< TPI TRI
1354:Drivers/CMSIS/Include/core_cm33.h **** 
1355:Drivers/CMSIS/Include/core_cm33.h **** /* TPI Integration Test FIFO Test Data 0 Register Definitions */
1356:Drivers/CMSIS/Include/core_cm33.h **** #define TPI_ITFTTD0_ATB_IF2_ATVALID_Pos    29U                                         /*!< TPI ITF
1357:Drivers/CMSIS/Include/core_cm33.h **** #define TPI_ITFTTD0_ATB_IF2_ATVALID_Msk    (0x3UL << TPI_ITFTTD0_ATB_IF2_ATVALID_Pos)  /*!< TPI ITF
1358:Drivers/CMSIS/Include/core_cm33.h **** 
1359:Drivers/CMSIS/Include/core_cm33.h **** #define TPI_ITFTTD0_ATB_IF2_bytecount_Pos  27U                                         /*!< TPI ITF
1360:Drivers/CMSIS/Include/core_cm33.h **** #define TPI_ITFTTD0_ATB_IF2_bytecount_Msk  (0x3UL << TPI_ITFTTD0_ATB_IF2_bytecount_Pos) /*!< TPI IT
1361:Drivers/CMSIS/Include/core_cm33.h **** 
1362:Drivers/CMSIS/Include/core_cm33.h **** #define TPI_ITFTTD0_ATB_IF1_ATVALID_Pos    26U                                         /*!< TPI ITF
1363:Drivers/CMSIS/Include/core_cm33.h **** #define TPI_ITFTTD0_ATB_IF1_ATVALID_Msk    (0x3UL << TPI_ITFTTD0_ATB_IF1_ATVALID_Pos)  /*!< TPI ITF
1364:Drivers/CMSIS/Include/core_cm33.h **** 
1365:Drivers/CMSIS/Include/core_cm33.h **** #define TPI_ITFTTD0_ATB_IF1_bytecount_Pos  24U                                         /*!< TPI ITF
1366:Drivers/CMSIS/Include/core_cm33.h **** #define TPI_ITFTTD0_ATB_IF1_bytecount_Msk  (0x3UL << TPI_ITFTTD0_ATB_IF1_bytecount_Pos) /*!< TPI IT
1367:Drivers/CMSIS/Include/core_cm33.h **** 
1368:Drivers/CMSIS/Include/core_cm33.h **** #define TPI_ITFTTD0_ATB_IF1_data2_Pos      16U                                         /*!< TPI ITF
1369:Drivers/CMSIS/Include/core_cm33.h **** #define TPI_ITFTTD0_ATB_IF1_data2_Msk      (0xFFUL << TPI_ITFTTD0_ATB_IF1_data1_Pos)   /*!< TPI ITF
1370:Drivers/CMSIS/Include/core_cm33.h **** 
1371:Drivers/CMSIS/Include/core_cm33.h **** #define TPI_ITFTTD0_ATB_IF1_data1_Pos       8U                                         /*!< TPI ITF
1372:Drivers/CMSIS/Include/core_cm33.h **** #define TPI_ITFTTD0_ATB_IF1_data1_Msk      (0xFFUL << TPI_ITFTTD0_ATB_IF1_data1_Pos)   /*!< TPI ITF
1373:Drivers/CMSIS/Include/core_cm33.h **** 
1374:Drivers/CMSIS/Include/core_cm33.h **** #define TPI_ITFTTD0_ATB_IF1_data0_Pos       0U                                          /*!< TPI IT
1375:Drivers/CMSIS/Include/core_cm33.h **** #define TPI_ITFTTD0_ATB_IF1_data0_Msk      (0xFFUL /*<< TPI_ITFTTD0_ATB_IF1_data0_Pos*/) /*!< TPI I
1376:Drivers/CMSIS/Include/core_cm33.h **** 
1377:Drivers/CMSIS/Include/core_cm33.h **** /* TPI Integration Test ATB Control Register 2 Register Definitions */
1378:Drivers/CMSIS/Include/core_cm33.h **** #define TPI_ITATBCTR2_AFVALID2S_Pos         1U                                         /*!< TPI ITA
1379:Drivers/CMSIS/Include/core_cm33.h **** #define TPI_ITATBCTR2_AFVALID2S_Msk        (0x1UL << TPI_ITATBCTR2_AFVALID2S_Pos)      /*!< TPI ITA
1380:Drivers/CMSIS/Include/core_cm33.h **** 
1381:Drivers/CMSIS/Include/core_cm33.h **** #define TPI_ITATBCTR2_AFVALID1S_Pos         1U                                         /*!< TPI ITA
1382:Drivers/CMSIS/Include/core_cm33.h **** #define TPI_ITATBCTR2_AFVALID1S_Msk        (0x1UL << TPI_ITATBCTR2_AFVALID1S_Pos)      /*!< TPI ITA
1383:Drivers/CMSIS/Include/core_cm33.h **** 
1384:Drivers/CMSIS/Include/core_cm33.h **** #define TPI_ITATBCTR2_ATREADY2S_Pos         0U                                         /*!< TPI ITA
1385:Drivers/CMSIS/Include/core_cm33.h **** #define TPI_ITATBCTR2_ATREADY2S_Msk        (0x1UL /*<< TPI_ITATBCTR2_ATREADY2S_Pos*/)  /*!< TPI ITA
1386:Drivers/CMSIS/Include/core_cm33.h **** 
1387:Drivers/CMSIS/Include/core_cm33.h **** #define TPI_ITATBCTR2_ATREADY1S_Pos         0U                                         /*!< TPI ITA
1388:Drivers/CMSIS/Include/core_cm33.h **** #define TPI_ITATBCTR2_ATREADY1S_Msk        (0x1UL /*<< TPI_ITATBCTR2_ATREADY1S_Pos*/)  /*!< TPI ITA
1389:Drivers/CMSIS/Include/core_cm33.h **** 
1390:Drivers/CMSIS/Include/core_cm33.h **** /* TPI Integration Test FIFO Test Data 1 Register Definitions */
1391:Drivers/CMSIS/Include/core_cm33.h **** #define TPI_ITFTTD1_ATB_IF2_ATVALID_Pos    29U                                         /*!< TPI ITF
1392:Drivers/CMSIS/Include/core_cm33.h **** #define TPI_ITFTTD1_ATB_IF2_ATVALID_Msk    (0x3UL << TPI_ITFTTD1_ATB_IF2_ATVALID_Pos)  /*!< TPI ITF
1393:Drivers/CMSIS/Include/core_cm33.h **** 
1394:Drivers/CMSIS/Include/core_cm33.h **** #define TPI_ITFTTD1_ATB_IF2_bytecount_Pos  27U                                         /*!< TPI ITF
1395:Drivers/CMSIS/Include/core_cm33.h **** #define TPI_ITFTTD1_ATB_IF2_bytecount_Msk  (0x3UL << TPI_ITFTTD1_ATB_IF2_bytecount_Pos) /*!< TPI IT
1396:Drivers/CMSIS/Include/core_cm33.h **** 
1397:Drivers/CMSIS/Include/core_cm33.h **** #define TPI_ITFTTD1_ATB_IF1_ATVALID_Pos    26U                                         /*!< TPI ITF
ARM GAS  /tmp/ccvX52LM.s 			page 26


1398:Drivers/CMSIS/Include/core_cm33.h **** #define TPI_ITFTTD1_ATB_IF1_ATVALID_Msk    (0x3UL << TPI_ITFTTD1_ATB_IF1_ATVALID_Pos)  /*!< TPI ITF
1399:Drivers/CMSIS/Include/core_cm33.h **** 
1400:Drivers/CMSIS/Include/core_cm33.h **** #define TPI_ITFTTD1_ATB_IF1_bytecount_Pos  24U                                         /*!< TPI ITF
1401:Drivers/CMSIS/Include/core_cm33.h **** #define TPI_ITFTTD1_ATB_IF1_bytecount_Msk  (0x3UL << TPI_ITFTTD1_ATB_IF1_bytecount_Pos) /*!< TPI IT
1402:Drivers/CMSIS/Include/core_cm33.h **** 
1403:Drivers/CMSIS/Include/core_cm33.h **** #define TPI_ITFTTD1_ATB_IF2_data2_Pos      16U                                         /*!< TPI ITF
1404:Drivers/CMSIS/Include/core_cm33.h **** #define TPI_ITFTTD1_ATB_IF2_data2_Msk      (0xFFUL << TPI_ITFTTD1_ATB_IF2_data1_Pos)   /*!< TPI ITF
1405:Drivers/CMSIS/Include/core_cm33.h **** 
1406:Drivers/CMSIS/Include/core_cm33.h **** #define TPI_ITFTTD1_ATB_IF2_data1_Pos       8U                                         /*!< TPI ITF
1407:Drivers/CMSIS/Include/core_cm33.h **** #define TPI_ITFTTD1_ATB_IF2_data1_Msk      (0xFFUL << TPI_ITFTTD1_ATB_IF2_data1_Pos)   /*!< TPI ITF
1408:Drivers/CMSIS/Include/core_cm33.h **** 
1409:Drivers/CMSIS/Include/core_cm33.h **** #define TPI_ITFTTD1_ATB_IF2_data0_Pos       0U                                          /*!< TPI IT
1410:Drivers/CMSIS/Include/core_cm33.h **** #define TPI_ITFTTD1_ATB_IF2_data0_Msk      (0xFFUL /*<< TPI_ITFTTD1_ATB_IF2_data0_Pos*/) /*!< TPI I
1411:Drivers/CMSIS/Include/core_cm33.h **** 
1412:Drivers/CMSIS/Include/core_cm33.h **** /* TPI Integration Test ATB Control Register 0 Definitions */
1413:Drivers/CMSIS/Include/core_cm33.h **** #define TPI_ITATBCTR0_AFVALID2S_Pos         1U                                         /*!< TPI ITA
1414:Drivers/CMSIS/Include/core_cm33.h **** #define TPI_ITATBCTR0_AFVALID2S_Msk        (0x1UL << TPI_ITATBCTR0_AFVALID2S_Pos)      /*!< TPI ITA
1415:Drivers/CMSIS/Include/core_cm33.h **** 
1416:Drivers/CMSIS/Include/core_cm33.h **** #define TPI_ITATBCTR0_AFVALID1S_Pos         1U                                         /*!< TPI ITA
1417:Drivers/CMSIS/Include/core_cm33.h **** #define TPI_ITATBCTR0_AFVALID1S_Msk        (0x1UL << TPI_ITATBCTR0_AFVALID1S_Pos)      /*!< TPI ITA
1418:Drivers/CMSIS/Include/core_cm33.h **** 
1419:Drivers/CMSIS/Include/core_cm33.h **** #define TPI_ITATBCTR0_ATREADY2S_Pos         0U                                         /*!< TPI ITA
1420:Drivers/CMSIS/Include/core_cm33.h **** #define TPI_ITATBCTR0_ATREADY2S_Msk        (0x1UL /*<< TPI_ITATBCTR0_ATREADY2S_Pos*/)  /*!< TPI ITA
1421:Drivers/CMSIS/Include/core_cm33.h **** 
1422:Drivers/CMSIS/Include/core_cm33.h **** #define TPI_ITATBCTR0_ATREADY1S_Pos         0U                                         /*!< TPI ITA
1423:Drivers/CMSIS/Include/core_cm33.h **** #define TPI_ITATBCTR0_ATREADY1S_Msk        (0x1UL /*<< TPI_ITATBCTR0_ATREADY1S_Pos*/)  /*!< TPI ITA
1424:Drivers/CMSIS/Include/core_cm33.h **** 
1425:Drivers/CMSIS/Include/core_cm33.h **** /* TPI Integration Mode Control Register Definitions */
1426:Drivers/CMSIS/Include/core_cm33.h **** #define TPI_ITCTRL_Mode_Pos                 0U                                         /*!< TPI ITC
1427:Drivers/CMSIS/Include/core_cm33.h **** #define TPI_ITCTRL_Mode_Msk                (0x3UL /*<< TPI_ITCTRL_Mode_Pos*/)          /*!< TPI ITC
1428:Drivers/CMSIS/Include/core_cm33.h **** 
1429:Drivers/CMSIS/Include/core_cm33.h **** /* TPI DEVID Register Definitions */
1430:Drivers/CMSIS/Include/core_cm33.h **** #define TPI_DEVID_NRZVALID_Pos             11U                                         /*!< TPI DEV
1431:Drivers/CMSIS/Include/core_cm33.h **** #define TPI_DEVID_NRZVALID_Msk             (0x1UL << TPI_DEVID_NRZVALID_Pos)           /*!< TPI DEV
1432:Drivers/CMSIS/Include/core_cm33.h **** 
1433:Drivers/CMSIS/Include/core_cm33.h **** #define TPI_DEVID_MANCVALID_Pos            10U                                         /*!< TPI DEV
1434:Drivers/CMSIS/Include/core_cm33.h **** #define TPI_DEVID_MANCVALID_Msk            (0x1UL << TPI_DEVID_MANCVALID_Pos)          /*!< TPI DEV
1435:Drivers/CMSIS/Include/core_cm33.h **** 
1436:Drivers/CMSIS/Include/core_cm33.h **** #define TPI_DEVID_PTINVALID_Pos             9U                                         /*!< TPI DEV
1437:Drivers/CMSIS/Include/core_cm33.h **** #define TPI_DEVID_PTINVALID_Msk            (0x1UL << TPI_DEVID_PTINVALID_Pos)          /*!< TPI DEV
1438:Drivers/CMSIS/Include/core_cm33.h **** 
1439:Drivers/CMSIS/Include/core_cm33.h **** #define TPI_DEVID_FIFOSZ_Pos                6U                                         /*!< TPI DEV
1440:Drivers/CMSIS/Include/core_cm33.h **** #define TPI_DEVID_FIFOSZ_Msk               (0x7UL << TPI_DEVID_FIFOSZ_Pos)             /*!< TPI DEV
1441:Drivers/CMSIS/Include/core_cm33.h **** 
1442:Drivers/CMSIS/Include/core_cm33.h **** #define TPI_DEVID_NrTraceInput_Pos          0U                                         /*!< TPI DEV
1443:Drivers/CMSIS/Include/core_cm33.h **** #define TPI_DEVID_NrTraceInput_Msk         (0x3FUL /*<< TPI_DEVID_NrTraceInput_Pos*/)  /*!< TPI DEV
1444:Drivers/CMSIS/Include/core_cm33.h **** 
1445:Drivers/CMSIS/Include/core_cm33.h **** /* TPI DEVTYPE Register Definitions */
1446:Drivers/CMSIS/Include/core_cm33.h **** #define TPI_DEVTYPE_SubType_Pos             4U                                         /*!< TPI DEV
1447:Drivers/CMSIS/Include/core_cm33.h **** #define TPI_DEVTYPE_SubType_Msk            (0xFUL /*<< TPI_DEVTYPE_SubType_Pos*/)      /*!< TPI DEV
1448:Drivers/CMSIS/Include/core_cm33.h **** 
1449:Drivers/CMSIS/Include/core_cm33.h **** #define TPI_DEVTYPE_MajorType_Pos           0U                                         /*!< TPI DEV
1450:Drivers/CMSIS/Include/core_cm33.h **** #define TPI_DEVTYPE_MajorType_Msk          (0xFUL << TPI_DEVTYPE_MajorType_Pos)        /*!< TPI DEV
1451:Drivers/CMSIS/Include/core_cm33.h **** 
1452:Drivers/CMSIS/Include/core_cm33.h **** /*@}*/ /* end of group CMSIS_TPI */
1453:Drivers/CMSIS/Include/core_cm33.h **** 
1454:Drivers/CMSIS/Include/core_cm33.h **** 
ARM GAS  /tmp/ccvX52LM.s 			page 27


1455:Drivers/CMSIS/Include/core_cm33.h **** #if defined (__MPU_PRESENT) && (__MPU_PRESENT == 1U)
1456:Drivers/CMSIS/Include/core_cm33.h **** /**
1457:Drivers/CMSIS/Include/core_cm33.h ****   \ingroup  CMSIS_core_register
1458:Drivers/CMSIS/Include/core_cm33.h ****   \defgroup CMSIS_MPU     Memory Protection Unit (MPU)
1459:Drivers/CMSIS/Include/core_cm33.h ****   \brief    Type definitions for the Memory Protection Unit (MPU)
1460:Drivers/CMSIS/Include/core_cm33.h ****   @{
1461:Drivers/CMSIS/Include/core_cm33.h ****  */
1462:Drivers/CMSIS/Include/core_cm33.h **** 
1463:Drivers/CMSIS/Include/core_cm33.h **** /**
1464:Drivers/CMSIS/Include/core_cm33.h ****   \brief  Structure type to access the Memory Protection Unit (MPU).
1465:Drivers/CMSIS/Include/core_cm33.h ****  */
1466:Drivers/CMSIS/Include/core_cm33.h **** typedef struct
1467:Drivers/CMSIS/Include/core_cm33.h **** {
1468:Drivers/CMSIS/Include/core_cm33.h ****   __IM  uint32_t TYPE;                   /*!< Offset: 0x000 (R/ )  MPU Type Register */
1469:Drivers/CMSIS/Include/core_cm33.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x004 (R/W)  MPU Control Register */
1470:Drivers/CMSIS/Include/core_cm33.h ****   __IOM uint32_t RNR;                    /*!< Offset: 0x008 (R/W)  MPU Region Number Register */
1471:Drivers/CMSIS/Include/core_cm33.h ****   __IOM uint32_t RBAR;                   /*!< Offset: 0x00C (R/W)  MPU Region Base Address Register
1472:Drivers/CMSIS/Include/core_cm33.h ****   __IOM uint32_t RLAR;                   /*!< Offset: 0x010 (R/W)  MPU Region Limit Address Registe
1473:Drivers/CMSIS/Include/core_cm33.h ****   __IOM uint32_t RBAR_A1;                /*!< Offset: 0x014 (R/W)  MPU Region Base Address Register
1474:Drivers/CMSIS/Include/core_cm33.h ****   __IOM uint32_t RLAR_A1;                /*!< Offset: 0x018 (R/W)  MPU Region Limit Address Registe
1475:Drivers/CMSIS/Include/core_cm33.h ****   __IOM uint32_t RBAR_A2;                /*!< Offset: 0x01C (R/W)  MPU Region Base Address Register
1476:Drivers/CMSIS/Include/core_cm33.h ****   __IOM uint32_t RLAR_A2;                /*!< Offset: 0x020 (R/W)  MPU Region Limit Address Registe
1477:Drivers/CMSIS/Include/core_cm33.h ****   __IOM uint32_t RBAR_A3;                /*!< Offset: 0x024 (R/W)  MPU Region Base Address Register
1478:Drivers/CMSIS/Include/core_cm33.h ****   __IOM uint32_t RLAR_A3;                /*!< Offset: 0x028 (R/W)  MPU Region Limit Address Registe
1479:Drivers/CMSIS/Include/core_cm33.h ****         uint32_t RESERVED0[1];
1480:Drivers/CMSIS/Include/core_cm33.h ****   union {
1481:Drivers/CMSIS/Include/core_cm33.h ****   __IOM uint32_t MAIR[2];
1482:Drivers/CMSIS/Include/core_cm33.h ****   struct {
1483:Drivers/CMSIS/Include/core_cm33.h ****   __IOM uint32_t MAIR0;                  /*!< Offset: 0x030 (R/W)  MPU Memory Attribute Indirection
1484:Drivers/CMSIS/Include/core_cm33.h ****   __IOM uint32_t MAIR1;                  /*!< Offset: 0x034 (R/W)  MPU Memory Attribute Indirection
1485:Drivers/CMSIS/Include/core_cm33.h ****   };
1486:Drivers/CMSIS/Include/core_cm33.h ****   };
1487:Drivers/CMSIS/Include/core_cm33.h **** } MPU_Type;
1488:Drivers/CMSIS/Include/core_cm33.h **** 
1489:Drivers/CMSIS/Include/core_cm33.h **** #define MPU_TYPE_RALIASES                  4U
1490:Drivers/CMSIS/Include/core_cm33.h **** 
1491:Drivers/CMSIS/Include/core_cm33.h **** /* MPU Type Register Definitions */
1492:Drivers/CMSIS/Include/core_cm33.h **** #define MPU_TYPE_IREGION_Pos               16U                                            /*!< MPU 
1493:Drivers/CMSIS/Include/core_cm33.h **** #define MPU_TYPE_IREGION_Msk               (0xFFUL << MPU_TYPE_IREGION_Pos)               /*!< MPU 
1494:Drivers/CMSIS/Include/core_cm33.h **** 
1495:Drivers/CMSIS/Include/core_cm33.h **** #define MPU_TYPE_DREGION_Pos                8U                                            /*!< MPU 
1496:Drivers/CMSIS/Include/core_cm33.h **** #define MPU_TYPE_DREGION_Msk               (0xFFUL << MPU_TYPE_DREGION_Pos)               /*!< MPU 
1497:Drivers/CMSIS/Include/core_cm33.h **** 
1498:Drivers/CMSIS/Include/core_cm33.h **** #define MPU_TYPE_SEPARATE_Pos               0U                                            /*!< MPU 
1499:Drivers/CMSIS/Include/core_cm33.h **** #define MPU_TYPE_SEPARATE_Msk              (1UL /*<< MPU_TYPE_SEPARATE_Pos*/)             /*!< MPU 
1500:Drivers/CMSIS/Include/core_cm33.h **** 
1501:Drivers/CMSIS/Include/core_cm33.h **** /* MPU Control Register Definitions */
1502:Drivers/CMSIS/Include/core_cm33.h **** #define MPU_CTRL_PRIVDEFENA_Pos             2U                                            /*!< MPU 
1503:Drivers/CMSIS/Include/core_cm33.h **** #define MPU_CTRL_PRIVDEFENA_Msk            (1UL << MPU_CTRL_PRIVDEFENA_Pos)               /*!< MPU 
1504:Drivers/CMSIS/Include/core_cm33.h **** 
1505:Drivers/CMSIS/Include/core_cm33.h **** #define MPU_CTRL_HFNMIENA_Pos               1U                                            /*!< MPU 
1506:Drivers/CMSIS/Include/core_cm33.h **** #define MPU_CTRL_HFNMIENA_Msk              (1UL << MPU_CTRL_HFNMIENA_Pos)                 /*!< MPU 
1507:Drivers/CMSIS/Include/core_cm33.h **** 
1508:Drivers/CMSIS/Include/core_cm33.h **** #define MPU_CTRL_ENABLE_Pos                 0U                                            /*!< MPU 
1509:Drivers/CMSIS/Include/core_cm33.h **** #define MPU_CTRL_ENABLE_Msk                (1UL /*<< MPU_CTRL_ENABLE_Pos*/)               /*!< MPU 
1510:Drivers/CMSIS/Include/core_cm33.h **** 
1511:Drivers/CMSIS/Include/core_cm33.h **** /* MPU Region Number Register Definitions */
ARM GAS  /tmp/ccvX52LM.s 			page 28


1512:Drivers/CMSIS/Include/core_cm33.h **** #define MPU_RNR_REGION_Pos                  0U                                            /*!< MPU 
1513:Drivers/CMSIS/Include/core_cm33.h **** #define MPU_RNR_REGION_Msk                 (0xFFUL /*<< MPU_RNR_REGION_Pos*/)             /*!< MPU 
1514:Drivers/CMSIS/Include/core_cm33.h **** 
1515:Drivers/CMSIS/Include/core_cm33.h **** /* MPU Region Base Address Register Definitions */
1516:Drivers/CMSIS/Include/core_cm33.h **** #define MPU_RBAR_BASE_Pos                   5U                                            /*!< MPU 
1517:Drivers/CMSIS/Include/core_cm33.h **** #define MPU_RBAR_BASE_Msk                  (0x7FFFFFFUL << MPU_RBAR_BASE_Pos)             /*!< MPU 
1518:Drivers/CMSIS/Include/core_cm33.h **** 
1519:Drivers/CMSIS/Include/core_cm33.h **** #define MPU_RBAR_SH_Pos                     3U                                            /*!< MPU 
1520:Drivers/CMSIS/Include/core_cm33.h **** #define MPU_RBAR_SH_Msk                    (0x3UL << MPU_RBAR_SH_Pos)                     /*!< MPU 
1521:Drivers/CMSIS/Include/core_cm33.h **** 
1522:Drivers/CMSIS/Include/core_cm33.h **** #define MPU_RBAR_AP_Pos                     1U                                            /*!< MPU 
1523:Drivers/CMSIS/Include/core_cm33.h **** #define MPU_RBAR_AP_Msk                    (0x3UL << MPU_RBAR_AP_Pos)                     /*!< MPU 
1524:Drivers/CMSIS/Include/core_cm33.h **** 
1525:Drivers/CMSIS/Include/core_cm33.h **** #define MPU_RBAR_XN_Pos                     0U                                            /*!< MPU 
1526:Drivers/CMSIS/Include/core_cm33.h **** #define MPU_RBAR_XN_Msk                    (01UL /*<< MPU_RBAR_XN_Pos*/)                  /*!< MPU 
1527:Drivers/CMSIS/Include/core_cm33.h **** 
1528:Drivers/CMSIS/Include/core_cm33.h **** /* MPU Region Limit Address Register Definitions */
1529:Drivers/CMSIS/Include/core_cm33.h **** #define MPU_RLAR_LIMIT_Pos                  5U                                            /*!< MPU 
1530:Drivers/CMSIS/Include/core_cm33.h **** #define MPU_RLAR_LIMIT_Msk                 (0x7FFFFFFUL << MPU_RLAR_LIMIT_Pos)            /*!< MPU 
1531:Drivers/CMSIS/Include/core_cm33.h **** 
1532:Drivers/CMSIS/Include/core_cm33.h **** #define MPU_RLAR_AttrIndx_Pos               1U                                            /*!< MPU 
1533:Drivers/CMSIS/Include/core_cm33.h **** #define MPU_RLAR_AttrIndx_Msk              (0x7UL << MPU_RLAR_AttrIndx_Pos)               /*!< MPU 
1534:Drivers/CMSIS/Include/core_cm33.h **** 
1535:Drivers/CMSIS/Include/core_cm33.h **** #define MPU_RLAR_EN_Pos                     0U                                            /*!< MPU 
1536:Drivers/CMSIS/Include/core_cm33.h **** #define MPU_RLAR_EN_Msk                    (1UL /*<< MPU_RLAR_EN_Pos*/)                   /*!< MPU 
1537:Drivers/CMSIS/Include/core_cm33.h **** 
1538:Drivers/CMSIS/Include/core_cm33.h **** /* MPU Memory Attribute Indirection Register 0 Definitions */
1539:Drivers/CMSIS/Include/core_cm33.h **** #define MPU_MAIR0_Attr3_Pos                24U                                            /*!< MPU 
1540:Drivers/CMSIS/Include/core_cm33.h **** #define MPU_MAIR0_Attr3_Msk                (0xFFUL << MPU_MAIR0_Attr3_Pos)                /*!< MPU 
1541:Drivers/CMSIS/Include/core_cm33.h **** 
1542:Drivers/CMSIS/Include/core_cm33.h **** #define MPU_MAIR0_Attr2_Pos                16U                                            /*!< MPU 
1543:Drivers/CMSIS/Include/core_cm33.h **** #define MPU_MAIR0_Attr2_Msk                (0xFFUL << MPU_MAIR0_Attr2_Pos)                /*!< MPU 
1544:Drivers/CMSIS/Include/core_cm33.h **** 
1545:Drivers/CMSIS/Include/core_cm33.h **** #define MPU_MAIR0_Attr1_Pos                 8U                                            /*!< MPU 
1546:Drivers/CMSIS/Include/core_cm33.h **** #define MPU_MAIR0_Attr1_Msk                (0xFFUL << MPU_MAIR0_Attr1_Pos)                /*!< MPU 
1547:Drivers/CMSIS/Include/core_cm33.h **** 
1548:Drivers/CMSIS/Include/core_cm33.h **** #define MPU_MAIR0_Attr0_Pos                 0U                                            /*!< MPU 
1549:Drivers/CMSIS/Include/core_cm33.h **** #define MPU_MAIR0_Attr0_Msk                (0xFFUL /*<< MPU_MAIR0_Attr0_Pos*/)            /*!< MPU 
1550:Drivers/CMSIS/Include/core_cm33.h **** 
1551:Drivers/CMSIS/Include/core_cm33.h **** /* MPU Memory Attribute Indirection Register 1 Definitions */
1552:Drivers/CMSIS/Include/core_cm33.h **** #define MPU_MAIR1_Attr7_Pos                24U                                            /*!< MPU 
1553:Drivers/CMSIS/Include/core_cm33.h **** #define MPU_MAIR1_Attr7_Msk                (0xFFUL << MPU_MAIR1_Attr7_Pos)                /*!< MPU 
1554:Drivers/CMSIS/Include/core_cm33.h **** 
1555:Drivers/CMSIS/Include/core_cm33.h **** #define MPU_MAIR1_Attr6_Pos                16U                                            /*!< MPU 
1556:Drivers/CMSIS/Include/core_cm33.h **** #define MPU_MAIR1_Attr6_Msk                (0xFFUL << MPU_MAIR1_Attr6_Pos)                /*!< MPU 
1557:Drivers/CMSIS/Include/core_cm33.h **** 
1558:Drivers/CMSIS/Include/core_cm33.h **** #define MPU_MAIR1_Attr5_Pos                 8U                                            /*!< MPU 
1559:Drivers/CMSIS/Include/core_cm33.h **** #define MPU_MAIR1_Attr5_Msk                (0xFFUL << MPU_MAIR1_Attr5_Pos)                /*!< MPU 
1560:Drivers/CMSIS/Include/core_cm33.h **** 
1561:Drivers/CMSIS/Include/core_cm33.h **** #define MPU_MAIR1_Attr4_Pos                 0U                                            /*!< MPU 
1562:Drivers/CMSIS/Include/core_cm33.h **** #define MPU_MAIR1_Attr4_Msk                (0xFFUL /*<< MPU_MAIR1_Attr4_Pos*/)            /*!< MPU 
1563:Drivers/CMSIS/Include/core_cm33.h **** 
1564:Drivers/CMSIS/Include/core_cm33.h **** /*@} end of group CMSIS_MPU */
1565:Drivers/CMSIS/Include/core_cm33.h **** #endif
1566:Drivers/CMSIS/Include/core_cm33.h **** 
1567:Drivers/CMSIS/Include/core_cm33.h **** 
1568:Drivers/CMSIS/Include/core_cm33.h **** #if defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3U)
ARM GAS  /tmp/ccvX52LM.s 			page 29


1569:Drivers/CMSIS/Include/core_cm33.h **** /**
1570:Drivers/CMSIS/Include/core_cm33.h ****   \ingroup  CMSIS_core_register
1571:Drivers/CMSIS/Include/core_cm33.h ****   \defgroup CMSIS_SAU     Security Attribution Unit (SAU)
1572:Drivers/CMSIS/Include/core_cm33.h ****   \brief    Type definitions for the Security Attribution Unit (SAU)
1573:Drivers/CMSIS/Include/core_cm33.h ****   @{
1574:Drivers/CMSIS/Include/core_cm33.h ****  */
1575:Drivers/CMSIS/Include/core_cm33.h **** 
1576:Drivers/CMSIS/Include/core_cm33.h **** /**
1577:Drivers/CMSIS/Include/core_cm33.h ****   \brief  Structure type to access the Security Attribution Unit (SAU).
1578:Drivers/CMSIS/Include/core_cm33.h ****  */
1579:Drivers/CMSIS/Include/core_cm33.h **** typedef struct
1580:Drivers/CMSIS/Include/core_cm33.h **** {
1581:Drivers/CMSIS/Include/core_cm33.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x000 (R/W)  SAU Control Register */
1582:Drivers/CMSIS/Include/core_cm33.h ****   __IM  uint32_t TYPE;                   /*!< Offset: 0x004 (R/ )  SAU Type Register */
1583:Drivers/CMSIS/Include/core_cm33.h **** #if defined (__SAUREGION_PRESENT) && (__SAUREGION_PRESENT == 1U)
1584:Drivers/CMSIS/Include/core_cm33.h ****   __IOM uint32_t RNR;                    /*!< Offset: 0x008 (R/W)  SAU Region Number Register */
1585:Drivers/CMSIS/Include/core_cm33.h ****   __IOM uint32_t RBAR;                   /*!< Offset: 0x00C (R/W)  SAU Region Base Address Register
1586:Drivers/CMSIS/Include/core_cm33.h ****   __IOM uint32_t RLAR;                   /*!< Offset: 0x010 (R/W)  SAU Region Limit Address Registe
1587:Drivers/CMSIS/Include/core_cm33.h **** #else
1588:Drivers/CMSIS/Include/core_cm33.h ****         uint32_t RESERVED0[3];
1589:Drivers/CMSIS/Include/core_cm33.h **** #endif
1590:Drivers/CMSIS/Include/core_cm33.h ****   __IOM uint32_t SFSR;                   /*!< Offset: 0x014 (R/W)  Secure Fault Status Register */
1591:Drivers/CMSIS/Include/core_cm33.h ****   __IOM uint32_t SFAR;                   /*!< Offset: 0x018 (R/W)  Secure Fault Address Register */
1592:Drivers/CMSIS/Include/core_cm33.h **** } SAU_Type;
1593:Drivers/CMSIS/Include/core_cm33.h **** 
1594:Drivers/CMSIS/Include/core_cm33.h **** /* SAU Control Register Definitions */
1595:Drivers/CMSIS/Include/core_cm33.h **** #define SAU_CTRL_ALLNS_Pos                  1U                                            /*!< SAU 
1596:Drivers/CMSIS/Include/core_cm33.h **** #define SAU_CTRL_ALLNS_Msk                 (1UL << SAU_CTRL_ALLNS_Pos)                    /*!< SAU 
1597:Drivers/CMSIS/Include/core_cm33.h **** 
1598:Drivers/CMSIS/Include/core_cm33.h **** #define SAU_CTRL_ENABLE_Pos                 0U                                            /*!< SAU 
1599:Drivers/CMSIS/Include/core_cm33.h **** #define SAU_CTRL_ENABLE_Msk                (1UL /*<< SAU_CTRL_ENABLE_Pos*/)               /*!< SAU 
1600:Drivers/CMSIS/Include/core_cm33.h **** 
1601:Drivers/CMSIS/Include/core_cm33.h **** /* SAU Type Register Definitions */
1602:Drivers/CMSIS/Include/core_cm33.h **** #define SAU_TYPE_SREGION_Pos                0U                                            /*!< SAU 
1603:Drivers/CMSIS/Include/core_cm33.h **** #define SAU_TYPE_SREGION_Msk               (0xFFUL /*<< SAU_TYPE_SREGION_Pos*/)           /*!< SAU 
1604:Drivers/CMSIS/Include/core_cm33.h **** 
1605:Drivers/CMSIS/Include/core_cm33.h **** #if defined (__SAUREGION_PRESENT) && (__SAUREGION_PRESENT == 1U)
1606:Drivers/CMSIS/Include/core_cm33.h **** /* SAU Region Number Register Definitions */
1607:Drivers/CMSIS/Include/core_cm33.h **** #define SAU_RNR_REGION_Pos                  0U                                            /*!< SAU 
1608:Drivers/CMSIS/Include/core_cm33.h **** #define SAU_RNR_REGION_Msk                 (0xFFUL /*<< SAU_RNR_REGION_Pos*/)             /*!< SAU 
1609:Drivers/CMSIS/Include/core_cm33.h **** 
1610:Drivers/CMSIS/Include/core_cm33.h **** /* SAU Region Base Address Register Definitions */
1611:Drivers/CMSIS/Include/core_cm33.h **** #define SAU_RBAR_BADDR_Pos                  5U                                            /*!< SAU 
1612:Drivers/CMSIS/Include/core_cm33.h **** #define SAU_RBAR_BADDR_Msk                 (0x7FFFFFFUL << SAU_RBAR_BADDR_Pos)            /*!< SAU 
1613:Drivers/CMSIS/Include/core_cm33.h **** 
1614:Drivers/CMSIS/Include/core_cm33.h **** /* SAU Region Limit Address Register Definitions */
1615:Drivers/CMSIS/Include/core_cm33.h **** #define SAU_RLAR_LADDR_Pos                  5U                                            /*!< SAU 
1616:Drivers/CMSIS/Include/core_cm33.h **** #define SAU_RLAR_LADDR_Msk                 (0x7FFFFFFUL << SAU_RLAR_LADDR_Pos)            /*!< SAU 
1617:Drivers/CMSIS/Include/core_cm33.h **** 
1618:Drivers/CMSIS/Include/core_cm33.h **** #define SAU_RLAR_NSC_Pos                    1U                                            /*!< SAU 
1619:Drivers/CMSIS/Include/core_cm33.h **** #define SAU_RLAR_NSC_Msk                   (1UL << SAU_RLAR_NSC_Pos)                      /*!< SAU 
1620:Drivers/CMSIS/Include/core_cm33.h **** 
1621:Drivers/CMSIS/Include/core_cm33.h **** #define SAU_RLAR_ENABLE_Pos                 0U                                            /*!< SAU 
1622:Drivers/CMSIS/Include/core_cm33.h **** #define SAU_RLAR_ENABLE_Msk                (1UL /*<< SAU_RLAR_ENABLE_Pos*/)               /*!< SAU 
1623:Drivers/CMSIS/Include/core_cm33.h **** 
1624:Drivers/CMSIS/Include/core_cm33.h **** #endif /* defined (__SAUREGION_PRESENT) && (__SAUREGION_PRESENT == 1U) */
1625:Drivers/CMSIS/Include/core_cm33.h **** 
ARM GAS  /tmp/ccvX52LM.s 			page 30


1626:Drivers/CMSIS/Include/core_cm33.h **** /* Secure Fault Status Register Definitions */
1627:Drivers/CMSIS/Include/core_cm33.h **** #define SAU_SFSR_LSERR_Pos                  7U                                            /*!< SAU 
1628:Drivers/CMSIS/Include/core_cm33.h **** #define SAU_SFSR_LSERR_Msk                 (1UL << SAU_SFSR_LSERR_Pos)                    /*!< SAU 
1629:Drivers/CMSIS/Include/core_cm33.h **** 
1630:Drivers/CMSIS/Include/core_cm33.h **** #define SAU_SFSR_SFARVALID_Pos              6U                                            /*!< SAU 
1631:Drivers/CMSIS/Include/core_cm33.h **** #define SAU_SFSR_SFARVALID_Msk             (1UL << SAU_SFSR_SFARVALID_Pos)                /*!< SAU 
1632:Drivers/CMSIS/Include/core_cm33.h **** 
1633:Drivers/CMSIS/Include/core_cm33.h **** #define SAU_SFSR_LSPERR_Pos                 5U                                            /*!< SAU 
1634:Drivers/CMSIS/Include/core_cm33.h **** #define SAU_SFSR_LSPERR_Msk                (1UL << SAU_SFSR_LSPERR_Pos)                   /*!< SAU 
1635:Drivers/CMSIS/Include/core_cm33.h **** 
1636:Drivers/CMSIS/Include/core_cm33.h **** #define SAU_SFSR_INVTRAN_Pos                4U                                            /*!< SAU 
1637:Drivers/CMSIS/Include/core_cm33.h **** #define SAU_SFSR_INVTRAN_Msk               (1UL << SAU_SFSR_INVTRAN_Pos)                  /*!< SAU 
1638:Drivers/CMSIS/Include/core_cm33.h **** 
1639:Drivers/CMSIS/Include/core_cm33.h **** #define SAU_SFSR_AUVIOL_Pos                 3U                                            /*!< SAU 
1640:Drivers/CMSIS/Include/core_cm33.h **** #define SAU_SFSR_AUVIOL_Msk                (1UL << SAU_SFSR_AUVIOL_Pos)                   /*!< SAU 
1641:Drivers/CMSIS/Include/core_cm33.h **** 
1642:Drivers/CMSIS/Include/core_cm33.h **** #define SAU_SFSR_INVER_Pos                  2U                                            /*!< SAU 
1643:Drivers/CMSIS/Include/core_cm33.h **** #define SAU_SFSR_INVER_Msk                 (1UL << SAU_SFSR_INVER_Pos)                    /*!< SAU 
1644:Drivers/CMSIS/Include/core_cm33.h **** 
1645:Drivers/CMSIS/Include/core_cm33.h **** #define SAU_SFSR_INVIS_Pos                  1U                                            /*!< SAU 
1646:Drivers/CMSIS/Include/core_cm33.h **** #define SAU_SFSR_INVIS_Msk                 (1UL << SAU_SFSR_INVIS_Pos)                    /*!< SAU 
1647:Drivers/CMSIS/Include/core_cm33.h **** 
1648:Drivers/CMSIS/Include/core_cm33.h **** #define SAU_SFSR_INVEP_Pos                  0U                                            /*!< SAU 
1649:Drivers/CMSIS/Include/core_cm33.h **** #define SAU_SFSR_INVEP_Msk                 (1UL /*<< SAU_SFSR_INVEP_Pos*/)                /*!< SAU 
1650:Drivers/CMSIS/Include/core_cm33.h **** 
1651:Drivers/CMSIS/Include/core_cm33.h **** /*@} end of group CMSIS_SAU */
1652:Drivers/CMSIS/Include/core_cm33.h **** #endif /* defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3U) */
1653:Drivers/CMSIS/Include/core_cm33.h **** 
1654:Drivers/CMSIS/Include/core_cm33.h **** 
1655:Drivers/CMSIS/Include/core_cm33.h **** /**
1656:Drivers/CMSIS/Include/core_cm33.h ****   \ingroup  CMSIS_core_register
1657:Drivers/CMSIS/Include/core_cm33.h ****   \defgroup CMSIS_FPU     Floating Point Unit (FPU)
1658:Drivers/CMSIS/Include/core_cm33.h ****   \brief    Type definitions for the Floating Point Unit (FPU)
1659:Drivers/CMSIS/Include/core_cm33.h ****   @{
1660:Drivers/CMSIS/Include/core_cm33.h ****  */
1661:Drivers/CMSIS/Include/core_cm33.h **** 
1662:Drivers/CMSIS/Include/core_cm33.h **** /**
1663:Drivers/CMSIS/Include/core_cm33.h ****   \brief  Structure type to access the Floating Point Unit (FPU).
1664:Drivers/CMSIS/Include/core_cm33.h ****  */
1665:Drivers/CMSIS/Include/core_cm33.h **** typedef struct
1666:Drivers/CMSIS/Include/core_cm33.h **** {
1667:Drivers/CMSIS/Include/core_cm33.h ****         uint32_t RESERVED0[1U];
1668:Drivers/CMSIS/Include/core_cm33.h ****   __IOM uint32_t FPCCR;                  /*!< Offset: 0x004 (R/W)  Floating-Point Context Control R
1669:Drivers/CMSIS/Include/core_cm33.h ****   __IOM uint32_t FPCAR;                  /*!< Offset: 0x008 (R/W)  Floating-Point Context Address R
1670:Drivers/CMSIS/Include/core_cm33.h ****   __IOM uint32_t FPDSCR;                 /*!< Offset: 0x00C (R/W)  Floating-Point Default Status Co
1671:Drivers/CMSIS/Include/core_cm33.h ****   __IM  uint32_t MVFR0;                  /*!< Offset: 0x010 (R/ )  Media and FP Feature Register 0 
1672:Drivers/CMSIS/Include/core_cm33.h ****   __IM  uint32_t MVFR1;                  /*!< Offset: 0x014 (R/ )  Media and FP Feature Register 1 
1673:Drivers/CMSIS/Include/core_cm33.h **** } FPU_Type;
1674:Drivers/CMSIS/Include/core_cm33.h **** 
1675:Drivers/CMSIS/Include/core_cm33.h **** /* Floating-Point Context Control Register Definitions */
1676:Drivers/CMSIS/Include/core_cm33.h **** #define FPU_FPCCR_ASPEN_Pos                31U                                            /*!< FPCC
1677:Drivers/CMSIS/Include/core_cm33.h **** #define FPU_FPCCR_ASPEN_Msk                (1UL << FPU_FPCCR_ASPEN_Pos)                   /*!< FPCC
1678:Drivers/CMSIS/Include/core_cm33.h **** 
1679:Drivers/CMSIS/Include/core_cm33.h **** #define FPU_FPCCR_LSPEN_Pos                30U                                            /*!< FPCC
1680:Drivers/CMSIS/Include/core_cm33.h **** #define FPU_FPCCR_LSPEN_Msk                (1UL << FPU_FPCCR_LSPEN_Pos)                   /*!< FPCC
1681:Drivers/CMSIS/Include/core_cm33.h **** 
1682:Drivers/CMSIS/Include/core_cm33.h **** #define FPU_FPCCR_LSPENS_Pos               29U                                            /*!< FPCC
ARM GAS  /tmp/ccvX52LM.s 			page 31


1683:Drivers/CMSIS/Include/core_cm33.h **** #define FPU_FPCCR_LSPENS_Msk               (1UL << FPU_FPCCR_LSPENS_Pos)                  /*!< FPCC
1684:Drivers/CMSIS/Include/core_cm33.h **** 
1685:Drivers/CMSIS/Include/core_cm33.h **** #define FPU_FPCCR_CLRONRET_Pos             28U                                            /*!< FPCC
1686:Drivers/CMSIS/Include/core_cm33.h **** #define FPU_FPCCR_CLRONRET_Msk             (1UL << FPU_FPCCR_CLRONRET_Pos)                /*!< FPCC
1687:Drivers/CMSIS/Include/core_cm33.h **** 
1688:Drivers/CMSIS/Include/core_cm33.h **** #define FPU_FPCCR_CLRONRETS_Pos            27U                                            /*!< FPCC
1689:Drivers/CMSIS/Include/core_cm33.h **** #define FPU_FPCCR_CLRONRETS_Msk            (1UL << FPU_FPCCR_CLRONRETS_Pos)               /*!< FPCC
1690:Drivers/CMSIS/Include/core_cm33.h **** 
1691:Drivers/CMSIS/Include/core_cm33.h **** #define FPU_FPCCR_TS_Pos                   26U                                            /*!< FPCC
1692:Drivers/CMSIS/Include/core_cm33.h **** #define FPU_FPCCR_TS_Msk                   (1UL << FPU_FPCCR_TS_Pos)                      /*!< FPCC
1693:Drivers/CMSIS/Include/core_cm33.h **** 
1694:Drivers/CMSIS/Include/core_cm33.h **** #define FPU_FPCCR_UFRDY_Pos                10U                                            /*!< FPCC
1695:Drivers/CMSIS/Include/core_cm33.h **** #define FPU_FPCCR_UFRDY_Msk                (1UL << FPU_FPCCR_UFRDY_Pos)                   /*!< FPCC
1696:Drivers/CMSIS/Include/core_cm33.h **** 
1697:Drivers/CMSIS/Include/core_cm33.h **** #define FPU_FPCCR_SPLIMVIOL_Pos             9U                                            /*!< FPCC
1698:Drivers/CMSIS/Include/core_cm33.h **** #define FPU_FPCCR_SPLIMVIOL_Msk            (1UL << FPU_FPCCR_SPLIMVIOL_Pos)               /*!< FPCC
1699:Drivers/CMSIS/Include/core_cm33.h **** 
1700:Drivers/CMSIS/Include/core_cm33.h **** #define FPU_FPCCR_MONRDY_Pos                8U                                            /*!< FPCC
1701:Drivers/CMSIS/Include/core_cm33.h **** #define FPU_FPCCR_MONRDY_Msk               (1UL << FPU_FPCCR_MONRDY_Pos)                  /*!< FPCC
1702:Drivers/CMSIS/Include/core_cm33.h **** 
1703:Drivers/CMSIS/Include/core_cm33.h **** #define FPU_FPCCR_SFRDY_Pos                 7U                                            /*!< FPCC
1704:Drivers/CMSIS/Include/core_cm33.h **** #define FPU_FPCCR_SFRDY_Msk                (1UL << FPU_FPCCR_SFRDY_Pos)                   /*!< FPCC
1705:Drivers/CMSIS/Include/core_cm33.h **** 
1706:Drivers/CMSIS/Include/core_cm33.h **** #define FPU_FPCCR_BFRDY_Pos                 6U                                            /*!< FPCC
1707:Drivers/CMSIS/Include/core_cm33.h **** #define FPU_FPCCR_BFRDY_Msk                (1UL << FPU_FPCCR_BFRDY_Pos)                   /*!< FPCC
1708:Drivers/CMSIS/Include/core_cm33.h **** 
1709:Drivers/CMSIS/Include/core_cm33.h **** #define FPU_FPCCR_MMRDY_Pos                 5U                                            /*!< FPCC
1710:Drivers/CMSIS/Include/core_cm33.h **** #define FPU_FPCCR_MMRDY_Msk                (1UL << FPU_FPCCR_MMRDY_Pos)                   /*!< FPCC
1711:Drivers/CMSIS/Include/core_cm33.h **** 
1712:Drivers/CMSIS/Include/core_cm33.h **** #define FPU_FPCCR_HFRDY_Pos                 4U                                            /*!< FPCC
1713:Drivers/CMSIS/Include/core_cm33.h **** #define FPU_FPCCR_HFRDY_Msk                (1UL << FPU_FPCCR_HFRDY_Pos)                   /*!< FPCC
1714:Drivers/CMSIS/Include/core_cm33.h **** 
1715:Drivers/CMSIS/Include/core_cm33.h **** #define FPU_FPCCR_THREAD_Pos                3U                                            /*!< FPCC
1716:Drivers/CMSIS/Include/core_cm33.h **** #define FPU_FPCCR_THREAD_Msk               (1UL << FPU_FPCCR_THREAD_Pos)                  /*!< FPCC
1717:Drivers/CMSIS/Include/core_cm33.h **** 
1718:Drivers/CMSIS/Include/core_cm33.h **** #define FPU_FPCCR_S_Pos                     2U                                            /*!< FPCC
1719:Drivers/CMSIS/Include/core_cm33.h **** #define FPU_FPCCR_S_Msk                    (1UL << FPU_FPCCR_S_Pos)                       /*!< FPCC
1720:Drivers/CMSIS/Include/core_cm33.h **** 
1721:Drivers/CMSIS/Include/core_cm33.h **** #define FPU_FPCCR_USER_Pos                  1U                                            /*!< FPCC
1722:Drivers/CMSIS/Include/core_cm33.h **** #define FPU_FPCCR_USER_Msk                 (1UL << FPU_FPCCR_USER_Pos)                    /*!< FPCC
1723:Drivers/CMSIS/Include/core_cm33.h **** 
1724:Drivers/CMSIS/Include/core_cm33.h **** #define FPU_FPCCR_LSPACT_Pos                0U                                            /*!< FPCC
1725:Drivers/CMSIS/Include/core_cm33.h **** #define FPU_FPCCR_LSPACT_Msk               (1UL /*<< FPU_FPCCR_LSPACT_Pos*/)              /*!< FPCC
1726:Drivers/CMSIS/Include/core_cm33.h **** 
1727:Drivers/CMSIS/Include/core_cm33.h **** /* Floating-Point Context Address Register Definitions */
1728:Drivers/CMSIS/Include/core_cm33.h **** #define FPU_FPCAR_ADDRESS_Pos               3U                                            /*!< FPCA
1729:Drivers/CMSIS/Include/core_cm33.h **** #define FPU_FPCAR_ADDRESS_Msk              (0x1FFFFFFFUL << FPU_FPCAR_ADDRESS_Pos)        /*!< FPCA
1730:Drivers/CMSIS/Include/core_cm33.h **** 
1731:Drivers/CMSIS/Include/core_cm33.h **** /* Floating-Point Default Status Control Register Definitions */
1732:Drivers/CMSIS/Include/core_cm33.h **** #define FPU_FPDSCR_AHP_Pos                 26U                                            /*!< FPDS
1733:Drivers/CMSIS/Include/core_cm33.h **** #define FPU_FPDSCR_AHP_Msk                 (1UL << FPU_FPDSCR_AHP_Pos)                    /*!< FPDS
1734:Drivers/CMSIS/Include/core_cm33.h **** 
1735:Drivers/CMSIS/Include/core_cm33.h **** #define FPU_FPDSCR_DN_Pos                  25U                                            /*!< FPDS
1736:Drivers/CMSIS/Include/core_cm33.h **** #define FPU_FPDSCR_DN_Msk                  (1UL << FPU_FPDSCR_DN_Pos)                     /*!< FPDS
1737:Drivers/CMSIS/Include/core_cm33.h **** 
1738:Drivers/CMSIS/Include/core_cm33.h **** #define FPU_FPDSCR_FZ_Pos                  24U                                            /*!< FPDS
1739:Drivers/CMSIS/Include/core_cm33.h **** #define FPU_FPDSCR_FZ_Msk                  (1UL << FPU_FPDSCR_FZ_Pos)                     /*!< FPDS
ARM GAS  /tmp/ccvX52LM.s 			page 32


1740:Drivers/CMSIS/Include/core_cm33.h **** 
1741:Drivers/CMSIS/Include/core_cm33.h **** #define FPU_FPDSCR_RMode_Pos               22U                                            /*!< FPDS
1742:Drivers/CMSIS/Include/core_cm33.h **** #define FPU_FPDSCR_RMode_Msk               (3UL << FPU_FPDSCR_RMode_Pos)                  /*!< FPDS
1743:Drivers/CMSIS/Include/core_cm33.h **** 
1744:Drivers/CMSIS/Include/core_cm33.h **** /* Media and FP Feature Register 0 Definitions */
1745:Drivers/CMSIS/Include/core_cm33.h **** #define FPU_MVFR0_FP_rounding_modes_Pos    28U                                            /*!< MVFR
1746:Drivers/CMSIS/Include/core_cm33.h **** #define FPU_MVFR0_FP_rounding_modes_Msk    (0xFUL << FPU_MVFR0_FP_rounding_modes_Pos)     /*!< MVFR
1747:Drivers/CMSIS/Include/core_cm33.h **** 
1748:Drivers/CMSIS/Include/core_cm33.h **** #define FPU_MVFR0_Short_vectors_Pos        24U                                            /*!< MVFR
1749:Drivers/CMSIS/Include/core_cm33.h **** #define FPU_MVFR0_Short_vectors_Msk        (0xFUL << FPU_MVFR0_Short_vectors_Pos)         /*!< MVFR
1750:Drivers/CMSIS/Include/core_cm33.h **** 
1751:Drivers/CMSIS/Include/core_cm33.h **** #define FPU_MVFR0_Square_root_Pos          20U                                            /*!< MVFR
1752:Drivers/CMSIS/Include/core_cm33.h **** #define FPU_MVFR0_Square_root_Msk          (0xFUL << FPU_MVFR0_Square_root_Pos)           /*!< MVFR
1753:Drivers/CMSIS/Include/core_cm33.h **** 
1754:Drivers/CMSIS/Include/core_cm33.h **** #define FPU_MVFR0_Divide_Pos               16U                                            /*!< MVFR
1755:Drivers/CMSIS/Include/core_cm33.h **** #define FPU_MVFR0_Divide_Msk               (0xFUL << FPU_MVFR0_Divide_Pos)                /*!< MVFR
1756:Drivers/CMSIS/Include/core_cm33.h **** 
1757:Drivers/CMSIS/Include/core_cm33.h **** #define FPU_MVFR0_FP_excep_trapping_Pos    12U                                            /*!< MVFR
1758:Drivers/CMSIS/Include/core_cm33.h **** #define FPU_MVFR0_FP_excep_trapping_Msk    (0xFUL << FPU_MVFR0_FP_excep_trapping_Pos)     /*!< MVFR
1759:Drivers/CMSIS/Include/core_cm33.h **** 
1760:Drivers/CMSIS/Include/core_cm33.h **** #define FPU_MVFR0_Double_precision_Pos      8U                                            /*!< MVFR
1761:Drivers/CMSIS/Include/core_cm33.h **** #define FPU_MVFR0_Double_precision_Msk     (0xFUL << FPU_MVFR0_Double_precision_Pos)      /*!< MVFR
1762:Drivers/CMSIS/Include/core_cm33.h **** 
1763:Drivers/CMSIS/Include/core_cm33.h **** #define FPU_MVFR0_Single_precision_Pos      4U                                            /*!< MVFR
1764:Drivers/CMSIS/Include/core_cm33.h **** #define FPU_MVFR0_Single_precision_Msk     (0xFUL << FPU_MVFR0_Single_precision_Pos)      /*!< MVFR
1765:Drivers/CMSIS/Include/core_cm33.h **** 
1766:Drivers/CMSIS/Include/core_cm33.h **** #define FPU_MVFR0_A_SIMD_registers_Pos      0U                                            /*!< MVFR
1767:Drivers/CMSIS/Include/core_cm33.h **** #define FPU_MVFR0_A_SIMD_registers_Msk     (0xFUL /*<< FPU_MVFR0_A_SIMD_registers_Pos*/)  /*!< MVFR
1768:Drivers/CMSIS/Include/core_cm33.h **** 
1769:Drivers/CMSIS/Include/core_cm33.h **** /* Media and FP Feature Register 1 Definitions */
1770:Drivers/CMSIS/Include/core_cm33.h **** #define FPU_MVFR1_FP_fused_MAC_Pos         28U                                            /*!< MVFR
1771:Drivers/CMSIS/Include/core_cm33.h **** #define FPU_MVFR1_FP_fused_MAC_Msk         (0xFUL << FPU_MVFR1_FP_fused_MAC_Pos)          /*!< MVFR
1772:Drivers/CMSIS/Include/core_cm33.h **** 
1773:Drivers/CMSIS/Include/core_cm33.h **** #define FPU_MVFR1_FP_HPFP_Pos              24U                                            /*!< MVFR
1774:Drivers/CMSIS/Include/core_cm33.h **** #define FPU_MVFR1_FP_HPFP_Msk              (0xFUL << FPU_MVFR1_FP_HPFP_Pos)               /*!< MVFR
1775:Drivers/CMSIS/Include/core_cm33.h **** 
1776:Drivers/CMSIS/Include/core_cm33.h **** #define FPU_MVFR1_D_NaN_mode_Pos            4U                                            /*!< MVFR
1777:Drivers/CMSIS/Include/core_cm33.h **** #define FPU_MVFR1_D_NaN_mode_Msk           (0xFUL << FPU_MVFR1_D_NaN_mode_Pos)            /*!< MVFR
1778:Drivers/CMSIS/Include/core_cm33.h **** 
1779:Drivers/CMSIS/Include/core_cm33.h **** #define FPU_MVFR1_FtZ_mode_Pos              0U                                            /*!< MVFR
1780:Drivers/CMSIS/Include/core_cm33.h **** #define FPU_MVFR1_FtZ_mode_Msk             (0xFUL /*<< FPU_MVFR1_FtZ_mode_Pos*/)          /*!< MVFR
1781:Drivers/CMSIS/Include/core_cm33.h **** 
1782:Drivers/CMSIS/Include/core_cm33.h **** /*@} end of group CMSIS_FPU */
1783:Drivers/CMSIS/Include/core_cm33.h **** 
1784:Drivers/CMSIS/Include/core_cm33.h **** 
1785:Drivers/CMSIS/Include/core_cm33.h **** /**
1786:Drivers/CMSIS/Include/core_cm33.h ****   \ingroup  CMSIS_core_register
1787:Drivers/CMSIS/Include/core_cm33.h ****   \defgroup CMSIS_CoreDebug       Core Debug Registers (CoreDebug)
1788:Drivers/CMSIS/Include/core_cm33.h ****   \brief    Type definitions for the Core Debug Registers
1789:Drivers/CMSIS/Include/core_cm33.h ****   @{
1790:Drivers/CMSIS/Include/core_cm33.h ****  */
1791:Drivers/CMSIS/Include/core_cm33.h **** 
1792:Drivers/CMSIS/Include/core_cm33.h **** /**
1793:Drivers/CMSIS/Include/core_cm33.h ****   \brief  Structure type to access the Core Debug Register (CoreDebug).
1794:Drivers/CMSIS/Include/core_cm33.h ****  */
1795:Drivers/CMSIS/Include/core_cm33.h **** typedef struct
1796:Drivers/CMSIS/Include/core_cm33.h **** {
ARM GAS  /tmp/ccvX52LM.s 			page 33


1797:Drivers/CMSIS/Include/core_cm33.h ****   __IOM uint32_t DHCSR;                  /*!< Offset: 0x000 (R/W)  Debug Halting Control and Status
1798:Drivers/CMSIS/Include/core_cm33.h ****   __OM  uint32_t DCRSR;                  /*!< Offset: 0x004 ( /W)  Debug Core Register Selector Reg
1799:Drivers/CMSIS/Include/core_cm33.h ****   __IOM uint32_t DCRDR;                  /*!< Offset: 0x008 (R/W)  Debug Core Register Data Registe
1800:Drivers/CMSIS/Include/core_cm33.h ****   __IOM uint32_t DEMCR;                  /*!< Offset: 0x00C (R/W)  Debug Exception and Monitor Cont
1801:Drivers/CMSIS/Include/core_cm33.h ****         uint32_t RESERVED4[1U];
1802:Drivers/CMSIS/Include/core_cm33.h ****   __IOM uint32_t DAUTHCTRL;              /*!< Offset: 0x014 (R/W)  Debug Authentication Control Reg
1803:Drivers/CMSIS/Include/core_cm33.h ****   __IOM uint32_t DSCSR;                  /*!< Offset: 0x018 (R/W)  Debug Security Control and Statu
1804:Drivers/CMSIS/Include/core_cm33.h **** } CoreDebug_Type;
1805:Drivers/CMSIS/Include/core_cm33.h **** 
1806:Drivers/CMSIS/Include/core_cm33.h **** /* Debug Halting Control and Status Register Definitions */
1807:Drivers/CMSIS/Include/core_cm33.h **** #define CoreDebug_DHCSR_DBGKEY_Pos         16U                                            /*!< Core
1808:Drivers/CMSIS/Include/core_cm33.h **** #define CoreDebug_DHCSR_DBGKEY_Msk         (0xFFFFUL << CoreDebug_DHCSR_DBGKEY_Pos)       /*!< Core
1809:Drivers/CMSIS/Include/core_cm33.h **** 
1810:Drivers/CMSIS/Include/core_cm33.h **** #define CoreDebug_DHCSR_S_RESTART_ST_Pos   26U                                            /*!< Core
1811:Drivers/CMSIS/Include/core_cm33.h **** #define CoreDebug_DHCSR_S_RESTART_ST_Msk   (1UL << CoreDebug_DHCSR_S_RESTART_ST_Pos)      /*!< Core
1812:Drivers/CMSIS/Include/core_cm33.h **** 
1813:Drivers/CMSIS/Include/core_cm33.h **** #define CoreDebug_DHCSR_S_RESET_ST_Pos     25U                                            /*!< Core
1814:Drivers/CMSIS/Include/core_cm33.h **** #define CoreDebug_DHCSR_S_RESET_ST_Msk     (1UL << CoreDebug_DHCSR_S_RESET_ST_Pos)        /*!< Core
1815:Drivers/CMSIS/Include/core_cm33.h **** 
1816:Drivers/CMSIS/Include/core_cm33.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Pos    24U                                            /*!< Core
1817:Drivers/CMSIS/Include/core_cm33.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Msk    (1UL << CoreDebug_DHCSR_S_RETIRE_ST_Pos)       /*!< Core
1818:Drivers/CMSIS/Include/core_cm33.h **** 
1819:Drivers/CMSIS/Include/core_cm33.h **** #define CoreDebug_DHCSR_S_LOCKUP_Pos       19U                                            /*!< Core
1820:Drivers/CMSIS/Include/core_cm33.h **** #define CoreDebug_DHCSR_S_LOCKUP_Msk       (1UL << CoreDebug_DHCSR_S_LOCKUP_Pos)          /*!< Core
1821:Drivers/CMSIS/Include/core_cm33.h **** 
1822:Drivers/CMSIS/Include/core_cm33.h **** #define CoreDebug_DHCSR_S_SLEEP_Pos        18U                                            /*!< Core
1823:Drivers/CMSIS/Include/core_cm33.h **** #define CoreDebug_DHCSR_S_SLEEP_Msk        (1UL << CoreDebug_DHCSR_S_SLEEP_Pos)           /*!< Core
1824:Drivers/CMSIS/Include/core_cm33.h **** 
1825:Drivers/CMSIS/Include/core_cm33.h **** #define CoreDebug_DHCSR_S_HALT_Pos         17U                                            /*!< Core
1826:Drivers/CMSIS/Include/core_cm33.h **** #define CoreDebug_DHCSR_S_HALT_Msk         (1UL << CoreDebug_DHCSR_S_HALT_Pos)            /*!< Core
1827:Drivers/CMSIS/Include/core_cm33.h **** 
1828:Drivers/CMSIS/Include/core_cm33.h **** #define CoreDebug_DHCSR_S_REGRDY_Pos       16U                                            /*!< Core
1829:Drivers/CMSIS/Include/core_cm33.h **** #define CoreDebug_DHCSR_S_REGRDY_Msk       (1UL << CoreDebug_DHCSR_S_REGRDY_Pos)          /*!< Core
1830:Drivers/CMSIS/Include/core_cm33.h **** 
1831:Drivers/CMSIS/Include/core_cm33.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Pos     5U                                            /*!< Core
1832:Drivers/CMSIS/Include/core_cm33.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Msk    (1UL << CoreDebug_DHCSR_C_SNAPSTALL_Pos)       /*!< Core
1833:Drivers/CMSIS/Include/core_cm33.h **** 
1834:Drivers/CMSIS/Include/core_cm33.h **** #define CoreDebug_DHCSR_C_MASKINTS_Pos      3U                                            /*!< Core
1835:Drivers/CMSIS/Include/core_cm33.h **** #define CoreDebug_DHCSR_C_MASKINTS_Msk     (1UL << CoreDebug_DHCSR_C_MASKINTS_Pos)        /*!< Core
1836:Drivers/CMSIS/Include/core_cm33.h **** 
1837:Drivers/CMSIS/Include/core_cm33.h **** #define CoreDebug_DHCSR_C_STEP_Pos          2U                                            /*!< Core
1838:Drivers/CMSIS/Include/core_cm33.h **** #define CoreDebug_DHCSR_C_STEP_Msk         (1UL << CoreDebug_DHCSR_C_STEP_Pos)            /*!< Core
1839:Drivers/CMSIS/Include/core_cm33.h **** 
1840:Drivers/CMSIS/Include/core_cm33.h **** #define CoreDebug_DHCSR_C_HALT_Pos          1U                                            /*!< Core
1841:Drivers/CMSIS/Include/core_cm33.h **** #define CoreDebug_DHCSR_C_HALT_Msk         (1UL << CoreDebug_DHCSR_C_HALT_Pos)            /*!< Core
1842:Drivers/CMSIS/Include/core_cm33.h **** 
1843:Drivers/CMSIS/Include/core_cm33.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Pos       0U                                            /*!< Core
1844:Drivers/CMSIS/Include/core_cm33.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Msk      (1UL /*<< CoreDebug_DHCSR_C_DEBUGEN_Pos*/)     /*!< Core
1845:Drivers/CMSIS/Include/core_cm33.h **** 
1846:Drivers/CMSIS/Include/core_cm33.h **** /* Debug Core Register Selector Register Definitions */
1847:Drivers/CMSIS/Include/core_cm33.h **** #define CoreDebug_DCRSR_REGWnR_Pos         16U                                            /*!< Core
1848:Drivers/CMSIS/Include/core_cm33.h **** #define CoreDebug_DCRSR_REGWnR_Msk         (1UL << CoreDebug_DCRSR_REGWnR_Pos)            /*!< Core
1849:Drivers/CMSIS/Include/core_cm33.h **** 
1850:Drivers/CMSIS/Include/core_cm33.h **** #define CoreDebug_DCRSR_REGSEL_Pos          0U                                            /*!< Core
1851:Drivers/CMSIS/Include/core_cm33.h **** #define CoreDebug_DCRSR_REGSEL_Msk         (0x1FUL /*<< CoreDebug_DCRSR_REGSEL_Pos*/)     /*!< Core
1852:Drivers/CMSIS/Include/core_cm33.h **** 
1853:Drivers/CMSIS/Include/core_cm33.h **** /* Debug Exception and Monitor Control Register Definitions */
ARM GAS  /tmp/ccvX52LM.s 			page 34


1854:Drivers/CMSIS/Include/core_cm33.h **** #define CoreDebug_DEMCR_TRCENA_Pos         24U                                            /*!< Core
1855:Drivers/CMSIS/Include/core_cm33.h **** #define CoreDebug_DEMCR_TRCENA_Msk         (1UL << CoreDebug_DEMCR_TRCENA_Pos)            /*!< Core
1856:Drivers/CMSIS/Include/core_cm33.h **** 
1857:Drivers/CMSIS/Include/core_cm33.h **** #define CoreDebug_DEMCR_MON_REQ_Pos        19U                                            /*!< Core
1858:Drivers/CMSIS/Include/core_cm33.h **** #define CoreDebug_DEMCR_MON_REQ_Msk        (1UL << CoreDebug_DEMCR_MON_REQ_Pos)           /*!< Core
1859:Drivers/CMSIS/Include/core_cm33.h **** 
1860:Drivers/CMSIS/Include/core_cm33.h **** #define CoreDebug_DEMCR_MON_STEP_Pos       18U                                            /*!< Core
1861:Drivers/CMSIS/Include/core_cm33.h **** #define CoreDebug_DEMCR_MON_STEP_Msk       (1UL << CoreDebug_DEMCR_MON_STEP_Pos)          /*!< Core
1862:Drivers/CMSIS/Include/core_cm33.h **** 
1863:Drivers/CMSIS/Include/core_cm33.h **** #define CoreDebug_DEMCR_MON_PEND_Pos       17U                                            /*!< Core
1864:Drivers/CMSIS/Include/core_cm33.h **** #define CoreDebug_DEMCR_MON_PEND_Msk       (1UL << CoreDebug_DEMCR_MON_PEND_Pos)          /*!< Core
1865:Drivers/CMSIS/Include/core_cm33.h **** 
1866:Drivers/CMSIS/Include/core_cm33.h **** #define CoreDebug_DEMCR_MON_EN_Pos         16U                                            /*!< Core
1867:Drivers/CMSIS/Include/core_cm33.h **** #define CoreDebug_DEMCR_MON_EN_Msk         (1UL << CoreDebug_DEMCR_MON_EN_Pos)            /*!< Core
1868:Drivers/CMSIS/Include/core_cm33.h **** 
1869:Drivers/CMSIS/Include/core_cm33.h **** #define CoreDebug_DEMCR_VC_HARDERR_Pos     10U                                            /*!< Core
1870:Drivers/CMSIS/Include/core_cm33.h **** #define CoreDebug_DEMCR_VC_HARDERR_Msk     (1UL << CoreDebug_DEMCR_VC_HARDERR_Pos)        /*!< Core
1871:Drivers/CMSIS/Include/core_cm33.h **** 
1872:Drivers/CMSIS/Include/core_cm33.h **** #define CoreDebug_DEMCR_VC_INTERR_Pos       9U                                            /*!< Core
1873:Drivers/CMSIS/Include/core_cm33.h **** #define CoreDebug_DEMCR_VC_INTERR_Msk      (1UL << CoreDebug_DEMCR_VC_INTERR_Pos)         /*!< Core
1874:Drivers/CMSIS/Include/core_cm33.h **** 
1875:Drivers/CMSIS/Include/core_cm33.h **** #define CoreDebug_DEMCR_VC_BUSERR_Pos       8U                                            /*!< Core
1876:Drivers/CMSIS/Include/core_cm33.h **** #define CoreDebug_DEMCR_VC_BUSERR_Msk      (1UL << CoreDebug_DEMCR_VC_BUSERR_Pos)         /*!< Core
1877:Drivers/CMSIS/Include/core_cm33.h **** 
1878:Drivers/CMSIS/Include/core_cm33.h **** #define CoreDebug_DEMCR_VC_STATERR_Pos      7U                                            /*!< Core
1879:Drivers/CMSIS/Include/core_cm33.h **** #define CoreDebug_DEMCR_VC_STATERR_Msk     (1UL << CoreDebug_DEMCR_VC_STATERR_Pos)        /*!< Core
1880:Drivers/CMSIS/Include/core_cm33.h **** 
1881:Drivers/CMSIS/Include/core_cm33.h **** #define CoreDebug_DEMCR_VC_CHKERR_Pos       6U                                            /*!< Core
1882:Drivers/CMSIS/Include/core_cm33.h **** #define CoreDebug_DEMCR_VC_CHKERR_Msk      (1UL << CoreDebug_DEMCR_VC_CHKERR_Pos)         /*!< Core
1883:Drivers/CMSIS/Include/core_cm33.h **** 
1884:Drivers/CMSIS/Include/core_cm33.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Pos      5U                                            /*!< Core
1885:Drivers/CMSIS/Include/core_cm33.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Msk     (1UL << CoreDebug_DEMCR_VC_NOCPERR_Pos)        /*!< Core
1886:Drivers/CMSIS/Include/core_cm33.h **** 
1887:Drivers/CMSIS/Include/core_cm33.h **** #define CoreDebug_DEMCR_VC_MMERR_Pos        4U                                            /*!< Core
1888:Drivers/CMSIS/Include/core_cm33.h **** #define CoreDebug_DEMCR_VC_MMERR_Msk       (1UL << CoreDebug_DEMCR_VC_MMERR_Pos)          /*!< Core
1889:Drivers/CMSIS/Include/core_cm33.h **** 
1890:Drivers/CMSIS/Include/core_cm33.h **** #define CoreDebug_DEMCR_VC_CORERESET_Pos    0U                                            /*!< Core
1891:Drivers/CMSIS/Include/core_cm33.h **** #define CoreDebug_DEMCR_VC_CORERESET_Msk   (1UL /*<< CoreDebug_DEMCR_VC_CORERESET_Pos*/)  /*!< Core
1892:Drivers/CMSIS/Include/core_cm33.h **** 
1893:Drivers/CMSIS/Include/core_cm33.h **** /* Debug Authentication Control Register Definitions */
1894:Drivers/CMSIS/Include/core_cm33.h **** #define CoreDebug_DAUTHCTRL_INTSPNIDEN_Pos  3U                                            /*!< Core
1895:Drivers/CMSIS/Include/core_cm33.h **** #define CoreDebug_DAUTHCTRL_INTSPNIDEN_Msk (1UL << CoreDebug_DAUTHCTRL_INTSPNIDEN_Pos)    /*!< Core
1896:Drivers/CMSIS/Include/core_cm33.h **** 
1897:Drivers/CMSIS/Include/core_cm33.h **** #define CoreDebug_DAUTHCTRL_SPNIDENSEL_Pos  2U                                            /*!< Core
1898:Drivers/CMSIS/Include/core_cm33.h **** #define CoreDebug_DAUTHCTRL_SPNIDENSEL_Msk (1UL << CoreDebug_DAUTHCTRL_SPNIDENSEL_Pos)    /*!< Core
1899:Drivers/CMSIS/Include/core_cm33.h **** 
1900:Drivers/CMSIS/Include/core_cm33.h **** #define CoreDebug_DAUTHCTRL_INTSPIDEN_Pos   1U                                            /*!< Core
1901:Drivers/CMSIS/Include/core_cm33.h **** #define CoreDebug_DAUTHCTRL_INTSPIDEN_Msk  (1UL << CoreDebug_DAUTHCTRL_INTSPIDEN_Pos)     /*!< Core
1902:Drivers/CMSIS/Include/core_cm33.h **** 
1903:Drivers/CMSIS/Include/core_cm33.h **** #define CoreDebug_DAUTHCTRL_SPIDENSEL_Pos   0U                                            /*!< Core
1904:Drivers/CMSIS/Include/core_cm33.h **** #define CoreDebug_DAUTHCTRL_SPIDENSEL_Msk  (1UL /*<< CoreDebug_DAUTHCTRL_SPIDENSEL_Pos*/) /*!< Core
1905:Drivers/CMSIS/Include/core_cm33.h **** 
1906:Drivers/CMSIS/Include/core_cm33.h **** /* Debug Security Control and Status Register Definitions */
1907:Drivers/CMSIS/Include/core_cm33.h **** #define CoreDebug_DSCSR_CDS_Pos            16U                                            /*!< Core
1908:Drivers/CMSIS/Include/core_cm33.h **** #define CoreDebug_DSCSR_CDS_Msk            (1UL << CoreDebug_DSCSR_CDS_Pos)               /*!< Core
1909:Drivers/CMSIS/Include/core_cm33.h **** 
1910:Drivers/CMSIS/Include/core_cm33.h **** #define CoreDebug_DSCSR_SBRSEL_Pos          1U                                            /*!< Core
ARM GAS  /tmp/ccvX52LM.s 			page 35


1911:Drivers/CMSIS/Include/core_cm33.h **** #define CoreDebug_DSCSR_SBRSEL_Msk         (1UL << CoreDebug_DSCSR_SBRSEL_Pos)            /*!< Core
1912:Drivers/CMSIS/Include/core_cm33.h **** 
1913:Drivers/CMSIS/Include/core_cm33.h **** #define CoreDebug_DSCSR_SBRSELEN_Pos        0U                                            /*!< Core
1914:Drivers/CMSIS/Include/core_cm33.h **** #define CoreDebug_DSCSR_SBRSELEN_Msk       (1UL /*<< CoreDebug_DSCSR_SBRSELEN_Pos*/)      /*!< Core
1915:Drivers/CMSIS/Include/core_cm33.h **** 
1916:Drivers/CMSIS/Include/core_cm33.h **** /*@} end of group CMSIS_CoreDebug */
1917:Drivers/CMSIS/Include/core_cm33.h **** 
1918:Drivers/CMSIS/Include/core_cm33.h **** 
1919:Drivers/CMSIS/Include/core_cm33.h **** /**
1920:Drivers/CMSIS/Include/core_cm33.h ****   \ingroup    CMSIS_core_register
1921:Drivers/CMSIS/Include/core_cm33.h ****   \defgroup   CMSIS_core_bitfield     Core register bit field macros
1922:Drivers/CMSIS/Include/core_cm33.h ****   \brief      Macros for use with bit field definitions (xxx_Pos, xxx_Msk).
1923:Drivers/CMSIS/Include/core_cm33.h ****   @{
1924:Drivers/CMSIS/Include/core_cm33.h ****  */
1925:Drivers/CMSIS/Include/core_cm33.h **** 
1926:Drivers/CMSIS/Include/core_cm33.h **** /**
1927:Drivers/CMSIS/Include/core_cm33.h ****   \brief   Mask and shift a bit field value for use in a register bit range.
1928:Drivers/CMSIS/Include/core_cm33.h ****   \param[in] field  Name of the register bit field.
1929:Drivers/CMSIS/Include/core_cm33.h ****   \param[in] value  Value of the bit field. This parameter is interpreted as an uint32_t type.
1930:Drivers/CMSIS/Include/core_cm33.h ****   \return           Masked and shifted value.
1931:Drivers/CMSIS/Include/core_cm33.h **** */
1932:Drivers/CMSIS/Include/core_cm33.h **** #define _VAL2FLD(field, value)    (((uint32_t)(value) << field ## _Pos) & field ## _Msk)
1933:Drivers/CMSIS/Include/core_cm33.h **** 
1934:Drivers/CMSIS/Include/core_cm33.h **** /**
1935:Drivers/CMSIS/Include/core_cm33.h ****   \brief     Mask and shift a register value to extract a bit filed value.
1936:Drivers/CMSIS/Include/core_cm33.h ****   \param[in] field  Name of the register bit field.
1937:Drivers/CMSIS/Include/core_cm33.h ****   \param[in] value  Value of register. This parameter is interpreted as an uint32_t type.
1938:Drivers/CMSIS/Include/core_cm33.h ****   \return           Masked and shifted bit field value.
1939:Drivers/CMSIS/Include/core_cm33.h **** */
1940:Drivers/CMSIS/Include/core_cm33.h **** #define _FLD2VAL(field, value)    (((uint32_t)(value) & field ## _Msk) >> field ## _Pos)
1941:Drivers/CMSIS/Include/core_cm33.h **** 
1942:Drivers/CMSIS/Include/core_cm33.h **** /*@} end of group CMSIS_core_bitfield */
1943:Drivers/CMSIS/Include/core_cm33.h **** 
1944:Drivers/CMSIS/Include/core_cm33.h **** 
1945:Drivers/CMSIS/Include/core_cm33.h **** /**
1946:Drivers/CMSIS/Include/core_cm33.h ****   \ingroup    CMSIS_core_register
1947:Drivers/CMSIS/Include/core_cm33.h ****   \defgroup   CMSIS_core_base     Core Definitions
1948:Drivers/CMSIS/Include/core_cm33.h ****   \brief      Definitions for base addresses, unions, and structures.
1949:Drivers/CMSIS/Include/core_cm33.h ****   @{
1950:Drivers/CMSIS/Include/core_cm33.h ****  */
1951:Drivers/CMSIS/Include/core_cm33.h **** 
1952:Drivers/CMSIS/Include/core_cm33.h **** /* Memory mapping of Core Hardware */
1953:Drivers/CMSIS/Include/core_cm33.h ****   #define SCS_BASE            (0xE000E000UL)                             /*!< System Control Space 
1954:Drivers/CMSIS/Include/core_cm33.h ****   #define ITM_BASE            (0xE0000000UL)                             /*!< ITM Base Address */
1955:Drivers/CMSIS/Include/core_cm33.h ****   #define DWT_BASE            (0xE0001000UL)                             /*!< DWT Base Address */
1956:Drivers/CMSIS/Include/core_cm33.h ****   #define TPI_BASE            (0xE0040000UL)                             /*!< TPI Base Address */
1957:Drivers/CMSIS/Include/core_cm33.h ****   #define CoreDebug_BASE      (0xE000EDF0UL)                             /*!< Core Debug Base Addre
1958:Drivers/CMSIS/Include/core_cm33.h ****   #define SysTick_BASE        (SCS_BASE +  0x0010UL)                     /*!< SysTick Base Address 
1959:Drivers/CMSIS/Include/core_cm33.h ****   #define NVIC_BASE           (SCS_BASE +  0x0100UL)                     /*!< NVIC Base Address */
1960:Drivers/CMSIS/Include/core_cm33.h ****   #define SCB_BASE            (SCS_BASE +  0x0D00UL)                     /*!< System Control Block 
1961:Drivers/CMSIS/Include/core_cm33.h **** 
1962:Drivers/CMSIS/Include/core_cm33.h ****   #define SCnSCB              ((SCnSCB_Type    *)     SCS_BASE         ) /*!< System control Regist
1963:Drivers/CMSIS/Include/core_cm33.h ****   #define SCB                 ((SCB_Type       *)     SCB_BASE         ) /*!< SCB configuration str
1964:Drivers/CMSIS/Include/core_cm33.h ****   #define SysTick             ((SysTick_Type   *)     SysTick_BASE     ) /*!< SysTick configuration
1965:Drivers/CMSIS/Include/core_cm33.h ****   #define NVIC                ((NVIC_Type      *)     NVIC_BASE        ) /*!< NVIC configuration st
1966:Drivers/CMSIS/Include/core_cm33.h ****   #define ITM                 ((ITM_Type       *)     ITM_BASE         ) /*!< ITM configuration str
1967:Drivers/CMSIS/Include/core_cm33.h ****   #define DWT                 ((DWT_Type       *)     DWT_BASE         ) /*!< DWT configuration str
ARM GAS  /tmp/ccvX52LM.s 			page 36


1968:Drivers/CMSIS/Include/core_cm33.h ****   #define TPI                 ((TPI_Type       *)     TPI_BASE         ) /*!< TPI configuration str
1969:Drivers/CMSIS/Include/core_cm33.h ****   #define CoreDebug           ((CoreDebug_Type *)     CoreDebug_BASE   ) /*!< Core Debug configurat
1970:Drivers/CMSIS/Include/core_cm33.h **** 
1971:Drivers/CMSIS/Include/core_cm33.h ****   #if defined (__MPU_PRESENT) && (__MPU_PRESENT == 1U)
1972:Drivers/CMSIS/Include/core_cm33.h ****     #define MPU_BASE          (SCS_BASE +  0x0D90UL)                     /*!< Memory Protection Uni
1973:Drivers/CMSIS/Include/core_cm33.h ****     #define MPU               ((MPU_Type       *)     MPU_BASE         ) /*!< Memory Protection Uni
1974:Drivers/CMSIS/Include/core_cm33.h ****   #endif
1975:Drivers/CMSIS/Include/core_cm33.h **** 
1976:Drivers/CMSIS/Include/core_cm33.h ****   #if defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3U)
1977:Drivers/CMSIS/Include/core_cm33.h ****     #define SAU_BASE          (SCS_BASE +  0x0DD0UL)                     /*!< Security Attribution 
1978:Drivers/CMSIS/Include/core_cm33.h ****     #define SAU               ((SAU_Type       *)     SAU_BASE         ) /*!< Security Attribution 
1979:Drivers/CMSIS/Include/core_cm33.h ****   #endif
1980:Drivers/CMSIS/Include/core_cm33.h **** 
1981:Drivers/CMSIS/Include/core_cm33.h ****   #define FPU_BASE            (SCS_BASE +  0x0F30UL)                     /*!< Floating Point Unit *
1982:Drivers/CMSIS/Include/core_cm33.h ****   #define FPU                 ((FPU_Type       *)     FPU_BASE         ) /*!< Floating Point Unit *
1983:Drivers/CMSIS/Include/core_cm33.h **** 
1984:Drivers/CMSIS/Include/core_cm33.h **** #if defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3U)
1985:Drivers/CMSIS/Include/core_cm33.h ****   #define SCS_BASE_NS         (0xE002E000UL)                             /*!< System Control Space 
1986:Drivers/CMSIS/Include/core_cm33.h ****   #define CoreDebug_BASE_NS   (0xE002EDF0UL)                             /*!< Core Debug Base Addre
1987:Drivers/CMSIS/Include/core_cm33.h ****   #define SysTick_BASE_NS     (SCS_BASE_NS +  0x0010UL)                  /*!< SysTick Base Address 
1988:Drivers/CMSIS/Include/core_cm33.h ****   #define NVIC_BASE_NS        (SCS_BASE_NS +  0x0100UL)                  /*!< NVIC Base Address    
1989:Drivers/CMSIS/Include/core_cm33.h ****   #define SCB_BASE_NS         (SCS_BASE_NS +  0x0D00UL)                  /*!< System Control Block 
1990:Drivers/CMSIS/Include/core_cm33.h **** 
1991:Drivers/CMSIS/Include/core_cm33.h ****   #define SCnSCB_NS           ((SCnSCB_Type    *)     SCS_BASE_NS      ) /*!< System control Regist
1992:Drivers/CMSIS/Include/core_cm33.h ****   #define SCB_NS              ((SCB_Type       *)     SCB_BASE_NS      ) /*!< SCB configuration str
1993:Drivers/CMSIS/Include/core_cm33.h ****   #define SysTick_NS          ((SysTick_Type   *)     SysTick_BASE_NS  ) /*!< SysTick configuration
1994:Drivers/CMSIS/Include/core_cm33.h ****   #define NVIC_NS             ((NVIC_Type      *)     NVIC_BASE_NS     ) /*!< NVIC configuration st
1995:Drivers/CMSIS/Include/core_cm33.h ****   #define CoreDebug_NS        ((CoreDebug_Type *)     CoreDebug_BASE_NS) /*!< Core Debug configurat
1996:Drivers/CMSIS/Include/core_cm33.h **** 
1997:Drivers/CMSIS/Include/core_cm33.h ****   #if defined (__MPU_PRESENT) && (__MPU_PRESENT == 1U)
1998:Drivers/CMSIS/Include/core_cm33.h ****     #define MPU_BASE_NS       (SCS_BASE_NS +  0x0D90UL)                  /*!< Memory Protection Uni
1999:Drivers/CMSIS/Include/core_cm33.h ****     #define MPU_NS            ((MPU_Type       *)     MPU_BASE_NS      ) /*!< Memory Protection Uni
2000:Drivers/CMSIS/Include/core_cm33.h ****   #endif
2001:Drivers/CMSIS/Include/core_cm33.h **** 
2002:Drivers/CMSIS/Include/core_cm33.h ****   #define FPU_BASE_NS         (SCS_BASE_NS +  0x0F30UL)                  /*!< Floating Point Unit  
2003:Drivers/CMSIS/Include/core_cm33.h ****   #define FPU_NS              ((FPU_Type       *)     FPU_BASE_NS      ) /*!< Floating Point Unit  
2004:Drivers/CMSIS/Include/core_cm33.h **** 
2005:Drivers/CMSIS/Include/core_cm33.h **** #endif /* defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3U) */
2006:Drivers/CMSIS/Include/core_cm33.h **** /*@} */
2007:Drivers/CMSIS/Include/core_cm33.h **** 
2008:Drivers/CMSIS/Include/core_cm33.h **** 
2009:Drivers/CMSIS/Include/core_cm33.h **** 
2010:Drivers/CMSIS/Include/core_cm33.h **** /*******************************************************************************
2011:Drivers/CMSIS/Include/core_cm33.h ****  *                Hardware Abstraction Layer
2012:Drivers/CMSIS/Include/core_cm33.h ****   Core Function Interface contains:
2013:Drivers/CMSIS/Include/core_cm33.h ****   - Core NVIC Functions
2014:Drivers/CMSIS/Include/core_cm33.h ****   - Core SysTick Functions
2015:Drivers/CMSIS/Include/core_cm33.h ****   - Core Debug Functions
2016:Drivers/CMSIS/Include/core_cm33.h ****   - Core Register Access Functions
2017:Drivers/CMSIS/Include/core_cm33.h ****  ******************************************************************************/
2018:Drivers/CMSIS/Include/core_cm33.h **** /**
2019:Drivers/CMSIS/Include/core_cm33.h ****   \defgroup CMSIS_Core_FunctionInterface Functions and Instructions Reference
2020:Drivers/CMSIS/Include/core_cm33.h **** */
2021:Drivers/CMSIS/Include/core_cm33.h **** 
2022:Drivers/CMSIS/Include/core_cm33.h **** 
2023:Drivers/CMSIS/Include/core_cm33.h **** 
2024:Drivers/CMSIS/Include/core_cm33.h **** /* ##########################   NVIC functions  #################################### */
ARM GAS  /tmp/ccvX52LM.s 			page 37


2025:Drivers/CMSIS/Include/core_cm33.h **** /**
2026:Drivers/CMSIS/Include/core_cm33.h ****   \ingroup  CMSIS_Core_FunctionInterface
2027:Drivers/CMSIS/Include/core_cm33.h ****   \defgroup CMSIS_Core_NVICFunctions NVIC Functions
2028:Drivers/CMSIS/Include/core_cm33.h ****   \brief    Functions that manage interrupts and exceptions via the NVIC.
2029:Drivers/CMSIS/Include/core_cm33.h ****   @{
2030:Drivers/CMSIS/Include/core_cm33.h ****  */
2031:Drivers/CMSIS/Include/core_cm33.h **** 
2032:Drivers/CMSIS/Include/core_cm33.h **** #ifdef CMSIS_NVIC_VIRTUAL
2033:Drivers/CMSIS/Include/core_cm33.h ****   #ifndef CMSIS_NVIC_VIRTUAL_HEADER_FILE
2034:Drivers/CMSIS/Include/core_cm33.h ****     #define CMSIS_NVIC_VIRTUAL_HEADER_FILE "cmsis_nvic_virtual.h"
2035:Drivers/CMSIS/Include/core_cm33.h ****   #endif
2036:Drivers/CMSIS/Include/core_cm33.h ****   #include CMSIS_NVIC_VIRTUAL_HEADER_FILE
2037:Drivers/CMSIS/Include/core_cm33.h **** #else
2038:Drivers/CMSIS/Include/core_cm33.h ****   #define NVIC_SetPriorityGrouping    __NVIC_SetPriorityGrouping
2039:Drivers/CMSIS/Include/core_cm33.h ****   #define NVIC_GetPriorityGrouping    __NVIC_GetPriorityGrouping
2040:Drivers/CMSIS/Include/core_cm33.h ****   #define NVIC_EnableIRQ              __NVIC_EnableIRQ
2041:Drivers/CMSIS/Include/core_cm33.h ****   #define NVIC_GetEnableIRQ           __NVIC_GetEnableIRQ
2042:Drivers/CMSIS/Include/core_cm33.h ****   #define NVIC_DisableIRQ             __NVIC_DisableIRQ
2043:Drivers/CMSIS/Include/core_cm33.h ****   #define NVIC_GetPendingIRQ          __NVIC_GetPendingIRQ
2044:Drivers/CMSIS/Include/core_cm33.h ****   #define NVIC_SetPendingIRQ          __NVIC_SetPendingIRQ
2045:Drivers/CMSIS/Include/core_cm33.h ****   #define NVIC_ClearPendingIRQ        __NVIC_ClearPendingIRQ
2046:Drivers/CMSIS/Include/core_cm33.h ****   #define NVIC_GetActive              __NVIC_GetActive
2047:Drivers/CMSIS/Include/core_cm33.h ****   #define NVIC_SetPriority            __NVIC_SetPriority
2048:Drivers/CMSIS/Include/core_cm33.h ****   #define NVIC_GetPriority            __NVIC_GetPriority
2049:Drivers/CMSIS/Include/core_cm33.h ****   #define NVIC_SystemReset            __NVIC_SystemReset
2050:Drivers/CMSIS/Include/core_cm33.h **** #endif /* CMSIS_NVIC_VIRTUAL */
2051:Drivers/CMSIS/Include/core_cm33.h **** 
2052:Drivers/CMSIS/Include/core_cm33.h **** #ifdef CMSIS_VECTAB_VIRTUAL
2053:Drivers/CMSIS/Include/core_cm33.h ****   #ifndef CMSIS_VECTAB_VIRTUAL_HEADER_FILE
2054:Drivers/CMSIS/Include/core_cm33.h ****     #define CMSIS_VECTAB_VIRTUAL_HEADER_FILE "cmsis_vectab_virtual.h"
2055:Drivers/CMSIS/Include/core_cm33.h ****   #endif
2056:Drivers/CMSIS/Include/core_cm33.h ****   #include CMSIS_VECTAB_VIRTUAL_HEADER_FILE
2057:Drivers/CMSIS/Include/core_cm33.h **** #else
2058:Drivers/CMSIS/Include/core_cm33.h ****   #define NVIC_SetVector              __NVIC_SetVector
2059:Drivers/CMSIS/Include/core_cm33.h ****   #define NVIC_GetVector              __NVIC_GetVector
2060:Drivers/CMSIS/Include/core_cm33.h **** #endif  /* (CMSIS_VECTAB_VIRTUAL) */
2061:Drivers/CMSIS/Include/core_cm33.h **** 
2062:Drivers/CMSIS/Include/core_cm33.h **** #define NVIC_USER_IRQ_OFFSET          16
2063:Drivers/CMSIS/Include/core_cm33.h **** 
2064:Drivers/CMSIS/Include/core_cm33.h **** 
2065:Drivers/CMSIS/Include/core_cm33.h **** /* Special LR values for Secure/Non-Secure call handling and exception handling                    
2066:Drivers/CMSIS/Include/core_cm33.h **** 
2067:Drivers/CMSIS/Include/core_cm33.h **** /* Function Return Payload (from ARMv8-M Architecture Reference Manual) LR value on entry from Secu
2068:Drivers/CMSIS/Include/core_cm33.h **** #define FNC_RETURN                 (0xFEFFFFFFUL)     /* bit [0] ignored when processing a branch  
2069:Drivers/CMSIS/Include/core_cm33.h **** 
2070:Drivers/CMSIS/Include/core_cm33.h **** /* The following EXC_RETURN mask values are used to evaluate the LR on exception entry */
2071:Drivers/CMSIS/Include/core_cm33.h **** #define EXC_RETURN_PREFIX          (0xFF000000UL)     /* bits [31:24] set to indicate an EXC_RETURN
2072:Drivers/CMSIS/Include/core_cm33.h **** #define EXC_RETURN_S               (0x00000040UL)     /* bit [6] stack used to push registers: 0=No
2073:Drivers/CMSIS/Include/core_cm33.h **** #define EXC_RETURN_DCRS            (0x00000020UL)     /* bit [5] stacking rules for called register
2074:Drivers/CMSIS/Include/core_cm33.h **** #define EXC_RETURN_FTYPE           (0x00000010UL)     /* bit [4] allocate stack for floating-point 
2075:Drivers/CMSIS/Include/core_cm33.h **** #define EXC_RETURN_MODE            (0x00000008UL)     /* bit [3] processor mode for return: 0=Handl
2076:Drivers/CMSIS/Include/core_cm33.h **** #define EXC_RETURN_SPSEL           (0x00000004UL)     /* bit [2] stack pointer used to restore cont
2077:Drivers/CMSIS/Include/core_cm33.h **** #define EXC_RETURN_ES              (0x00000001UL)     /* bit [0] security state exception was taken
2078:Drivers/CMSIS/Include/core_cm33.h **** 
2079:Drivers/CMSIS/Include/core_cm33.h **** /* Integrity Signature (from ARMv8-M Architecture Reference Manual) for exception context stacking 
2080:Drivers/CMSIS/Include/core_cm33.h **** #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)  /* Value for processors with floating-point e
2081:Drivers/CMSIS/Include/core_cm33.h **** #define EXC_INTEGRITY_SIGNATURE     (0xFEFA125AUL)     /* bit [0] SFTC must match LR bit[4] EXC_RET
ARM GAS  /tmp/ccvX52LM.s 			page 38


2082:Drivers/CMSIS/Include/core_cm33.h **** #else 
2083:Drivers/CMSIS/Include/core_cm33.h **** #define EXC_INTEGRITY_SIGNATURE     (0xFEFA125BUL)     /* Value for processors without floating-poi
2084:Drivers/CMSIS/Include/core_cm33.h **** #endif
2085:Drivers/CMSIS/Include/core_cm33.h **** 
2086:Drivers/CMSIS/Include/core_cm33.h **** 
2087:Drivers/CMSIS/Include/core_cm33.h **** /**
2088:Drivers/CMSIS/Include/core_cm33.h ****   \brief   Set Priority Grouping
2089:Drivers/CMSIS/Include/core_cm33.h ****   \details Sets the priority grouping field using the required unlock sequence.
2090:Drivers/CMSIS/Include/core_cm33.h ****            The parameter PriorityGroup is assigned to the field SCB->AIRCR [10:8] PRIGROUP field.
2091:Drivers/CMSIS/Include/core_cm33.h ****            Only values from 0..7 are used.
2092:Drivers/CMSIS/Include/core_cm33.h ****            In case of a conflict between priority grouping and available
2093:Drivers/CMSIS/Include/core_cm33.h ****            priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
2094:Drivers/CMSIS/Include/core_cm33.h ****   \param [in]      PriorityGroup  Priority grouping field.
2095:Drivers/CMSIS/Include/core_cm33.h ****  */
2096:Drivers/CMSIS/Include/core_cm33.h **** __STATIC_INLINE void __NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
2097:Drivers/CMSIS/Include/core_cm33.h **** {
2098:Drivers/CMSIS/Include/core_cm33.h ****   uint32_t reg_value;
2099:Drivers/CMSIS/Include/core_cm33.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);             /* only values 0..7 a
2100:Drivers/CMSIS/Include/core_cm33.h **** 
2101:Drivers/CMSIS/Include/core_cm33.h ****   reg_value  =  SCB->AIRCR;                                                   /* read old register 
2102:Drivers/CMSIS/Include/core_cm33.h ****   reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to chan
2103:Drivers/CMSIS/Include/core_cm33.h ****   reg_value  =  (reg_value                                   |
2104:Drivers/CMSIS/Include/core_cm33.h ****                 ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
2105:Drivers/CMSIS/Include/core_cm33.h ****                 (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key a
2106:Drivers/CMSIS/Include/core_cm33.h ****   SCB->AIRCR =  reg_value;
2107:Drivers/CMSIS/Include/core_cm33.h **** }
2108:Drivers/CMSIS/Include/core_cm33.h **** 
2109:Drivers/CMSIS/Include/core_cm33.h **** 
2110:Drivers/CMSIS/Include/core_cm33.h **** /**
2111:Drivers/CMSIS/Include/core_cm33.h ****   \brief   Get Priority Grouping
2112:Drivers/CMSIS/Include/core_cm33.h ****   \details Reads the priority grouping field from the NVIC Interrupt Controller.
2113:Drivers/CMSIS/Include/core_cm33.h ****   \return                Priority grouping field (SCB->AIRCR [10:8] PRIGROUP field).
2114:Drivers/CMSIS/Include/core_cm33.h ****  */
2115:Drivers/CMSIS/Include/core_cm33.h **** __STATIC_INLINE uint32_t __NVIC_GetPriorityGrouping(void)
2116:Drivers/CMSIS/Include/core_cm33.h **** {
2117:Drivers/CMSIS/Include/core_cm33.h ****   return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
2118:Drivers/CMSIS/Include/core_cm33.h **** }
2119:Drivers/CMSIS/Include/core_cm33.h **** 
2120:Drivers/CMSIS/Include/core_cm33.h **** 
2121:Drivers/CMSIS/Include/core_cm33.h **** /**
2122:Drivers/CMSIS/Include/core_cm33.h ****   \brief   Enable Interrupt
2123:Drivers/CMSIS/Include/core_cm33.h ****   \details Enables a device specific interrupt in the NVIC interrupt controller.
2124:Drivers/CMSIS/Include/core_cm33.h ****   \param [in]      IRQn  Device specific interrupt number.
2125:Drivers/CMSIS/Include/core_cm33.h ****   \note    IRQn must not be negative.
2126:Drivers/CMSIS/Include/core_cm33.h ****  */
2127:Drivers/CMSIS/Include/core_cm33.h **** __STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
2128:Drivers/CMSIS/Include/core_cm33.h **** {
2129:Drivers/CMSIS/Include/core_cm33.h ****   if ((int32_t)(IRQn) >= 0)
2130:Drivers/CMSIS/Include/core_cm33.h ****   {
2131:Drivers/CMSIS/Include/core_cm33.h ****     __COMPILER_BARRIER();
2132:Drivers/CMSIS/Include/core_cm33.h ****     NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
2133:Drivers/CMSIS/Include/core_cm33.h ****     __COMPILER_BARRIER();
2134:Drivers/CMSIS/Include/core_cm33.h ****   }
2135:Drivers/CMSIS/Include/core_cm33.h **** }
2136:Drivers/CMSIS/Include/core_cm33.h **** 
2137:Drivers/CMSIS/Include/core_cm33.h **** 
2138:Drivers/CMSIS/Include/core_cm33.h **** /**
ARM GAS  /tmp/ccvX52LM.s 			page 39


2139:Drivers/CMSIS/Include/core_cm33.h ****   \brief   Get Interrupt Enable status
2140:Drivers/CMSIS/Include/core_cm33.h ****   \details Returns a device specific interrupt enable status from the NVIC interrupt controller.
2141:Drivers/CMSIS/Include/core_cm33.h ****   \param [in]      IRQn  Device specific interrupt number.
2142:Drivers/CMSIS/Include/core_cm33.h ****   \return             0  Interrupt is not enabled.
2143:Drivers/CMSIS/Include/core_cm33.h ****   \return             1  Interrupt is enabled.
2144:Drivers/CMSIS/Include/core_cm33.h ****   \note    IRQn must not be negative.
2145:Drivers/CMSIS/Include/core_cm33.h ****  */
2146:Drivers/CMSIS/Include/core_cm33.h **** __STATIC_INLINE uint32_t __NVIC_GetEnableIRQ(IRQn_Type IRQn)
2147:Drivers/CMSIS/Include/core_cm33.h **** {
2148:Drivers/CMSIS/Include/core_cm33.h ****   if ((int32_t)(IRQn) >= 0)
2149:Drivers/CMSIS/Include/core_cm33.h ****   {
2150:Drivers/CMSIS/Include/core_cm33.h ****     return((uint32_t)(((NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] & (1UL << (((uint32_t)IRQn) & 0x1FUL)
2151:Drivers/CMSIS/Include/core_cm33.h ****   }
2152:Drivers/CMSIS/Include/core_cm33.h ****   else
2153:Drivers/CMSIS/Include/core_cm33.h ****   {
2154:Drivers/CMSIS/Include/core_cm33.h ****     return(0U);
2155:Drivers/CMSIS/Include/core_cm33.h ****   }
2156:Drivers/CMSIS/Include/core_cm33.h **** }
2157:Drivers/CMSIS/Include/core_cm33.h **** 
2158:Drivers/CMSIS/Include/core_cm33.h **** 
2159:Drivers/CMSIS/Include/core_cm33.h **** /**
2160:Drivers/CMSIS/Include/core_cm33.h ****   \brief   Disable Interrupt
2161:Drivers/CMSIS/Include/core_cm33.h ****   \details Disables a device specific interrupt in the NVIC interrupt controller.
2162:Drivers/CMSIS/Include/core_cm33.h ****   \param [in]      IRQn  Device specific interrupt number.
2163:Drivers/CMSIS/Include/core_cm33.h ****   \note    IRQn must not be negative.
2164:Drivers/CMSIS/Include/core_cm33.h ****  */
2165:Drivers/CMSIS/Include/core_cm33.h **** __STATIC_INLINE void __NVIC_DisableIRQ(IRQn_Type IRQn)
2166:Drivers/CMSIS/Include/core_cm33.h **** {
2167:Drivers/CMSIS/Include/core_cm33.h ****   if ((int32_t)(IRQn) >= 0)
2168:Drivers/CMSIS/Include/core_cm33.h ****   {
2169:Drivers/CMSIS/Include/core_cm33.h ****     NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
2170:Drivers/CMSIS/Include/core_cm33.h ****     __DSB();
2171:Drivers/CMSIS/Include/core_cm33.h ****     __ISB();
2172:Drivers/CMSIS/Include/core_cm33.h ****   }
2173:Drivers/CMSIS/Include/core_cm33.h **** }
2174:Drivers/CMSIS/Include/core_cm33.h **** 
2175:Drivers/CMSIS/Include/core_cm33.h **** 
2176:Drivers/CMSIS/Include/core_cm33.h **** /**
2177:Drivers/CMSIS/Include/core_cm33.h ****   \brief   Get Pending Interrupt
2178:Drivers/CMSIS/Include/core_cm33.h ****   \details Reads the NVIC pending register and returns the pending bit for the specified device spe
2179:Drivers/CMSIS/Include/core_cm33.h ****   \param [in]      IRQn  Device specific interrupt number.
2180:Drivers/CMSIS/Include/core_cm33.h ****   \return             0  Interrupt status is not pending.
2181:Drivers/CMSIS/Include/core_cm33.h ****   \return             1  Interrupt status is pending.
2182:Drivers/CMSIS/Include/core_cm33.h ****   \note    IRQn must not be negative.
2183:Drivers/CMSIS/Include/core_cm33.h ****  */
2184:Drivers/CMSIS/Include/core_cm33.h **** __STATIC_INLINE uint32_t __NVIC_GetPendingIRQ(IRQn_Type IRQn)
2185:Drivers/CMSIS/Include/core_cm33.h **** {
2186:Drivers/CMSIS/Include/core_cm33.h ****   if ((int32_t)(IRQn) >= 0)
2187:Drivers/CMSIS/Include/core_cm33.h ****   {
2188:Drivers/CMSIS/Include/core_cm33.h ****     return((uint32_t)(((NVIC->ISPR[(((uint32_t)IRQn) >> 5UL)] & (1UL << (((uint32_t)IRQn) & 0x1FUL)
2189:Drivers/CMSIS/Include/core_cm33.h ****   }
2190:Drivers/CMSIS/Include/core_cm33.h ****   else
2191:Drivers/CMSIS/Include/core_cm33.h ****   {
2192:Drivers/CMSIS/Include/core_cm33.h ****     return(0U);
2193:Drivers/CMSIS/Include/core_cm33.h ****   }
2194:Drivers/CMSIS/Include/core_cm33.h **** }
2195:Drivers/CMSIS/Include/core_cm33.h **** 
ARM GAS  /tmp/ccvX52LM.s 			page 40


2196:Drivers/CMSIS/Include/core_cm33.h **** 
2197:Drivers/CMSIS/Include/core_cm33.h **** /**
2198:Drivers/CMSIS/Include/core_cm33.h ****   \brief   Set Pending Interrupt
2199:Drivers/CMSIS/Include/core_cm33.h ****   \details Sets the pending bit of a device specific interrupt in the NVIC pending register.
2200:Drivers/CMSIS/Include/core_cm33.h ****   \param [in]      IRQn  Device specific interrupt number.
2201:Drivers/CMSIS/Include/core_cm33.h ****   \note    IRQn must not be negative.
2202:Drivers/CMSIS/Include/core_cm33.h ****  */
2203:Drivers/CMSIS/Include/core_cm33.h **** __STATIC_INLINE void __NVIC_SetPendingIRQ(IRQn_Type IRQn)
2204:Drivers/CMSIS/Include/core_cm33.h **** {
2205:Drivers/CMSIS/Include/core_cm33.h ****   if ((int32_t)(IRQn) >= 0)
2206:Drivers/CMSIS/Include/core_cm33.h ****   {
2207:Drivers/CMSIS/Include/core_cm33.h ****     NVIC->ISPR[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
2208:Drivers/CMSIS/Include/core_cm33.h ****   }
2209:Drivers/CMSIS/Include/core_cm33.h **** }
2210:Drivers/CMSIS/Include/core_cm33.h **** 
2211:Drivers/CMSIS/Include/core_cm33.h **** 
2212:Drivers/CMSIS/Include/core_cm33.h **** /**
2213:Drivers/CMSIS/Include/core_cm33.h ****   \brief   Clear Pending Interrupt
2214:Drivers/CMSIS/Include/core_cm33.h ****   \details Clears the pending bit of a device specific interrupt in the NVIC pending register.
2215:Drivers/CMSIS/Include/core_cm33.h ****   \param [in]      IRQn  Device specific interrupt number.
2216:Drivers/CMSIS/Include/core_cm33.h ****   \note    IRQn must not be negative.
2217:Drivers/CMSIS/Include/core_cm33.h ****  */
2218:Drivers/CMSIS/Include/core_cm33.h **** __STATIC_INLINE void __NVIC_ClearPendingIRQ(IRQn_Type IRQn)
2219:Drivers/CMSIS/Include/core_cm33.h **** {
2220:Drivers/CMSIS/Include/core_cm33.h ****   if ((int32_t)(IRQn) >= 0)
2221:Drivers/CMSIS/Include/core_cm33.h ****   {
2222:Drivers/CMSIS/Include/core_cm33.h ****     NVIC->ICPR[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
2223:Drivers/CMSIS/Include/core_cm33.h ****   }
2224:Drivers/CMSIS/Include/core_cm33.h **** }
2225:Drivers/CMSIS/Include/core_cm33.h **** 
2226:Drivers/CMSIS/Include/core_cm33.h **** 
2227:Drivers/CMSIS/Include/core_cm33.h **** /**
2228:Drivers/CMSIS/Include/core_cm33.h ****   \brief   Get Active Interrupt
2229:Drivers/CMSIS/Include/core_cm33.h ****   \details Reads the active register in the NVIC and returns the active bit for the device specific
2230:Drivers/CMSIS/Include/core_cm33.h ****   \param [in]      IRQn  Device specific interrupt number.
2231:Drivers/CMSIS/Include/core_cm33.h ****   \return             0  Interrupt status is not active.
2232:Drivers/CMSIS/Include/core_cm33.h ****   \return             1  Interrupt status is active.
2233:Drivers/CMSIS/Include/core_cm33.h ****   \note    IRQn must not be negative.
2234:Drivers/CMSIS/Include/core_cm33.h ****  */
2235:Drivers/CMSIS/Include/core_cm33.h **** __STATIC_INLINE uint32_t __NVIC_GetActive(IRQn_Type IRQn)
2236:Drivers/CMSIS/Include/core_cm33.h **** {
2237:Drivers/CMSIS/Include/core_cm33.h ****   if ((int32_t)(IRQn) >= 0)
2238:Drivers/CMSIS/Include/core_cm33.h ****   {
2239:Drivers/CMSIS/Include/core_cm33.h ****     return((uint32_t)(((NVIC->IABR[(((uint32_t)IRQn) >> 5UL)] & (1UL << (((uint32_t)IRQn) & 0x1FUL)
2240:Drivers/CMSIS/Include/core_cm33.h ****   }
2241:Drivers/CMSIS/Include/core_cm33.h ****   else
2242:Drivers/CMSIS/Include/core_cm33.h ****   {
2243:Drivers/CMSIS/Include/core_cm33.h ****     return(0U);
2244:Drivers/CMSIS/Include/core_cm33.h ****   }
2245:Drivers/CMSIS/Include/core_cm33.h **** }
2246:Drivers/CMSIS/Include/core_cm33.h **** 
2247:Drivers/CMSIS/Include/core_cm33.h **** 
2248:Drivers/CMSIS/Include/core_cm33.h **** #if defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3U)
2249:Drivers/CMSIS/Include/core_cm33.h **** /**
2250:Drivers/CMSIS/Include/core_cm33.h ****   \brief   Get Interrupt Target State
2251:Drivers/CMSIS/Include/core_cm33.h ****   \details Reads the interrupt target field in the NVIC and returns the interrupt target bit for th
2252:Drivers/CMSIS/Include/core_cm33.h ****   \param [in]      IRQn  Device specific interrupt number.
ARM GAS  /tmp/ccvX52LM.s 			page 41


2253:Drivers/CMSIS/Include/core_cm33.h ****   \return             0  if interrupt is assigned to Secure
2254:Drivers/CMSIS/Include/core_cm33.h ****   \return             1  if interrupt is assigned to Non Secure
2255:Drivers/CMSIS/Include/core_cm33.h ****   \note    IRQn must not be negative.
2256:Drivers/CMSIS/Include/core_cm33.h ****  */
2257:Drivers/CMSIS/Include/core_cm33.h **** __STATIC_INLINE uint32_t NVIC_GetTargetState(IRQn_Type IRQn)
2258:Drivers/CMSIS/Include/core_cm33.h **** {
2259:Drivers/CMSIS/Include/core_cm33.h ****   if ((int32_t)(IRQn) >= 0)
2260:Drivers/CMSIS/Include/core_cm33.h ****   {
2261:Drivers/CMSIS/Include/core_cm33.h ****     return((uint32_t)(((NVIC->ITNS[(((uint32_t)IRQn) >> 5UL)] & (1UL << (((uint32_t)IRQn) & 0x1FUL)
2262:Drivers/CMSIS/Include/core_cm33.h ****   }
2263:Drivers/CMSIS/Include/core_cm33.h ****   else
2264:Drivers/CMSIS/Include/core_cm33.h ****   {
2265:Drivers/CMSIS/Include/core_cm33.h ****     return(0U);
2266:Drivers/CMSIS/Include/core_cm33.h ****   }
2267:Drivers/CMSIS/Include/core_cm33.h **** }
2268:Drivers/CMSIS/Include/core_cm33.h **** 
2269:Drivers/CMSIS/Include/core_cm33.h **** 
2270:Drivers/CMSIS/Include/core_cm33.h **** /**
2271:Drivers/CMSIS/Include/core_cm33.h ****   \brief   Set Interrupt Target State
2272:Drivers/CMSIS/Include/core_cm33.h ****   \details Sets the interrupt target field in the NVIC and returns the interrupt target bit for the
2273:Drivers/CMSIS/Include/core_cm33.h ****   \param [in]      IRQn  Device specific interrupt number.
2274:Drivers/CMSIS/Include/core_cm33.h ****   \return             0  if interrupt is assigned to Secure
2275:Drivers/CMSIS/Include/core_cm33.h ****                       1  if interrupt is assigned to Non Secure
2276:Drivers/CMSIS/Include/core_cm33.h ****   \note    IRQn must not be negative.
2277:Drivers/CMSIS/Include/core_cm33.h ****  */
2278:Drivers/CMSIS/Include/core_cm33.h **** __STATIC_INLINE uint32_t NVIC_SetTargetState(IRQn_Type IRQn)
2279:Drivers/CMSIS/Include/core_cm33.h **** {
2280:Drivers/CMSIS/Include/core_cm33.h ****   if ((int32_t)(IRQn) >= 0)
2281:Drivers/CMSIS/Include/core_cm33.h ****   {
2282:Drivers/CMSIS/Include/core_cm33.h ****     NVIC->ITNS[(((uint32_t)IRQn) >> 5UL)] |=  ((uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL)));
2283:Drivers/CMSIS/Include/core_cm33.h ****     return((uint32_t)(((NVIC->ITNS[(((uint32_t)IRQn) >> 5UL)] & (1UL << (((uint32_t)IRQn) & 0x1FUL)
2284:Drivers/CMSIS/Include/core_cm33.h ****   }
2285:Drivers/CMSIS/Include/core_cm33.h ****   else
2286:Drivers/CMSIS/Include/core_cm33.h ****   {
2287:Drivers/CMSIS/Include/core_cm33.h ****     return(0U);
2288:Drivers/CMSIS/Include/core_cm33.h ****   }
2289:Drivers/CMSIS/Include/core_cm33.h **** }
2290:Drivers/CMSIS/Include/core_cm33.h **** 
2291:Drivers/CMSIS/Include/core_cm33.h **** 
2292:Drivers/CMSIS/Include/core_cm33.h **** /**
2293:Drivers/CMSIS/Include/core_cm33.h ****   \brief   Clear Interrupt Target State
2294:Drivers/CMSIS/Include/core_cm33.h ****   \details Clears the interrupt target field in the NVIC and returns the interrupt target bit for t
2295:Drivers/CMSIS/Include/core_cm33.h ****   \param [in]      IRQn  Device specific interrupt number.
2296:Drivers/CMSIS/Include/core_cm33.h ****   \return             0  if interrupt is assigned to Secure
2297:Drivers/CMSIS/Include/core_cm33.h ****                       1  if interrupt is assigned to Non Secure
2298:Drivers/CMSIS/Include/core_cm33.h ****   \note    IRQn must not be negative.
2299:Drivers/CMSIS/Include/core_cm33.h ****  */
2300:Drivers/CMSIS/Include/core_cm33.h **** __STATIC_INLINE uint32_t NVIC_ClearTargetState(IRQn_Type IRQn)
2301:Drivers/CMSIS/Include/core_cm33.h **** {
2302:Drivers/CMSIS/Include/core_cm33.h ****   if ((int32_t)(IRQn) >= 0)
2303:Drivers/CMSIS/Include/core_cm33.h ****   {
2304:Drivers/CMSIS/Include/core_cm33.h ****     NVIC->ITNS[(((uint32_t)IRQn) >> 5UL)] &= ~((uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL)));
2305:Drivers/CMSIS/Include/core_cm33.h ****     return((uint32_t)(((NVIC->ITNS[(((uint32_t)IRQn) >> 5UL)] & (1UL << (((uint32_t)IRQn) & 0x1FUL)
2306:Drivers/CMSIS/Include/core_cm33.h ****   }
2307:Drivers/CMSIS/Include/core_cm33.h ****   else
2308:Drivers/CMSIS/Include/core_cm33.h ****   {
2309:Drivers/CMSIS/Include/core_cm33.h ****     return(0U);
ARM GAS  /tmp/ccvX52LM.s 			page 42


2310:Drivers/CMSIS/Include/core_cm33.h ****   }
2311:Drivers/CMSIS/Include/core_cm33.h **** }
2312:Drivers/CMSIS/Include/core_cm33.h **** #endif /* defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3U) */
2313:Drivers/CMSIS/Include/core_cm33.h **** 
2314:Drivers/CMSIS/Include/core_cm33.h **** 
2315:Drivers/CMSIS/Include/core_cm33.h **** /**
2316:Drivers/CMSIS/Include/core_cm33.h ****   \brief   Set Interrupt Priority
2317:Drivers/CMSIS/Include/core_cm33.h ****   \details Sets the priority of a device specific interrupt or a processor exception.
2318:Drivers/CMSIS/Include/core_cm33.h ****            The interrupt number can be positive to specify a device specific interrupt,
2319:Drivers/CMSIS/Include/core_cm33.h ****            or negative to specify a processor exception.
2320:Drivers/CMSIS/Include/core_cm33.h ****   \param [in]      IRQn  Interrupt number.
2321:Drivers/CMSIS/Include/core_cm33.h ****   \param [in]  priority  Priority to set.
2322:Drivers/CMSIS/Include/core_cm33.h ****   \note    The priority cannot be set for every processor exception.
2323:Drivers/CMSIS/Include/core_cm33.h ****  */
2324:Drivers/CMSIS/Include/core_cm33.h **** __STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
2325:Drivers/CMSIS/Include/core_cm33.h **** {
2326:Drivers/CMSIS/Include/core_cm33.h ****   if ((int32_t)(IRQn) >= 0)
2327:Drivers/CMSIS/Include/core_cm33.h ****   {
2328:Drivers/CMSIS/Include/core_cm33.h ****     NVIC->IPR[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (
2329:Drivers/CMSIS/Include/core_cm33.h ****   }
2330:Drivers/CMSIS/Include/core_cm33.h ****   else
2331:Drivers/CMSIS/Include/core_cm33.h ****   {
2332:Drivers/CMSIS/Include/core_cm33.h ****     SCB->SHPR[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (
2333:Drivers/CMSIS/Include/core_cm33.h ****   }
2334:Drivers/CMSIS/Include/core_cm33.h **** }
2335:Drivers/CMSIS/Include/core_cm33.h **** 
2336:Drivers/CMSIS/Include/core_cm33.h **** 
2337:Drivers/CMSIS/Include/core_cm33.h **** /**
2338:Drivers/CMSIS/Include/core_cm33.h ****   \brief   Get Interrupt Priority
2339:Drivers/CMSIS/Include/core_cm33.h ****   \details Reads the priority of a device specific interrupt or a processor exception.
2340:Drivers/CMSIS/Include/core_cm33.h ****            The interrupt number can be positive to specify a device specific interrupt,
2341:Drivers/CMSIS/Include/core_cm33.h ****            or negative to specify a processor exception.
2342:Drivers/CMSIS/Include/core_cm33.h ****   \param [in]   IRQn  Interrupt number.
2343:Drivers/CMSIS/Include/core_cm33.h ****   \return             Interrupt Priority.
2344:Drivers/CMSIS/Include/core_cm33.h ****                       Value is aligned automatically to the implemented priority bits of the microc
2345:Drivers/CMSIS/Include/core_cm33.h ****  */
2346:Drivers/CMSIS/Include/core_cm33.h **** __STATIC_INLINE uint32_t __NVIC_GetPriority(IRQn_Type IRQn)
2347:Drivers/CMSIS/Include/core_cm33.h **** {
2348:Drivers/CMSIS/Include/core_cm33.h **** 
2349:Drivers/CMSIS/Include/core_cm33.h ****   if ((int32_t)(IRQn) >= 0)
2350:Drivers/CMSIS/Include/core_cm33.h ****   {
2351:Drivers/CMSIS/Include/core_cm33.h ****     return(((uint32_t)NVIC->IPR[((uint32_t)IRQn)]               >> (8U - __NVIC_PRIO_BITS)));
2352:Drivers/CMSIS/Include/core_cm33.h ****   }
2353:Drivers/CMSIS/Include/core_cm33.h ****   else
2354:Drivers/CMSIS/Include/core_cm33.h ****   {
2355:Drivers/CMSIS/Include/core_cm33.h ****     return(((uint32_t)SCB->SHPR[(((uint32_t)IRQn) & 0xFUL)-4UL] >> (8U - __NVIC_PRIO_BITS)));
2356:Drivers/CMSIS/Include/core_cm33.h ****   }
2357:Drivers/CMSIS/Include/core_cm33.h **** }
2358:Drivers/CMSIS/Include/core_cm33.h **** 
2359:Drivers/CMSIS/Include/core_cm33.h **** 
2360:Drivers/CMSIS/Include/core_cm33.h **** /**
2361:Drivers/CMSIS/Include/core_cm33.h ****   \brief   Encode Priority
2362:Drivers/CMSIS/Include/core_cm33.h ****   \details Encodes the priority for an interrupt with the given priority group,
2363:Drivers/CMSIS/Include/core_cm33.h ****            preemptive priority value, and subpriority value.
2364:Drivers/CMSIS/Include/core_cm33.h ****            In case of a conflict between priority grouping and available
2365:Drivers/CMSIS/Include/core_cm33.h ****            priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
2366:Drivers/CMSIS/Include/core_cm33.h ****   \param [in]     PriorityGroup  Used priority group.
ARM GAS  /tmp/ccvX52LM.s 			page 43


2367:Drivers/CMSIS/Include/core_cm33.h ****   \param [in]   PreemptPriority  Preemptive priority value (starting from 0).
2368:Drivers/CMSIS/Include/core_cm33.h ****   \param [in]       SubPriority  Subpriority value (starting from 0).
2369:Drivers/CMSIS/Include/core_cm33.h ****   \return                        Encoded priority. Value can be used in the function \ref NVIC_SetP
2370:Drivers/CMSIS/Include/core_cm33.h ****  */
2371:Drivers/CMSIS/Include/core_cm33.h **** __STATIC_INLINE uint32_t NVIC_EncodePriority (uint32_t PriorityGroup, uint32_t PreemptPriority, uin
2372:Drivers/CMSIS/Include/core_cm33.h **** {
2373:Drivers/CMSIS/Include/core_cm33.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used   
2374:Drivers/CMSIS/Include/core_cm33.h ****   uint32_t PreemptPriorityBits;
2375:Drivers/CMSIS/Include/core_cm33.h ****   uint32_t SubPriorityBits;
2376:Drivers/CMSIS/Include/core_cm33.h **** 
2377:Drivers/CMSIS/Include/core_cm33.h ****   PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NV
2378:Drivers/CMSIS/Include/core_cm33.h ****   SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint
2379:Drivers/CMSIS/Include/core_cm33.h **** 
2380:Drivers/CMSIS/Include/core_cm33.h ****   return (
2381:Drivers/CMSIS/Include/core_cm33.h ****            ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits
2382:Drivers/CMSIS/Include/core_cm33.h ****            ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
2383:Drivers/CMSIS/Include/core_cm33.h ****          );
2384:Drivers/CMSIS/Include/core_cm33.h **** }
2385:Drivers/CMSIS/Include/core_cm33.h **** 
2386:Drivers/CMSIS/Include/core_cm33.h **** 
2387:Drivers/CMSIS/Include/core_cm33.h **** /**
2388:Drivers/CMSIS/Include/core_cm33.h ****   \brief   Decode Priority
2389:Drivers/CMSIS/Include/core_cm33.h ****   \details Decodes an interrupt priority value with a given priority group to
2390:Drivers/CMSIS/Include/core_cm33.h ****            preemptive priority value and subpriority value.
2391:Drivers/CMSIS/Include/core_cm33.h ****            In case of a conflict between priority grouping and available
2392:Drivers/CMSIS/Include/core_cm33.h ****            priority bits (__NVIC_PRIO_BITS) the smallest possible priority group is set.
2393:Drivers/CMSIS/Include/core_cm33.h ****   \param [in]         Priority   Priority value, which can be retrieved with the function \ref NVIC
2394:Drivers/CMSIS/Include/core_cm33.h ****   \param [in]     PriorityGroup  Used priority group.
2395:Drivers/CMSIS/Include/core_cm33.h ****   \param [out] pPreemptPriority  Preemptive priority value (starting from 0).
2396:Drivers/CMSIS/Include/core_cm33.h ****   \param [out]     pSubPriority  Subpriority value (starting from 0).
2397:Drivers/CMSIS/Include/core_cm33.h ****  */
2398:Drivers/CMSIS/Include/core_cm33.h **** __STATIC_INLINE void NVIC_DecodePriority (uint32_t Priority, uint32_t PriorityGroup, uint32_t* cons
2399:Drivers/CMSIS/Include/core_cm33.h **** {
2400:Drivers/CMSIS/Include/core_cm33.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used   
2401:Drivers/CMSIS/Include/core_cm33.h ****   uint32_t PreemptPriorityBits;
2402:Drivers/CMSIS/Include/core_cm33.h ****   uint32_t SubPriorityBits;
2403:Drivers/CMSIS/Include/core_cm33.h **** 
2404:Drivers/CMSIS/Include/core_cm33.h ****   PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NV
2405:Drivers/CMSIS/Include/core_cm33.h ****   SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint
2406:Drivers/CMSIS/Include/core_cm33.h **** 
2407:Drivers/CMSIS/Include/core_cm33.h ****   *pPreemptPriority = (Priority >> SubPriorityBits) & (uint32_t)((1UL << (PreemptPriorityBits)) - 1
2408:Drivers/CMSIS/Include/core_cm33.h ****   *pSubPriority     = (Priority                   ) & (uint32_t)((1UL << (SubPriorityBits    )) - 1
2409:Drivers/CMSIS/Include/core_cm33.h **** }
2410:Drivers/CMSIS/Include/core_cm33.h **** 
2411:Drivers/CMSIS/Include/core_cm33.h **** 
2412:Drivers/CMSIS/Include/core_cm33.h **** /**
2413:Drivers/CMSIS/Include/core_cm33.h ****   \brief   Set Interrupt Vector
2414:Drivers/CMSIS/Include/core_cm33.h ****   \details Sets an interrupt vector in SRAM based interrupt vector table.
2415:Drivers/CMSIS/Include/core_cm33.h ****            The interrupt number can be positive to specify a device specific interrupt,
2416:Drivers/CMSIS/Include/core_cm33.h ****            or negative to specify a processor exception.
2417:Drivers/CMSIS/Include/core_cm33.h ****            VTOR must been relocated to SRAM before.
2418:Drivers/CMSIS/Include/core_cm33.h ****   \param [in]   IRQn      Interrupt number
2419:Drivers/CMSIS/Include/core_cm33.h ****   \param [in]   vector    Address of interrupt handler function
2420:Drivers/CMSIS/Include/core_cm33.h ****  */
2421:Drivers/CMSIS/Include/core_cm33.h **** __STATIC_INLINE void __NVIC_SetVector(IRQn_Type IRQn, uint32_t vector)
2422:Drivers/CMSIS/Include/core_cm33.h **** {
2423:Drivers/CMSIS/Include/core_cm33.h ****   uint32_t *vectors = (uint32_t *)SCB->VTOR;
ARM GAS  /tmp/ccvX52LM.s 			page 44


2424:Drivers/CMSIS/Include/core_cm33.h ****   vectors[(int32_t)IRQn + NVIC_USER_IRQ_OFFSET] = vector;
2425:Drivers/CMSIS/Include/core_cm33.h ****   __DSB();
2426:Drivers/CMSIS/Include/core_cm33.h **** }
2427:Drivers/CMSIS/Include/core_cm33.h **** 
2428:Drivers/CMSIS/Include/core_cm33.h **** 
2429:Drivers/CMSIS/Include/core_cm33.h **** /**
2430:Drivers/CMSIS/Include/core_cm33.h ****   \brief   Get Interrupt Vector
2431:Drivers/CMSIS/Include/core_cm33.h ****   \details Reads an interrupt vector from interrupt vector table.
2432:Drivers/CMSIS/Include/core_cm33.h ****            The interrupt number can be positive to specify a device specific interrupt,
2433:Drivers/CMSIS/Include/core_cm33.h ****            or negative to specify a processor exception.
2434:Drivers/CMSIS/Include/core_cm33.h ****   \param [in]   IRQn      Interrupt number.
2435:Drivers/CMSIS/Include/core_cm33.h ****   \return                 Address of interrupt handler function
2436:Drivers/CMSIS/Include/core_cm33.h ****  */
2437:Drivers/CMSIS/Include/core_cm33.h **** __STATIC_INLINE uint32_t __NVIC_GetVector(IRQn_Type IRQn)
2438:Drivers/CMSIS/Include/core_cm33.h **** {
2439:Drivers/CMSIS/Include/core_cm33.h ****   uint32_t *vectors = (uint32_t *)SCB->VTOR;
2440:Drivers/CMSIS/Include/core_cm33.h ****   return vectors[(int32_t)IRQn + NVIC_USER_IRQ_OFFSET];
2441:Drivers/CMSIS/Include/core_cm33.h **** }
2442:Drivers/CMSIS/Include/core_cm33.h **** 
2443:Drivers/CMSIS/Include/core_cm33.h **** 
2444:Drivers/CMSIS/Include/core_cm33.h **** /**
2445:Drivers/CMSIS/Include/core_cm33.h ****   \brief   System Reset
2446:Drivers/CMSIS/Include/core_cm33.h ****   \details Initiates a system reset request to reset the MCU.
2447:Drivers/CMSIS/Include/core_cm33.h ****  */
2448:Drivers/CMSIS/Include/core_cm33.h **** __NO_RETURN __STATIC_INLINE void __NVIC_SystemReset(void)
2449:Drivers/CMSIS/Include/core_cm33.h **** {
  30              		.loc 2 2449 1 view -0
  31              		.cfi_startproc
  32              		@ Volatile: function does not return.
  33              		@ args = 0, pretend = 0, frame = 0
  34              		@ frame_needed = 0, uses_anonymous_args = 0
  35              		@ link register save eliminated.
2450:Drivers/CMSIS/Include/core_cm33.h ****   __DSB();                                                          /* Ensure all outstanding memor
  36              		.loc 2 2450 3 view .LVU1
  37              	.LBB6:
  38              	.LBI6:
  39              		.file 3 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.2.0
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     08. May 2019
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2019 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
ARM GAS  /tmp/ccvX52LM.s 			page 45


  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  /tmp/ccvX52LM.s 			page 46


  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 120:Drivers/CMSIS/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 122:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****            in the used linker script.
 129:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 130:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 131:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 133:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:Drivers/CMSIS/Include/cmsis_gcc.h ****   
ARM GAS  /tmp/ccvX52LM.s 			page 47


 135:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 141:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 146:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 151:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 156:Drivers/CMSIS/Include/cmsis_gcc.h ****  
 157:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 161:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 162:Drivers/CMSIS/Include/cmsis_gcc.h ****  
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   _start();
 164:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 165:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 168:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 180:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute((used, section(".vectors")))
 183:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 187:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 188:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 189:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 190:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 191:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
ARM GAS  /tmp/ccvX52LM.s 			page 48


 192:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 193:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 194:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 195:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 198:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 200:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 201:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 202:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 203:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 204:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 205:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 206:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 207:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 208:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 209:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 210:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 211:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 212:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 213:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 214:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Control Register
 215:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the Control Register.
 216:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Control Register value
 217:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 218:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_CONTROL(void)
 219:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 220:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 221:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 222:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
 223:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 224:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 225:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 226:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 227:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 228:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 229:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Control Register (non-secure)
 230:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the non-secure Control Register when in secure mode.
 231:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               non-secure Control Register value
 232:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 233:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_CONTROL_NS(void)
 234:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 235:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 236:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 237:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control_ns" : "=r" (result) );
 238:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 239:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 240:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 241:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 242:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 243:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 244:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Control Register
 245:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Writes the given value to the Control Register.
 246:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 247:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 248:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_CONTROL(uint32_t control)
ARM GAS  /tmp/ccvX52LM.s 			page 49


 249:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 250:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
 251:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 252:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 253:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 254:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 255:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 256:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Control Register (non-secure)
 257:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Writes the given value to the non-secure Control Register when in secure state.
 258:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 259:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 260:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_CONTROL_NS(uint32_t control)
 261:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 262:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control_ns, %0" : : "r" (control) : "memory");
 263:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 264:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 265:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 266:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 267:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 268:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get IPSR Register
 269:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 270:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               IPSR Register value
 271:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 272:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_IPSR(void)
 273:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 274:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 275:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 276:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 277:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 278:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 279:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 280:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 281:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 282:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get APSR Register
 283:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 284:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               APSR Register value
 285:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 286:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_APSR(void)
 287:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 288:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 289:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 290:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 291:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 292:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 293:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 294:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 295:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 296:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get xPSR Register
 297:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 298:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               xPSR Register value
 299:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 300:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_xPSR(void)
 301:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 302:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 303:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 304:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 305:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
ARM GAS  /tmp/ccvX52LM.s 			page 50


 306:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 307:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 308:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 309:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 310:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 311:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 312:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSP Register value
 313:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 314:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSP(void)
 315:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 316:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 317:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 318:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp"  : "=r" (result) );
 319:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 320:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 321:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 322:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 323:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 324:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 325:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer (non-secure)
 326:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer (PSP) when in secure s
 327:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSP Register value
 328:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 329:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSP_NS(void)
 330:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 331:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 332:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 333:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp_ns"  : "=r" (result) );
 334:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 335:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 336:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 337:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 338:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 339:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 340:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 341:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 342:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 343:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 344:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSP(uint32_t topOfProcStack)
 345:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 346:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0" : : "r" (topOfProcStack) : );
 347:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 348:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 349:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 350:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 351:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 352:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 353:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer (PSP) when in secure sta
 354:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 355:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 356:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSP_NS(uint32_t topOfProcStack)
 357:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 358:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp_ns, %0" : : "r" (topOfProcStack) : );
 359:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 360:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 361:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 362:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/ccvX52LM.s 			page 51


 363:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 364:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 365:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 366:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSP Register value
 367:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 368:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSP(void)
 369:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 370:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 371:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 372:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp" : "=r" (result) );
 373:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 374:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 375:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 376:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 377:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 378:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 379:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer (non-secure)
 380:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer (MSP) when in secure stat
 381:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSP Register value
 382:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 383:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSP_NS(void)
 384:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 385:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 386:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 387:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp_ns" : "=r" (result) );
 388:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 389:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 390:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 391:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 392:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 393:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 394:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 395:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 396:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 397:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 398:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSP(uint32_t topOfMainStack)
 399:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 400:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0" : : "r" (topOfMainStack) : );
 401:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 402:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 403:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 404:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 405:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 406:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer (non-secure)
 407:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer (MSP) when in secure state.
 408:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 409:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 410:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSP_NS(uint32_t topOfMainStack)
 411:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 412:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp_ns, %0" : : "r" (topOfMainStack) : );
 413:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 414:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 415:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 416:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 417:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 418:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 419:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Stack Pointer (non-secure)
ARM GAS  /tmp/ccvX52LM.s 			page 52


 420:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Stack Pointer (SP) when in secure state.
 421:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               SP Register value
 422:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 423:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_SP_NS(void)
 424:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 425:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 426:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 427:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, sp_ns" : "=r" (result) );
 428:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 429:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 430:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 431:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 432:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 433:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Stack Pointer (non-secure)
 434:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Stack Pointer (SP) when in secure state.
 435:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfStack  Stack Pointer value to set
 436:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 437:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_SP_NS(uint32_t topOfStack)
 438:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 439:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR sp_ns, %0" : : "r" (topOfStack) : );
 440:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 441:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 442:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 443:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 444:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 445:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Priority Mask
 446:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 447:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Priority Mask value
 448:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 449:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PRIMASK(void)
 450:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 451:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 452:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 453:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 454:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 455:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 456:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 457:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 458:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 459:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 460:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Priority Mask (non-secure)
 461:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current state of the non-secure priority mask bit from the Priority Mask Reg
 462:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Priority Mask value
 463:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 464:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PRIMASK_NS(void)
 465:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 466:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 467:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 468:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask_ns" : "=r" (result) :: "memory");
 469:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 470:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 471:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 472:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 473:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 474:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 475:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Priority Mask
 476:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
ARM GAS  /tmp/ccvX52LM.s 			page 53


 477:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 478:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 479:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PRIMASK(uint32_t priMask)
 480:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 481:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 482:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 483:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 484:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 485:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 486:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 487:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Priority Mask (non-secure)
 488:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Priority Mask Register when in secure state.
 489:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 490:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 491:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PRIMASK_NS(uint32_t priMask)
 492:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 493:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask_ns, %0" : : "r" (priMask) : "memory");
 494:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 495:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 496:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 497:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 498:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 499:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 500:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 501:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 502:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable FIQ
 503:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables FIQ interrupts by clearing the F-bit in the CPSR.
 504:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 505:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 506:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_fault_irq(void)
 507:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 508:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie f" : : : "memory");
 509:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 510:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 511:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 512:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 513:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable FIQ
 514:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables FIQ interrupts by setting the F-bit in the CPSR.
 515:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 516:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 517:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_fault_irq(void)
 518:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 519:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid f" : : : "memory");
 520:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 521:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 522:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 523:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 524:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Base Priority
 525:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Base Priority register.
 526:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Base Priority register value
 527:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 528:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_BASEPRI(void)
 529:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 530:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 531:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 532:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 533:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
ARM GAS  /tmp/ccvX52LM.s 			page 54


 534:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 535:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 536:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 537:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 538:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 539:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Base Priority (non-secure)
 540:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Base Priority register when in secure state.
 541:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Base Priority register value
 542:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 543:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_BASEPRI_NS(void)
 544:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 545:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 546:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 547:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri_ns" : "=r" (result) );
 548:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 549:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 550:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 551:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 552:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 553:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 554:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority
 555:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register.
 556:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 557:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 558:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI(uint32_t basePri)
 559:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 560:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri, %0" : : "r" (basePri) : "memory");
 561:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 562:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 563:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 564:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 565:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 566:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority (non-secure)
 567:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Base Priority register when in secure state.
 568:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 569:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 570:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_BASEPRI_NS(uint32_t basePri)
 571:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 572:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_ns, %0" : : "r" (basePri) : "memory");
 573:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 574:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 575:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 576:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 577:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 578:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority with condition
 579:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register only if BASEPRI masking is disable
 580:Drivers/CMSIS/Include/cmsis_gcc.h ****            or the new value increases the BASEPRI priority level.
 581:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 582:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 583:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI_MAX(uint32_t basePri)
 584:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 585:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_max, %0" : : "r" (basePri) : "memory");
 586:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 587:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 588:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 589:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 590:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Fault Mask
ARM GAS  /tmp/ccvX52LM.s 			page 55


 591:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Fault Mask register.
 592:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 593:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 594:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FAULTMASK(void)
 595:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 596:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 597:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 598:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask" : "=r" (result) );
 599:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 600:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 601:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 602:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 603:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 604:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 605:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Fault Mask (non-secure)
 606:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Fault Mask register when in secure state.
 607:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 608:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 609:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_FAULTMASK_NS(void)
 610:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 611:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 612:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 613:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask_ns" : "=r" (result) );
 614:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 615:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 616:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 617:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 618:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 619:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 620:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Fault Mask
 621:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Fault Mask register.
 622:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 623:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 624:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FAULTMASK(uint32_t faultMask)
 625:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 626:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask, %0" : : "r" (faultMask) : "memory");
 627:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 628:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 629:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 630:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 631:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 632:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Fault Mask (non-secure)
 633:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Fault Mask register when in secure state.
 634:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 635:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 636:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_FAULTMASK_NS(uint32_t faultMask)
 637:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 638:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask_ns, %0" : : "r" (faultMask) : "memory");
 639:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 640:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 641:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 642:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 643:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 644:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 645:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 646:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 647:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
ARM GAS  /tmp/ccvX52LM.s 			page 56


 648:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 649:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 650:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 651:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit
 652:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 653:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 654:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 655:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 656:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer Limit (PSPLIM).
 657:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSPLIM Register value
 658:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 659:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSPLIM(void)
 660:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 661:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 662:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 663:Drivers/CMSIS/Include/cmsis_gcc.h ****     // without main extensions, the non-secure PSPLIM is RAZ/WI
 664:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 665:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 666:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 667:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim"  : "=r" (result) );
 668:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 669:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 670:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 671:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 672:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3))
 673:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 674:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit (non-secure)
 675:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 676:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
 677:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 678:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer Limit (PSPLIM) when in
 679:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSPLIM Register value
 680:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 681:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSPLIM_NS(void)
 682:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 683:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 684:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 685:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 686:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 687:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 688:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim_ns"  : "=r" (result) );
 689:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 690:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 691:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 692:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 693:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 694:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 695:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 696:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer Limit
 697:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 698:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 699:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 700:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 701:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer Limit (PSPLIM).
 702:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 703:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 704:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSPLIM(uint32_t ProcStackPtrLimit)
ARM GAS  /tmp/ccvX52LM.s 			page 57


 705:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 706:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 707:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 708:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 709:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 710:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 711:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psplim, %0" : : "r" (ProcStackPtrLimit));
 712:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 713:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 714:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 715:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 716:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 717:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 718:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 719:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 720:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
 721:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 722:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer Limit (PSPLIM) when in s
 723:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 724:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 725:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSPLIM_NS(uint32_t ProcStackPtrLimit)
 726:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 727:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 728:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 729:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 730:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 731:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psplim_ns, %0\n" : : "r" (ProcStackPtrLimit));
 732:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 733:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 734:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 735:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 736:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 737:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 738:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit
 739:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 740:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 741:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 742:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 743:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer Limit (MSPLIM).
 744:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSPLIM Register value
 745:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 746:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSPLIM(void)
 747:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 748:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 749:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 750:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 751:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 752:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 753:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 754:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim" : "=r" (result) );
 755:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 756:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 757:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 758:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 759:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 760:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 761:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
ARM GAS  /tmp/ccvX52LM.s 			page 58


 762:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit (non-secure)
 763:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 764:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
 765:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 766:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer Limit(MSPLIM) when in sec
 767:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSPLIM Register value
 768:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 769:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSPLIM_NS(void)
 770:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 771:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 772:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 773:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 774:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 775:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 776:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim_ns" : "=r" (result) );
 777:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 778:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 779:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 780:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 781:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 782:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 783:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 784:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit
 785:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 786:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 787:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 788:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 789:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer Limit (MSPLIM).
 790:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer Limit value to set
 791:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 792:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSPLIM(uint32_t MainStackPtrLimit)
 793:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 794:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 795:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 796:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 797:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)MainStackPtrLimit;
 798:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 799:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msplim, %0" : : "r" (MainStackPtrLimit));
 800:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 801:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 802:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 803:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 804:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 805:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 806:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit (non-secure)
 807:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 808:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
 809:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 810:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer Limit (MSPLIM) when in secu
 811:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer value to set
 812:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 813:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSPLIM_NS(uint32_t MainStackPtrLimit)
 814:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 815:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 816:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 817:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)MainStackPtrLimit;
 818:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
ARM GAS  /tmp/ccvX52LM.s 			page 59


 819:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msplim_ns, %0" : : "r" (MainStackPtrLimit));
 820:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 821:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 822:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 823:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 824:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 825:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 826:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 827:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 828:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 829:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get FPSCR
 830:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Floating Point Status/Control register.
 831:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Floating Point Status/Control register value
 832:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 833:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FPSCR(void)
 834:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 835:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 836:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 837:Drivers/CMSIS/Include/cmsis_gcc.h **** #if __has_builtin(__builtin_arm_get_fpscr) 
 838:Drivers/CMSIS/Include/cmsis_gcc.h **** // Re-enable using built-in when GCC has been fixed
 839:Drivers/CMSIS/Include/cmsis_gcc.h **** // || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >= 2)
 840:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 841:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_arm_get_fpscr();
 842:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 843:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 844:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 845:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMRS %0, fpscr" : "=r" (result) );
 846:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 847:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 848:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 849:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(0U);
 850:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 851:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 852:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 853:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 854:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 855:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set FPSCR
 856:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Floating Point Status/Control register.
 857:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    fpscr  Floating Point Status/Control value to set
 858:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 859:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FPSCR(uint32_t fpscr)
 860:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 861:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 862:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 863:Drivers/CMSIS/Include/cmsis_gcc.h **** #if __has_builtin(__builtin_arm_set_fpscr)
 864:Drivers/CMSIS/Include/cmsis_gcc.h **** // Re-enable using built-in when GCC has been fixed
 865:Drivers/CMSIS/Include/cmsis_gcc.h **** // || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >= 2)
 866:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 867:Drivers/CMSIS/Include/cmsis_gcc.h ****   __builtin_arm_set_fpscr(fpscr);
 868:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 869:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMSR fpscr, %0" : : "r" (fpscr) : "vfpcc", "memory");
 870:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 871:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 872:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)fpscr;
 873:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 874:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 875:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/ccvX52LM.s 			page 60


 876:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 877:Drivers/CMSIS/Include/cmsis_gcc.h **** /*@} end of CMSIS_Core_RegAccFunctions */
 878:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 879:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 880:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 881:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 882:Drivers/CMSIS/Include/cmsis_gcc.h ****   Access to dedicated instructions
 883:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 884:Drivers/CMSIS/Include/cmsis_gcc.h **** */
 885:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 886:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 887:Drivers/CMSIS/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 888:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 889:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 890:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 891:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 892:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 893:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 894:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 895:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 896:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 897:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 898:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 899:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 900:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   No Operation
 901:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 902:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 903:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")
 904:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 905:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 906:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 907:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 908:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 909:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi")
 910:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 911:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 912:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 913:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Event
 914:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 915:Drivers/CMSIS/Include/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 916:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 917:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe")
 918:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 919:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 920:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 921:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Send Event
 922:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 923:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 924:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")
 925:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 926:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 927:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 928:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 929:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 930:Drivers/CMSIS/Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 931:Drivers/CMSIS/Include/cmsis_gcc.h ****            after the instruction has been completed.
 932:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
ARM GAS  /tmp/ccvX52LM.s 			page 61


 933:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __ISB(void)
 934:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 935:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 936:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 937:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 938:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 939:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 940:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 941:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 942:Drivers/CMSIS/Include/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 943:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 944:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DSB(void)
  40              		.loc 3 944 27 view .LVU2
  41              	.LBB7:
 945:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 946:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
  42              		.loc 3 946 3 view .LVU3
  43              		.syntax unified
  44              	@ 946 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
  45 0000 BFF34F8F 		dsb 0xF
  46              	@ 0 "" 2
  47              		.thumb
  48              		.syntax unified
  49              	.LBE7:
  50              	.LBE6:
2451:Drivers/CMSIS/Include/core_cm33.h ****                                                                        buffered write are completed
2452:Drivers/CMSIS/Include/core_cm33.h ****   SCB->AIRCR  = (uint32_t)((0x5FAUL << SCB_AIRCR_VECTKEY_Pos)    |
  51              		.loc 2 2452 3 view .LVU4
2453:Drivers/CMSIS/Include/core_cm33.h ****                            (SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) |
  52              		.loc 2 2453 32 is_stmt 0 view .LVU5
  53 0004 0549     		ldr	r1, .L3
  54 0006 CA68     		ldr	r2, [r1, #12]
  55              		.loc 2 2453 40 view .LVU6
  56 0008 02F4E062 		and	r2, r2, #1792
2452:Drivers/CMSIS/Include/core_cm33.h ****                            (SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) |
  57              		.loc 2 2452 17 view .LVU7
  58 000c 044B     		ldr	r3, .L3+4
  59 000e 1343     		orrs	r3, r3, r2
2452:Drivers/CMSIS/Include/core_cm33.h ****                            (SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) |
  60              		.loc 2 2452 15 view .LVU8
  61 0010 CB60     		str	r3, [r1, #12]
2454:Drivers/CMSIS/Include/core_cm33.h ****                             SCB_AIRCR_SYSRESETREQ_Msk    );         /* Keep priority group unchange
2455:Drivers/CMSIS/Include/core_cm33.h ****   __DSB();                                                          /* Ensure completion of memory 
  62              		.loc 2 2455 3 is_stmt 1 view .LVU9
  63              	.LBB8:
  64              	.LBI8:
 944:Drivers/CMSIS/Include/cmsis_gcc.h **** {
  65              		.loc 3 944 27 view .LVU10
  66              	.LBB9:
  67              		.loc 3 946 3 view .LVU11
  68              		.syntax unified
  69              	@ 946 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
  70 0012 BFF34F8F 		dsb 0xF
  71              	@ 0 "" 2
  72              		.thumb
  73              		.syntax unified
  74              	.L2:
ARM GAS  /tmp/ccvX52LM.s 			page 62


  75              	.LBE9:
  76              	.LBE8:
2456:Drivers/CMSIS/Include/core_cm33.h **** 
2457:Drivers/CMSIS/Include/core_cm33.h ****   for(;;)                                                           /* wait until reset */
  77              		.loc 2 2457 3 discriminator 1 view .LVU12
2458:Drivers/CMSIS/Include/core_cm33.h ****   {
2459:Drivers/CMSIS/Include/core_cm33.h ****     __NOP();
  78              		.loc 2 2459 5 discriminator 1 view .LVU13
  79              		.syntax unified
  80              	@ 2459 "Drivers/CMSIS/Include/core_cm33.h" 1
  81 0016 00BF     		nop
  82              	@ 0 "" 2
2457:Drivers/CMSIS/Include/core_cm33.h ****   {
  83              		.loc 2 2457 3 discriminator 1 view .LVU14
  84              		.thumb
  85              		.syntax unified
  86 0018 FDE7     		b	.L2
  87              	.L4:
  88 001a 00BF     		.align	2
  89              	.L3:
  90 001c 00ED00E0 		.word	-536810240
  91 0020 0400FA05 		.word	100270084
  92              		.cfi_endproc
  93              	.LFE135:
  95              		.section	.text.shell_check_cmd,"ax",%progbits
  96              		.align	1
  97              		.global	shell_check_cmd
  98              		.syntax unified
  99              		.thumb
 100              		.thumb_func
 102              	shell_check_cmd:
 103              	.LVL0:
 104              	.LFB156:
   1:Core/Src/shell.c **** #include "shell.h"
   2:Core/Src/shell.c **** 
   3:Core/Src/shell.c **** extern I2C_HandleTypeDef hi2c1;
   4:Core/Src/shell.c **** extern I2C_HandleTypeDef hi2c2;
   5:Core/Src/shell.c **** 
   6:Core/Src/shell.c **** uint8_t shell_check_cmd(char* cmd, char* str)
   7:Core/Src/shell.c **** {
 105              		.loc 1 7 1 view -0
 106              		.cfi_startproc
 107              		@ args = 0, pretend = 0, frame = 0
 108              		@ frame_needed = 0, uses_anonymous_args = 0
 109              		.loc 1 7 1 is_stmt 0 view .LVU16
 110 0000 08B5     		push	{r3, lr}
 111              	.LCFI0:
 112              		.cfi_def_cfa_offset 8
 113              		.cfi_offset 3, -8
 114              		.cfi_offset 14, -4
   8:Core/Src/shell.c **** 	return (!strcmp(cmd, str));
 115              		.loc 1 8 2 is_stmt 1 view .LVU17
 116              		.loc 1 8 11 is_stmt 0 view .LVU18
 117 0002 FFF7FEFF 		bl	strcmp
 118              	.LVL1:
   9:Core/Src/shell.c **** }
 119              		.loc 1 9 1 view .LVU19
ARM GAS  /tmp/ccvX52LM.s 			page 63


 120 0006 B0FA80F0 		clz	r0, r0
 121 000a 4009     		lsrs	r0, r0, #5
 122 000c 08BD     		pop	{r3, pc}
 123              		.cfi_endproc
 124              	.LFE156:
 126              		.section	.text.shell_reset,"ax",%progbits
 127              		.align	1
 128              		.global	shell_reset
 129              		.syntax unified
 130              		.thumb
 131              		.thumb_func
 133              	shell_reset:
 134              	.LVL2:
 135              	.LFB157:
  10:Core/Src/shell.c **** 
  11:Core/Src/shell.c **** void shell_reset(int argc, char argv[8][16])
  12:Core/Src/shell.c **** {
 136              		.loc 1 12 1 is_stmt 1 view -0
 137              		.cfi_startproc
 138              		@ Volatile: function does not return.
 139              		@ args = 0, pretend = 0, frame = 0
 140              		@ frame_needed = 0, uses_anonymous_args = 0
 141              		.loc 1 12 1 is_stmt 0 view .LVU21
 142 0000 08B5     		push	{r3, lr}
 143              	.LCFI1:
 144              		.cfi_def_cfa_offset 8
 145              		.cfi_offset 3, -8
 146              		.cfi_offset 14, -4
  13:Core/Src/shell.c **** 	NVIC_SystemReset();
 147              		.loc 1 13 2 is_stmt 1 view .LVU22
 148 0002 FFF7FEFF 		bl	__NVIC_SystemReset
 149              	.LVL3:
 150              		.loc 1 13 2 is_stmt 0 view .LVU23
 151              		.cfi_endproc
 152              	.LFE157:
 154              		.section	.rodata.gpio_handler.str1.4,"aMS",%progbits,1
 155              		.align	2
 156              	.LC0:
 157 0000 74657374 		.ascii	"test\000"
 157      00
 158              		.section	.text.gpio_handler,"ax",%progbits
 159              		.align	1
 160              		.global	gpio_handler
 161              		.syntax unified
 162              		.thumb
 163              		.thumb_func
 165              	gpio_handler:
 166              	.LVL4:
 167              	.LFB158:
  14:Core/Src/shell.c **** }
  15:Core/Src/shell.c **** 
  16:Core/Src/shell.c **** void gpio_handler(int argc, char argv[8][16])
  17:Core/Src/shell.c **** {
 168              		.loc 1 17 1 is_stmt 1 view -0
 169              		.cfi_startproc
 170              		@ args = 0, pretend = 0, frame = 0
 171              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccvX52LM.s 			page 64


 172              		.loc 1 17 1 is_stmt 0 view .LVU25
 173 0000 08B5     		push	{r3, lr}
 174              	.LCFI2:
 175              		.cfi_def_cfa_offset 8
 176              		.cfi_offset 3, -8
 177              		.cfi_offset 14, -4
 178 0002 0846     		mov	r0, r1
 179              	.LVL5:
  18:Core/Src/shell.c **** 
  19:Core/Src/shell.c **** 	if(shell_check_cmd(argv[1], "test")) {
 180              		.loc 1 19 2 is_stmt 1 view .LVU26
 181              		.loc 1 19 5 is_stmt 0 view .LVU27
 182 0004 0549     		ldr	r1, .L13
 183              	.LVL6:
 184              		.loc 1 19 5 view .LVU28
 185 0006 1030     		adds	r0, r0, #16
 186              	.LVL7:
 187              		.loc 1 19 5 view .LVU29
 188 0008 FFF7FEFF 		bl	shell_check_cmd
 189              	.LVL8:
 190              		.loc 1 19 4 view .LVU30
 191 000c 00B9     		cbnz	r0, .L12
 192              	.L9:
  20:Core/Src/shell.c **** 		scan_matrix();
  21:Core/Src/shell.c **** 		process_matrix();
  22:Core/Src/shell.c **** 	}
  23:Core/Src/shell.c **** 
  24:Core/Src/shell.c **** }
 193              		.loc 1 24 1 view .LVU31
 194 000e 08BD     		pop	{r3, pc}
 195              	.L12:
  20:Core/Src/shell.c **** 		scan_matrix();
 196              		.loc 1 20 3 is_stmt 1 view .LVU32
 197 0010 FFF7FEFF 		bl	scan_matrix
 198              	.LVL9:
  21:Core/Src/shell.c **** 	}
 199              		.loc 1 21 3 view .LVU33
 200 0014 FFF7FEFF 		bl	process_matrix
 201              	.LVL10:
 202              		.loc 1 24 1 is_stmt 0 view .LVU34
 203 0018 F9E7     		b	.L9
 204              	.L14:
 205 001a 00BF     		.align	2
 206              	.L13:
 207 001c 00000000 		.word	.LC0
 208              		.cfi_endproc
 209              	.LFE158:
 211              		.section	.rodata.i2c_handler.str1.4,"aMS",%progbits,1
 212              		.align	2
 213              	.LC1:
 214 0000 3100     		.ascii	"1\000"
 215 0002 0000     		.align	2
 216              	.LC2:
 217 0004 3200     		.ascii	"2\000"
 218 0006 0000     		.align	2
 219              	.LC3:
 220 0008 5B617375 		.ascii	"[asus]Found %d device(s)\015\012\000"
ARM GAS  /tmp/ccvX52LM.s 			page 65


 220      735D466F 
 220      756E6420 
 220      25642064 
 220      65766963 
 221 0023 00       		.align	2
 222              	.LC4:
 223 0024 5B617375 		.ascii	"[asus]Slave %d found at addr: %d\015\012\000"
 223      735D536C 
 223      61766520 
 223      25642066 
 223      6F756E64 
 224              		.section	.text.i2c_handler,"ax",%progbits
 225              		.align	1
 226              		.global	i2c_handler
 227              		.syntax unified
 228              		.thumb
 229              		.thumb_func
 231              	i2c_handler:
 232              	.LVL11:
 233              	.LFB159:
  25:Core/Src/shell.c **** 
  26:Core/Src/shell.c **** void i2c_handler(int argc, char argv[8][16])
  27:Core/Src/shell.c **** {
 234              		.loc 1 27 1 is_stmt 1 view -0
 235              		.cfi_startproc
 236              		@ args = 0, pretend = 0, frame = 96
 237              		@ frame_needed = 0, uses_anonymous_args = 0
 238              		.loc 1 27 1 is_stmt 0 view .LVU36
 239 0000 70B5     		push	{r4, r5, r6, lr}
 240              	.LCFI3:
 241              		.cfi_def_cfa_offset 16
 242              		.cfi_offset 4, -16
 243              		.cfi_offset 5, -12
 244              		.cfi_offset 6, -8
 245              		.cfi_offset 14, -4
 246 0002 98B0     		sub	sp, sp, #96
 247              	.LCFI4:
 248              		.cfi_def_cfa_offset 112
  28:Core/Src/shell.c **** 	I2C_HandleTypeDef hi2c;
 249              		.loc 1 28 2 is_stmt 1 view .LVU37
  29:Core/Src/shell.c **** 	uint8_t count = 0;
 250              		.loc 1 29 2 view .LVU38
 251              	.LVL12:
  30:Core/Src/shell.c **** 	uint8_t addresses[10];
 252              		.loc 1 30 2 view .LVU39
  31:Core/Src/shell.c **** 
  32:Core/Src/shell.c **** 	if(shell_check_cmd(argv[1], "1")) {
 253              		.loc 1 32 2 view .LVU40
 254              		.loc 1 32 25 is_stmt 0 view .LVU41
 255 0004 01F11004 		add	r4, r1, #16
 256              		.loc 1 32 5 view .LVU42
 257 0008 2049     		ldr	r1, .L25
 258              	.LVL13:
 259              		.loc 1 32 5 view .LVU43
 260 000a 2046     		mov	r0, r4
 261              	.LVL14:
 262              		.loc 1 32 5 view .LVU44
ARM GAS  /tmp/ccvX52LM.s 			page 66


 263 000c FFF7FEFF 		bl	shell_check_cmd
 264              	.LVL15:
 265              		.loc 1 32 4 view .LVU45
 266 0010 38B1     		cbz	r0, .L16
  33:Core/Src/shell.c **** 		memcpy(&hi2c, &hi2c1, sizeof(I2C_HandleTypeDef));
 267              		.loc 1 33 3 is_stmt 1 view .LVU46
 268 0012 5422     		movs	r2, #84
 269 0014 1E49     		ldr	r1, .L25+4
 270 0016 03A8     		add	r0, sp, #12
 271 0018 FFF7FEFF 		bl	memcpy
 272              	.LVL16:
 273              	.L17:
  27:Core/Src/shell.c **** 	I2C_HandleTypeDef hi2c;
 274              		.loc 1 27 1 is_stmt 0 discriminator 1 view .LVU47
 275 001c 0124     		movs	r4, #1
 276              	.LVL17:
  27:Core/Src/shell.c **** 	I2C_HandleTypeDef hi2c;
 277              		.loc 1 27 1 discriminator 1 view .LVU48
 278 001e 0025     		movs	r5, #0
 279 0020 0CE0     		b	.L18
 280              	.L16:
  34:Core/Src/shell.c **** 	}
  35:Core/Src/shell.c **** 	else if(shell_check_cmd(argv[1], "2")) {
 281              		.loc 1 35 7 is_stmt 1 view .LVU49
 282              		.loc 1 35 10 is_stmt 0 view .LVU50
 283 0022 1C49     		ldr	r1, .L25+8
 284 0024 2046     		mov	r0, r4
 285 0026 FFF7FEFF 		bl	shell_check_cmd
 286              	.LVL18:
 287              		.loc 1 35 9 view .LVU51
 288 002a 0028     		cmp	r0, #0
 289 002c F6D0     		beq	.L17
  36:Core/Src/shell.c **** 		memcpy(&hi2c, &hi2c2, sizeof(I2C_HandleTypeDef));
 290              		.loc 1 36 3 is_stmt 1 view .LVU52
 291 002e 5422     		movs	r2, #84
 292 0030 1949     		ldr	r1, .L25+12
 293 0032 03A8     		add	r0, sp, #12
 294 0034 FFF7FEFF 		bl	memcpy
 295              	.LVL19:
 296 0038 F0E7     		b	.L17
 297              	.LVL20:
 298              	.L19:
 299              	.LBB10:
  37:Core/Src/shell.c **** 	}
  38:Core/Src/shell.c **** 
  39:Core/Src/shell.c **** 	for(int i = 1; i < 0xFF; i+=2) {
 300              		.loc 1 39 28 discriminator 2 view .LVU53
 301 003a 0234     		adds	r4, r4, #2
 302              	.LVL21:
 303              	.L18:
 304              		.loc 1 39 19 discriminator 1 view .LVU54
 305 003c FE2C     		cmp	r4, #254
 306 003e 0FDC     		bgt	.L24
  40:Core/Src/shell.c **** 		if(HAL_I2C_IsDeviceReady(&hi2c, i, 3, 100) == HAL_OK) {
 307              		.loc 1 40 3 view .LVU55
 308              		.loc 1 40 6 is_stmt 0 view .LVU56
 309 0040 6423     		movs	r3, #100
ARM GAS  /tmp/ccvX52LM.s 			page 67


 310 0042 0322     		movs	r2, #3
 311 0044 A1B2     		uxth	r1, r4
 312 0046 03A8     		add	r0, sp, #12
 313 0048 FFF7FEFF 		bl	HAL_I2C_IsDeviceReady
 314              	.LVL22:
 315              		.loc 1 40 5 view .LVU57
 316 004c 0028     		cmp	r0, #0
 317 004e F4D1     		bne	.L19
  41:Core/Src/shell.c **** 			addresses[count]=i;
 318              		.loc 1 41 4 is_stmt 1 view .LVU58
 319              		.loc 1 41 20 is_stmt 0 view .LVU59
 320 0050 05F16003 		add	r3, r5, #96
 321 0054 6B44     		add	r3, sp, r3
 322 0056 03F8604C 		strb	r4, [r3, #-96]
  42:Core/Src/shell.c **** 			count++;
 323              		.loc 1 42 4 is_stmt 1 view .LVU60
 324              		.loc 1 42 9 is_stmt 0 view .LVU61
 325 005a 0135     		adds	r5, r5, #1
 326              	.LVL23:
 327              		.loc 1 42 9 view .LVU62
 328 005c EDB2     		uxtb	r5, r5
 329              	.LVL24:
 330              		.loc 1 42 9 view .LVU63
 331 005e ECE7     		b	.L19
 332              	.L24:
 333              		.loc 1 42 9 view .LVU64
 334              	.LBE10:
  43:Core/Src/shell.c **** 		}
  44:Core/Src/shell.c **** 	}
  45:Core/Src/shell.c **** 
  46:Core/Src/shell.c **** 	printf("[asus]Found %d device(s)\r\n", count);
 335              		.loc 1 46 2 is_stmt 1 view .LVU65
 336 0060 2E46     		mov	r6, r5
 337 0062 2946     		mov	r1, r5
 338 0064 0D48     		ldr	r0, .L25+16
 339 0066 FFF7FEFF 		bl	printf
 340              	.LVL25:
  47:Core/Src/shell.c **** 	for(int i = 0; i < count; i++) {
 341              		.loc 1 47 2 view .LVU66
 342              	.LBB11:
 343              		.loc 1 47 6 view .LVU67
 344              		.loc 1 47 10 is_stmt 0 view .LVU68
 345 006a 0024     		movs	r4, #0
 346              	.LVL26:
 347              		.loc 1 47 2 view .LVU69
 348 006c 09E0     		b	.L21
 349              	.LVL27:
 350              	.L22:
  48:Core/Src/shell.c **** 		printf("[asus]Slave %d found at addr: %d\r\n", i, addresses[i]);
 351              		.loc 1 48 3 is_stmt 1 discriminator 3 view .LVU70
 352              		.loc 1 48 62 is_stmt 0 discriminator 3 view .LVU71
 353 006e 04F16003 		add	r3, r4, #96
 354 0072 6B44     		add	r3, sp, r3
 355              		.loc 1 48 3 discriminator 3 view .LVU72
 356 0074 13F8602C 		ldrb	r2, [r3, #-96]	@ zero_extendqisi2
 357 0078 2146     		mov	r1, r4
 358 007a 0948     		ldr	r0, .L25+20
ARM GAS  /tmp/ccvX52LM.s 			page 68


 359 007c FFF7FEFF 		bl	printf
 360              	.LVL28:
  47:Core/Src/shell.c **** 	for(int i = 0; i < count; i++) {
 361              		.loc 1 47 29 is_stmt 1 discriminator 3 view .LVU73
 362 0080 0134     		adds	r4, r4, #1
 363              	.LVL29:
 364              	.L21:
  47:Core/Src/shell.c **** 	for(int i = 0; i < count; i++) {
 365              		.loc 1 47 19 discriminator 1 view .LVU74
 366 0082 A642     		cmp	r6, r4
 367 0084 F3DC     		bgt	.L22
 368              	.LBE11:
  49:Core/Src/shell.c **** 	}
  50:Core/Src/shell.c **** }
 369              		.loc 1 50 1 is_stmt 0 view .LVU75
 370 0086 18B0     		add	sp, sp, #96
 371              	.LCFI5:
 372              		.cfi_def_cfa_offset 16
 373              		@ sp needed
 374 0088 70BD     		pop	{r4, r5, r6, pc}
 375              	.LVL30:
 376              	.L26:
 377              		.loc 1 50 1 view .LVU76
 378 008a 00BF     		.align	2
 379              	.L25:
 380 008c 00000000 		.word	.LC1
 381 0090 00000000 		.word	hi2c1
 382 0094 04000000 		.word	.LC2
 383 0098 00000000 		.word	hi2c2
 384 009c 08000000 		.word	.LC3
 385 00a0 24000000 		.word	.LC4
 386              		.cfi_endproc
 387              	.LFE159:
 389              		.section	.rodata.leds_handler.str1.4,"aMS",%progbits,1
 390              		.align	2
 391              	.LC5:
 392 0000 696E6974 		.ascii	"init\000"
 392      00
 393 0005 000000   		.align	2
 394              	.LC6:
 395 0008 5B617375 		.ascii	"[asus]Init ok\015\000"
 395      735D496E 
 395      6974206F 
 395      6B0D00
 396 0017 00       		.align	2
 397              	.LC7:
 398 0018 6F6E00   		.ascii	"on\000"
 399 001b 00       		.align	2
 400              	.LC8:
 401 001c 6F666600 		.ascii	"off\000"
 402              		.align	2
 403              	.LC9:
 404 0020 6100     		.ascii	"a\000"
 405 0022 0000     		.align	2
 406              	.LC10:
 407 0024 7A00     		.ascii	"z\000"
 408              		.section	.text.leds_handler,"ax",%progbits
ARM GAS  /tmp/ccvX52LM.s 			page 69


 409              		.align	1
 410              		.global	leds_handler
 411              		.syntax unified
 412              		.thumb
 413              		.thumb_func
 415              	leds_handler:
 416              	.LVL31:
 417              	.LFB160:
  51:Core/Src/shell.c **** 
  52:Core/Src/shell.c **** void leds_handler(int argc, char argv[8][16])
  53:Core/Src/shell.c **** {
 418              		.loc 1 53 1 is_stmt 1 view -0
 419              		.cfi_startproc
 420              		@ args = 0, pretend = 0, frame = 88
 421              		@ frame_needed = 0, uses_anonymous_args = 0
 422              		.loc 1 53 1 is_stmt 0 view .LVU78
 423 0000 30B5     		push	{r4, r5, lr}
 424              	.LCFI6:
 425              		.cfi_def_cfa_offset 12
 426              		.cfi_offset 4, -12
 427              		.cfi_offset 5, -8
 428              		.cfi_offset 14, -4
 429 0002 97B0     		sub	sp, sp, #92
 430              	.LCFI7:
 431              		.cfi_def_cfa_offset 104
 432 0004 0D46     		mov	r5, r1
  54:Core/Src/shell.c **** 	I2C_HandleTypeDef hi2c;
 433              		.loc 1 54 2 is_stmt 1 view .LVU79
  55:Core/Src/shell.c **** 	uint8_t count = 0;
 434              		.loc 1 55 2 view .LVU80
 435              	.LVL32:
  56:Core/Src/shell.c **** 	uint8_t addresses[10];
 436              		.loc 1 56 2 view .LVU81
  57:Core/Src/shell.c **** 	uint8_t led;
 437              		.loc 1 57 2 view .LVU82
  58:Core/Src/shell.c **** 
  59:Core/Src/shell.c **** 	if(shell_check_cmd(argv[1], "init")) {
 438              		.loc 1 59 2 view .LVU83
 439              		.loc 1 59 25 is_stmt 0 view .LVU84
 440 0006 01F11004 		add	r4, r1, #16
 441              		.loc 1 59 5 view .LVU85
 442 000a 3649     		ldr	r1, .L40
 443              	.LVL33:
 444              		.loc 1 59 5 view .LVU86
 445 000c 2046     		mov	r0, r4
 446              	.LVL34:
 447              		.loc 1 59 5 view .LVU87
 448 000e FFF7FEFF 		bl	shell_check_cmd
 449              	.LVL35:
 450              		.loc 1 59 4 view .LVU88
 451 0012 58B9     		cbnz	r0, .L38
  60:Core/Src/shell.c **** 		IS31FL3737_init(161);
  61:Core/Src/shell.c **** 		IS31FL3737_init(191);
  62:Core/Src/shell.c **** 		printf("[asus]Init ok\r\n");
  63:Core/Src/shell.c **** 	}
  64:Core/Src/shell.c **** 	else if(shell_check_cmd(argv[1], "on")) {
 452              		.loc 1 64 7 is_stmt 1 view .LVU89
ARM GAS  /tmp/ccvX52LM.s 			page 70


 453              		.loc 1 64 10 is_stmt 0 view .LVU90
 454 0014 3449     		ldr	r1, .L40+4
 455 0016 2046     		mov	r0, r4
 456 0018 FFF7FEFF 		bl	shell_check_cmd
 457              	.LVL36:
 458              		.loc 1 64 9 view .LVU91
 459 001c 80B1     		cbz	r0, .L30
  65:Core/Src/shell.c **** 		memcpy(&hi2c, &hi2c1, sizeof(I2C_HandleTypeDef));
 460              		.loc 1 65 3 is_stmt 1 view .LVU92
 461 001e 5422     		movs	r2, #84
 462 0020 3249     		ldr	r1, .L40+8
 463 0022 01A8     		add	r0, sp, #4
 464 0024 FFF7FEFF 		bl	memcpy
 465              	.LVL37:
 466              	.L27:
  66:Core/Src/shell.c **** 	}
  67:Core/Src/shell.c **** 	else if(shell_check_cmd(argv[1], "off")) {
  68:Core/Src/shell.c **** 		memcpy(&hi2c, &hi2c2, sizeof(I2C_HandleTypeDef));
  69:Core/Src/shell.c **** 	}
  70:Core/Src/shell.c **** 	else if(shell_check_cmd(argv[1], "a")) {
  71:Core/Src/shell.c **** 		// Unlock the command register.
  72:Core/Src/shell.c ****     IS31FL3737_write_register(161, 0xFE, 0xC5);
  73:Core/Src/shell.c **** 
  74:Core/Src/shell.c ****     // Select PG1
  75:Core/Src/shell.c ****     IS31FL3737_write_register(161, 0xFD, 0x01);
  76:Core/Src/shell.c **** 
  77:Core/Src/shell.c ****     for (int i = 0x00; i <= 0xBF; i++) {
  78:Core/Src/shell.c ****         IS31FL3737_write_register(161, i, 0x00);
  79:Core/Src/shell.c ****     }
  80:Core/Src/shell.c **** 
  81:Core/Src/shell.c **** 		led = atoi(argv[2]);
  82:Core/Src/shell.c **** 
  83:Core/Src/shell.c **** 		IS31FL3737_write_register(161, led, 0xFF);
  84:Core/Src/shell.c **** 	}
  85:Core/Src/shell.c **** 	else if(shell_check_cmd(argv[1], "z")) {
  86:Core/Src/shell.c **** 		// Unlock the command register.
  87:Core/Src/shell.c ****     IS31FL3737_write_register(191, 0xFE, 0xC5);
  88:Core/Src/shell.c **** 
  89:Core/Src/shell.c ****     // Select PG1
  90:Core/Src/shell.c ****     IS31FL3737_write_register(191, 0xFD, 0x01);
  91:Core/Src/shell.c **** 
  92:Core/Src/shell.c ****     for (int i = 0x00; i <= 0xBF; i++) {
  93:Core/Src/shell.c ****         IS31FL3737_write_register(191, i, 0x00);
  94:Core/Src/shell.c ****     }
  95:Core/Src/shell.c **** 
  96:Core/Src/shell.c **** 		led = atoi(argv[2]);
  97:Core/Src/shell.c **** 
  98:Core/Src/shell.c **** 		IS31FL3737_write_register(191, led, 0xFF);
  99:Core/Src/shell.c **** 	}
 100:Core/Src/shell.c **** 
 101:Core/Src/shell.c **** 
 102:Core/Src/shell.c **** }
 467              		.loc 1 102 1 is_stmt 0 view .LVU93
 468 0028 17B0     		add	sp, sp, #92
 469              	.LCFI8:
 470              		.cfi_remember_state
 471              		.cfi_def_cfa_offset 12
ARM GAS  /tmp/ccvX52LM.s 			page 71


 472              		@ sp needed
 473 002a 30BD     		pop	{r4, r5, pc}
 474              	.LVL38:
 475              	.L38:
 476              	.LCFI9:
 477              		.cfi_restore_state
  60:Core/Src/shell.c **** 		IS31FL3737_init(191);
 478              		.loc 1 60 3 is_stmt 1 view .LVU94
 479 002c A120     		movs	r0, #161
 480 002e FFF7FEFF 		bl	IS31FL3737_init
 481              	.LVL39:
  61:Core/Src/shell.c **** 		printf("[asus]Init ok\r\n");
 482              		.loc 1 61 3 view .LVU95
 483 0032 BF20     		movs	r0, #191
 484 0034 FFF7FEFF 		bl	IS31FL3737_init
 485              	.LVL40:
  62:Core/Src/shell.c **** 	}
 486              		.loc 1 62 3 view .LVU96
 487 0038 2D48     		ldr	r0, .L40+12
 488 003a FFF7FEFF 		bl	puts
 489              	.LVL41:
 490 003e F3E7     		b	.L27
 491              	.L30:
  67:Core/Src/shell.c **** 		memcpy(&hi2c, &hi2c2, sizeof(I2C_HandleTypeDef));
 492              		.loc 1 67 7 view .LVU97
  67:Core/Src/shell.c **** 		memcpy(&hi2c, &hi2c2, sizeof(I2C_HandleTypeDef));
 493              		.loc 1 67 10 is_stmt 0 view .LVU98
 494 0040 2C49     		ldr	r1, .L40+16
 495 0042 2046     		mov	r0, r4
 496 0044 FFF7FEFF 		bl	shell_check_cmd
 497              	.LVL42:
  67:Core/Src/shell.c **** 		memcpy(&hi2c, &hi2c2, sizeof(I2C_HandleTypeDef));
 498              		.loc 1 67 9 view .LVU99
 499 0048 28B1     		cbz	r0, .L31
  68:Core/Src/shell.c **** 	}
 500              		.loc 1 68 3 is_stmt 1 view .LVU100
 501 004a 5422     		movs	r2, #84
 502 004c 2A49     		ldr	r1, .L40+20
 503 004e 01A8     		add	r0, sp, #4
 504 0050 FFF7FEFF 		bl	memcpy
 505              	.LVL43:
 506 0054 E8E7     		b	.L27
 507              	.L31:
  70:Core/Src/shell.c **** 		// Unlock the command register.
 508              		.loc 1 70 7 view .LVU101
  70:Core/Src/shell.c **** 		// Unlock the command register.
 509              		.loc 1 70 10 is_stmt 0 view .LVU102
 510 0056 2949     		ldr	r1, .L40+24
 511 0058 2046     		mov	r0, r4
 512 005a FFF7FEFF 		bl	shell_check_cmd
 513              	.LVL44:
  70:Core/Src/shell.c **** 		// Unlock the command register.
 514              		.loc 1 70 9 view .LVU103
 515 005e 88B9     		cbnz	r0, .L39
  85:Core/Src/shell.c **** 		// Unlock the command register.
 516              		.loc 1 85 7 is_stmt 1 view .LVU104
  85:Core/Src/shell.c **** 		// Unlock the command register.
ARM GAS  /tmp/ccvX52LM.s 			page 72


 517              		.loc 1 85 10 is_stmt 0 view .LVU105
 518 0060 2749     		ldr	r1, .L40+28
 519 0062 2046     		mov	r0, r4
 520 0064 FFF7FEFF 		bl	shell_check_cmd
 521              	.LVL45:
  85:Core/Src/shell.c **** 		// Unlock the command register.
 522              		.loc 1 85 9 view .LVU106
 523 0068 0028     		cmp	r0, #0
 524 006a DDD0     		beq	.L27
  87:Core/Src/shell.c **** 
 525              		.loc 1 87 5 is_stmt 1 view .LVU107
 526 006c C522     		movs	r2, #197
 527 006e FE21     		movs	r1, #254
 528 0070 BF20     		movs	r0, #191
 529 0072 FFF7FEFF 		bl	IS31FL3737_write_register
 530              	.LVL46:
  90:Core/Src/shell.c **** 
 531              		.loc 1 90 5 view .LVU108
 532 0076 0122     		movs	r2, #1
 533 0078 FD21     		movs	r1, #253
 534 007a BF20     		movs	r0, #191
 535 007c FFF7FEFF 		bl	IS31FL3737_write_register
 536              	.LVL47:
  92:Core/Src/shell.c ****         IS31FL3737_write_register(191, i, 0x00);
 537              		.loc 1 92 5 view .LVU109
 538              	.LBB12:
  92:Core/Src/shell.c ****         IS31FL3737_write_register(191, i, 0x00);
 539              		.loc 1 92 10 view .LVU110
  92:Core/Src/shell.c ****         IS31FL3737_write_register(191, i, 0x00);
 540              		.loc 1 92 14 is_stmt 0 view .LVU111
 541 0080 0024     		movs	r4, #0
  92:Core/Src/shell.c ****         IS31FL3737_write_register(191, i, 0x00);
 542              		.loc 1 92 5 view .LVU112
 543 0082 23E0     		b	.L35
 544              	.LVL48:
 545              	.L39:
  92:Core/Src/shell.c ****         IS31FL3737_write_register(191, i, 0x00);
 546              		.loc 1 92 5 view .LVU113
 547              	.LBE12:
  72:Core/Src/shell.c **** 
 548              		.loc 1 72 5 is_stmt 1 view .LVU114
 549 0084 C522     		movs	r2, #197
 550 0086 FE21     		movs	r1, #254
 551 0088 A120     		movs	r0, #161
 552 008a FFF7FEFF 		bl	IS31FL3737_write_register
 553              	.LVL49:
  75:Core/Src/shell.c **** 
 554              		.loc 1 75 5 view .LVU115
 555 008e 0122     		movs	r2, #1
 556 0090 FD21     		movs	r1, #253
 557 0092 A120     		movs	r0, #161
 558 0094 FFF7FEFF 		bl	IS31FL3737_write_register
 559              	.LVL50:
  77:Core/Src/shell.c ****         IS31FL3737_write_register(161, i, 0x00);
 560              		.loc 1 77 5 view .LVU116
 561              	.LBB13:
  77:Core/Src/shell.c ****         IS31FL3737_write_register(161, i, 0x00);
ARM GAS  /tmp/ccvX52LM.s 			page 73


 562              		.loc 1 77 10 view .LVU117
  77:Core/Src/shell.c ****         IS31FL3737_write_register(161, i, 0x00);
 563              		.loc 1 77 14 is_stmt 0 view .LVU118
 564 0098 0024     		movs	r4, #0
  77:Core/Src/shell.c ****         IS31FL3737_write_register(161, i, 0x00);
 565              		.loc 1 77 5 view .LVU119
 566 009a 05E0     		b	.L33
 567              	.LVL51:
 568              	.L34:
  78:Core/Src/shell.c ****     }
 569              		.loc 1 78 9 is_stmt 1 discriminator 3 view .LVU120
 570 009c 0022     		movs	r2, #0
 571 009e E1B2     		uxtb	r1, r4
 572 00a0 A120     		movs	r0, #161
 573 00a2 FFF7FEFF 		bl	IS31FL3737_write_register
 574              	.LVL52:
  77:Core/Src/shell.c ****         IS31FL3737_write_register(161, i, 0x00);
 575              		.loc 1 77 36 discriminator 3 view .LVU121
 576 00a6 0134     		adds	r4, r4, #1
 577              	.LVL53:
 578              	.L33:
  77:Core/Src/shell.c ****         IS31FL3737_write_register(161, i, 0x00);
 579              		.loc 1 77 26 discriminator 1 view .LVU122
 580 00a8 BF2C     		cmp	r4, #191
 581 00aa F7DD     		ble	.L34
 582              	.LBE13:
  81:Core/Src/shell.c **** 
 583              		.loc 1 81 3 view .LVU123
  81:Core/Src/shell.c **** 
 584              		.loc 1 81 9 is_stmt 0 view .LVU124
 585 00ac 05F12000 		add	r0, r5, #32
 586 00b0 FFF7FEFF 		bl	atoi
 587              	.LVL54:
  83:Core/Src/shell.c **** 	}
 588              		.loc 1 83 3 is_stmt 1 view .LVU125
 589 00b4 FF22     		movs	r2, #255
 590 00b6 C1B2     		uxtb	r1, r0
 591 00b8 A120     		movs	r0, #161
 592              	.LVL55:
  83:Core/Src/shell.c **** 	}
 593              		.loc 1 83 3 is_stmt 0 view .LVU126
 594 00ba FFF7FEFF 		bl	IS31FL3737_write_register
 595              	.LVL56:
  83:Core/Src/shell.c **** 	}
 596              		.loc 1 83 3 view .LVU127
 597 00be B3E7     		b	.L27
 598              	.LVL57:
 599              	.L36:
 600              	.LBB14:
  93:Core/Src/shell.c ****     }
 601              		.loc 1 93 9 is_stmt 1 discriminator 3 view .LVU128
 602 00c0 0022     		movs	r2, #0
 603 00c2 E1B2     		uxtb	r1, r4
 604 00c4 BF20     		movs	r0, #191
 605 00c6 FFF7FEFF 		bl	IS31FL3737_write_register
 606              	.LVL58:
  92:Core/Src/shell.c ****         IS31FL3737_write_register(191, i, 0x00);
ARM GAS  /tmp/ccvX52LM.s 			page 74


 607              		.loc 1 92 36 discriminator 3 view .LVU129
 608 00ca 0134     		adds	r4, r4, #1
 609              	.LVL59:
 610              	.L35:
  92:Core/Src/shell.c ****         IS31FL3737_write_register(191, i, 0x00);
 611              		.loc 1 92 26 discriminator 1 view .LVU130
 612 00cc BF2C     		cmp	r4, #191
 613 00ce F7DD     		ble	.L36
 614              	.LBE14:
  96:Core/Src/shell.c **** 
 615              		.loc 1 96 3 view .LVU131
  96:Core/Src/shell.c **** 
 616              		.loc 1 96 9 is_stmt 0 view .LVU132
 617 00d0 05F12000 		add	r0, r5, #32
 618 00d4 FFF7FEFF 		bl	atoi
 619              	.LVL60:
  98:Core/Src/shell.c **** 	}
 620              		.loc 1 98 3 is_stmt 1 view .LVU133
 621 00d8 FF22     		movs	r2, #255
 622 00da C1B2     		uxtb	r1, r0
 623 00dc BF20     		movs	r0, #191
 624              	.LVL61:
  98:Core/Src/shell.c **** 	}
 625              		.loc 1 98 3 is_stmt 0 view .LVU134
 626 00de FFF7FEFF 		bl	IS31FL3737_write_register
 627              	.LVL62:
 628              		.loc 1 102 1 view .LVU135
 629 00e2 A1E7     		b	.L27
 630              	.L41:
 631              		.align	2
 632              	.L40:
 633 00e4 00000000 		.word	.LC5
 634 00e8 18000000 		.word	.LC7
 635 00ec 00000000 		.word	hi2c1
 636 00f0 08000000 		.word	.LC6
 637 00f4 1C000000 		.word	.LC8
 638 00f8 00000000 		.word	hi2c2
 639 00fc 20000000 		.word	.LC9
 640 0100 24000000 		.word	.LC10
 641              		.cfi_endproc
 642              	.LFE160:
 644              		.section	.rodata.shell_process_cmd.str1.4,"aMS",%progbits,1
 645              		.align	2
 646              	.LC11:
 647 0000 72657365 		.ascii	"reset\000"
 647      7400
 648 0006 0000     		.align	2
 649              	.LC12:
 650 0008 7200     		.ascii	"r\000"
 651 000a 0000     		.align	2
 652              	.LC13:
 653 000c 7100     		.ascii	"q\000"
 654 000e 0000     		.align	2
 655              	.LC14:
 656 0010 69326300 		.ascii	"i2c\000"
 657              		.align	2
 658              	.LC15:
ARM GAS  /tmp/ccvX52LM.s 			page 75


 659 0014 6770696F 		.ascii	"gpio\000"
 659      00
 660 0019 000000   		.align	2
 661              	.LC16:
 662 001c 6C656473 		.ascii	"leds\000"
 662      00
 663              		.section	.text.shell_process_cmd,"ax",%progbits
 664              		.align	1
 665              		.global	shell_process_cmd
 666              		.syntax unified
 667              		.thumb
 668              		.thumb_func
 670              	shell_process_cmd:
 671              	.LVL63:
 672              	.LFB161:
 103:Core/Src/shell.c **** 
 104:Core/Src/shell.c **** uint8_t shell_process_cmd(char* cmd)
 105:Core/Src/shell.c **** {
 673              		.loc 1 105 1 is_stmt 1 view -0
 674              		.cfi_startproc
 675              		@ args = 0, pretend = 0, frame = 128
 676              		@ frame_needed = 0, uses_anonymous_args = 0
 677              		.loc 1 105 1 is_stmt 0 view .LVU137
 678 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 679              	.LCFI10:
 680              		.cfi_def_cfa_offset 20
 681              		.cfi_offset 4, -20
 682              		.cfi_offset 5, -16
 683              		.cfi_offset 6, -12
 684              		.cfi_offset 7, -8
 685              		.cfi_offset 14, -4
 686 0002 A1B0     		sub	sp, sp, #132
 687              	.LCFI11:
 688              		.cfi_def_cfa_offset 152
 106:Core/Src/shell.c ****   int i=0;
 689              		.loc 1 106 3 is_stmt 1 view .LVU138
 690              	.LVL64:
 107:Core/Src/shell.c ****   int j=0;
 691              		.loc 1 107 3 view .LVU139
 108:Core/Src/shell.c ****   int k=0;
 692              		.loc 1 108 3 view .LVU140
 693              		.loc 1 108 7 is_stmt 0 view .LVU141
 694 0004 0023     		movs	r3, #0
 107:Core/Src/shell.c ****   int j=0;
 695              		.loc 1 107 7 view .LVU142
 696 0006 9E46     		mov	lr, r3
 106:Core/Src/shell.c ****   int i=0;
 697              		.loc 1 106 7 view .LVU143
 698 0008 1946     		mov	r1, r3
 699 000a 3DE0     		b	.L48
 700              	.LVL65:
 701              	.L58:
 109:Core/Src/shell.c ****   char bdown[8][16];
 110:Core/Src/shell.c **** 
 111:Core/Src/shell.c ****   while(1) {
 112:Core/Src/shell.c ****     if (cmd[i] == '\0') {
 113:Core/Src/shell.c ****       bdown[j][k] = '\0';
ARM GAS  /tmp/ccvX52LM.s 			page 76


 702              		.loc 1 113 7 is_stmt 1 view .LVU144
 703              		.loc 1 113 19 is_stmt 0 view .LVU145
 704 000c 20AA     		add	r2, sp, #128
 705 000e 02EB0E12 		add	r2, r2, lr, lsl #4
 706 0012 1344     		add	r3, r3, r2
 707              	.LVL66:
 708              		.loc 1 113 19 view .LVU146
 709 0014 0022     		movs	r2, #0
 710 0016 03F8802C 		strb	r2, [r3, #-128]
 114:Core/Src/shell.c ****       break;
 711              		.loc 1 114 7 is_stmt 1 view .LVU147
 115:Core/Src/shell.c ****     }
 116:Core/Src/shell.c **** 
 117:Core/Src/shell.c ****     if (cmd[i] == ' ') {
 118:Core/Src/shell.c ****       bdown[j][k] = '\0';
 119:Core/Src/shell.c ****       j++;
 120:Core/Src/shell.c ****       k=0;
 121:Core/Src/shell.c ****     } else {
 122:Core/Src/shell.c ****       bdown[j][k] = cmd[i];
 123:Core/Src/shell.c ****       k++;
 124:Core/Src/shell.c ****     }
 125:Core/Src/shell.c ****     i++;
 126:Core/Src/shell.c ****   }
 127:Core/Src/shell.c ****   j++;
 712              		.loc 1 127 3 view .LVU148
 713              		.loc 1 127 4 is_stmt 0 view .LVU149
 714 001a 0EF10104 		add	r4, lr, #1
 715              	.LVL67:
 128:Core/Src/shell.c **** 
 129:Core/Src/shell.c **** 	if ((	shell_check_cmd(bdown[0], "reset") ||
 716              		.loc 1 129 2 is_stmt 1 view .LVU150
 717              		.loc 1 129 8 is_stmt 0 view .LVU151
 718 001e 2A49     		ldr	r1, .L60
 719              	.LVL68:
 720              		.loc 1 129 8 view .LVU152
 721 0020 6846     		mov	r0, sp
 722              	.LVL69:
 723              		.loc 1 129 8 view .LVU153
 724 0022 FFF7FEFF 		bl	shell_check_cmd
 725              	.LVL70:
 726              		.loc 1 129 5 view .LVU154
 727 0026 0028     		cmp	r0, #0
 728 0028 3BD1     		bne	.L44
 130:Core/Src/shell.c **** 				shell_check_cmd(bdown[0], "r"))) {
 729              		.loc 1 130 5 discriminator 1 view .LVU155
 730 002a 2849     		ldr	r1, .L60+4
 731 002c 6846     		mov	r0, sp
 732 002e FFF7FEFF 		bl	shell_check_cmd
 733              	.LVL71:
 129:Core/Src/shell.c **** 				shell_check_cmd(bdown[0], "r"))) {
 734              		.loc 1 129 43 discriminator 1 view .LVU156
 735 0032 0028     		cmp	r0, #0
 736 0034 35D1     		bne	.L44
 131:Core/Src/shell.c ****     shell_reset(j, bdown);
 132:Core/Src/shell.c ****   }
 133:Core/Src/shell.c **** 	else if(shell_check_cmd(bdown[0], "q")) {
 737              		.loc 1 133 7 is_stmt 1 view .LVU157
ARM GAS  /tmp/ccvX52LM.s 			page 77


 738              		.loc 1 133 10 is_stmt 0 view .LVU158
 739 0036 2649     		ldr	r1, .L60+8
 740 0038 6846     		mov	r0, sp
 741 003a FFF7FEFF 		bl	shell_check_cmd
 742              	.LVL72:
 743              		.loc 1 133 9 view .LVU159
 744 003e 0546     		mov	r5, r0
 745 0040 0028     		cmp	r0, #0
 746 0042 3DD1     		bne	.L53
 134:Core/Src/shell.c **** 		return 1;
 135:Core/Src/shell.c **** 	}
 136:Core/Src/shell.c **** 	else if(shell_check_cmd(bdown[0], "i2c")) {
 747              		.loc 1 136 7 is_stmt 1 view .LVU160
 748              		.loc 1 136 10 is_stmt 0 view .LVU161
 749 0044 2349     		ldr	r1, .L60+12
 750 0046 6846     		mov	r0, sp
 751 0048 FFF7FEFF 		bl	shell_check_cmd
 752              	.LVL73:
 753              		.loc 1 136 9 view .LVU162
 754 004c 0646     		mov	r6, r0
 755 004e 60BB     		cbnz	r0, .L56
 137:Core/Src/shell.c **** 		i2c_handler(j, bdown);
 138:Core/Src/shell.c **** 	}
 139:Core/Src/shell.c **** 	else if(shell_check_cmd(bdown[0], "gpio")) {
 756              		.loc 1 139 7 is_stmt 1 view .LVU163
 757              		.loc 1 139 10 is_stmt 0 view .LVU164
 758 0050 2149     		ldr	r1, .L60+16
 759 0052 6846     		mov	r0, sp
 760 0054 FFF7FEFF 		bl	shell_check_cmd
 761              	.LVL74:
 762              		.loc 1 139 9 view .LVU165
 763 0058 0746     		mov	r7, r0
 764 005a 58BB     		cbnz	r0, .L57
 140:Core/Src/shell.c **** 		gpio_handler(j, bdown);
 141:Core/Src/shell.c **** 	}
 142:Core/Src/shell.c **** 	else if(shell_check_cmd(bdown[0], "leds")) {
 765              		.loc 1 142 7 is_stmt 1 view .LVU166
 766              		.loc 1 142 10 is_stmt 0 view .LVU167
 767 005c 1F49     		ldr	r1, .L60+20
 768 005e 6846     		mov	r0, sp
 769 0060 FFF7FEFF 		bl	shell_check_cmd
 770              	.LVL75:
 771              		.loc 1 142 9 view .LVU168
 772 0064 0546     		mov	r5, r0
 773 0066 60B3     		cbz	r0, .L50
 143:Core/Src/shell.c **** 		leds_handler(j, bdown);
 774              		.loc 1 143 3 is_stmt 1 view .LVU169
 775 0068 6946     		mov	r1, sp
 776 006a 2046     		mov	r0, r4
 777 006c FFF7FEFF 		bl	leds_handler
 778              	.LVL76:
 144:Core/Src/shell.c **** 	}
 145:Core/Src/shell.c **** 
 146:Core/Src/shell.c **** 	return 0;
 779              		.loc 1 146 9 is_stmt 0 view .LVU170
 780 0070 3D46     		mov	r5, r7
 781 0072 26E0     		b	.L50
ARM GAS  /tmp/ccvX52LM.s 			page 78


 782              	.LVL77:
 783              	.L59:
 118:Core/Src/shell.c ****       j++;
 784              		.loc 1 118 7 is_stmt 1 view .LVU171
 118:Core/Src/shell.c ****       j++;
 785              		.loc 1 118 19 is_stmt 0 view .LVU172
 786 0074 20AA     		add	r2, sp, #128
 787 0076 02EB0E12 		add	r2, r2, lr, lsl #4
 788 007a 1A44     		add	r2, r2, r3
 789 007c 0023     		movs	r3, #0
 790              	.LVL78:
 118:Core/Src/shell.c ****       j++;
 791              		.loc 1 118 19 view .LVU173
 792 007e 02F8803C 		strb	r3, [r2, #-128]
 119:Core/Src/shell.c ****       k=0;
 793              		.loc 1 119 7 is_stmt 1 view .LVU174
 119:Core/Src/shell.c ****       k=0;
 794              		.loc 1 119 8 is_stmt 0 view .LVU175
 795 0082 0EF1010E 		add	lr, lr, #1
 796              	.LVL79:
 120:Core/Src/shell.c ****     } else {
 797              		.loc 1 120 7 is_stmt 1 view .LVU176
 798              	.L47:
 125:Core/Src/shell.c ****   }
 799              		.loc 1 125 5 view .LVU177
 125:Core/Src/shell.c ****   }
 800              		.loc 1 125 6 is_stmt 0 view .LVU178
 801 0086 0131     		adds	r1, r1, #1
 802              	.LVL80:
 111:Core/Src/shell.c ****     if (cmd[i] == '\0') {
 803              		.loc 1 111 8 is_stmt 1 view .LVU179
 804              	.L48:
 109:Core/Src/shell.c **** 
 805              		.loc 1 109 3 view .LVU180
 111:Core/Src/shell.c ****     if (cmd[i] == '\0') {
 806              		.loc 1 111 3 view .LVU181
 112:Core/Src/shell.c ****       bdown[j][k] = '\0';
 807              		.loc 1 112 5 view .LVU182
 112:Core/Src/shell.c ****       bdown[j][k] = '\0';
 808              		.loc 1 112 12 is_stmt 0 view .LVU183
 809 0088 425C     		ldrb	r2, [r0, r1]	@ zero_extendqisi2
 112:Core/Src/shell.c ****       bdown[j][k] = '\0';
 810              		.loc 1 112 8 view .LVU184
 811 008a 002A     		cmp	r2, #0
 812 008c BED0     		beq	.L58
 117:Core/Src/shell.c ****       bdown[j][k] = '\0';
 813              		.loc 1 117 5 is_stmt 1 view .LVU185
 117:Core/Src/shell.c ****       bdown[j][k] = '\0';
 814              		.loc 1 117 8 is_stmt 0 view .LVU186
 815 008e 202A     		cmp	r2, #32
 816 0090 F0D0     		beq	.L59
 122:Core/Src/shell.c ****       k++;
 817              		.loc 1 122 7 is_stmt 1 view .LVU187
 122:Core/Src/shell.c ****       k++;
 818              		.loc 1 122 19 is_stmt 0 view .LVU188
 819 0092 20AC     		add	r4, sp, #128
 820 0094 04EB0E1C 		add	ip, r4, lr, lsl #4
ARM GAS  /tmp/ccvX52LM.s 			page 79


 821 0098 9C44     		add	ip, ip, r3
 822 009a 0CF8802C 		strb	r2, [ip, #-128]
 123:Core/Src/shell.c ****     }
 823              		.loc 1 123 7 is_stmt 1 view .LVU189
 123:Core/Src/shell.c ****     }
 824              		.loc 1 123 8 is_stmt 0 view .LVU190
 825 009e 0133     		adds	r3, r3, #1
 826              	.LVL81:
 123:Core/Src/shell.c ****     }
 827              		.loc 1 123 8 view .LVU191
 828 00a0 F1E7     		b	.L47
 829              	.LVL82:
 830              	.L44:
 131:Core/Src/shell.c ****   }
 831              		.loc 1 131 5 is_stmt 1 view .LVU192
 832 00a2 6946     		mov	r1, sp
 833 00a4 2046     		mov	r0, r4
 834 00a6 FFF7FEFF 		bl	shell_reset
 835              	.LVL83:
 836              	.L56:
 137:Core/Src/shell.c **** 	}
 837              		.loc 1 137 3 view .LVU193
 838 00aa 6946     		mov	r1, sp
 839 00ac 2046     		mov	r0, r4
 840 00ae FFF7FEFF 		bl	i2c_handler
 841              	.LVL84:
 842 00b2 06E0     		b	.L50
 843              	.L57:
 140:Core/Src/shell.c **** 	}
 844              		.loc 1 140 3 view .LVU194
 845 00b4 6946     		mov	r1, sp
 846 00b6 2046     		mov	r0, r4
 847 00b8 FFF7FEFF 		bl	gpio_handler
 848              	.LVL85:
 849              		.loc 1 146 9 is_stmt 0 view .LVU195
 850 00bc 3546     		mov	r5, r6
 851 00be 00E0     		b	.L50
 852              	.L53:
 134:Core/Src/shell.c **** 	}
 853              		.loc 1 134 10 view .LVU196
 854 00c0 0125     		movs	r5, #1
 855              	.L50:
 147:Core/Src/shell.c **** }
 856              		.loc 1 147 1 view .LVU197
 857 00c2 2846     		mov	r0, r5
 858 00c4 21B0     		add	sp, sp, #132
 859              	.LCFI12:
 860              		.cfi_def_cfa_offset 20
 861              		@ sp needed
 862 00c6 F0BD     		pop	{r4, r5, r6, r7, pc}
 863              	.LVL86:
 864              	.L61:
 865              		.loc 1 147 1 view .LVU198
 866              		.align	2
 867              	.L60:
 868 00c8 00000000 		.word	.LC11
 869 00cc 08000000 		.word	.LC12
ARM GAS  /tmp/ccvX52LM.s 			page 80


 870 00d0 0C000000 		.word	.LC13
 871 00d4 10000000 		.word	.LC14
 872 00d8 14000000 		.word	.LC15
 873 00dc 1C000000 		.word	.LC16
 874              		.cfi_endproc
 875              	.LFE161:
 877              		.section	.rodata.shell_start.str1.4,"aMS",%progbits,1
 878              		.align	2
 879              	.LC17:
 880 0000 5B617375 		.ascii	"[asus]> \000"
 880      735D3E20 
 880      00
 881 0009 000000   		.align	2
 882              	.LC18:
 883 000c 0D00     		.ascii	"\015\000"
 884              		.section	.text.shell_start,"ax",%progbits
 885              		.align	1
 886              		.global	shell_start
 887              		.syntax unified
 888              		.thumb
 889              		.thumb_func
 891              	shell_start:
 892              	.LFB162:
 148:Core/Src/shell.c **** 
 149:Core/Src/shell.c **** void shell_start(void)
 150:Core/Src/shell.c **** {
 893              		.loc 1 150 1 is_stmt 1 view -0
 894              		.cfi_startproc
 895              		@ args = 0, pretend = 0, frame = 88
 896              		@ frame_needed = 0, uses_anonymous_args = 0
 897 0000 10B5     		push	{r4, lr}
 898              	.LCFI13:
 899              		.cfi_def_cfa_offset 8
 900              		.cfi_offset 4, -8
 901              		.cfi_offset 14, -4
 902 0002 96B0     		sub	sp, sp, #88
 903              	.LCFI14:
 904              		.cfi_def_cfa_offset 96
 151:Core/Src/shell.c ****   int j=0;
 905              		.loc 1 151 3 view .LVU200
 906              	.LVL87:
 152:Core/Src/shell.c ****   int k=0;
 907              		.loc 1 152 3 view .LVU201
 153:Core/Src/shell.c ****   uint8_t c[2];
 908              		.loc 1 153 3 view .LVU202
 154:Core/Src/shell.c ****   char cmd[80]={0};
 909              		.loc 1 154 3 view .LVU203
 910              		.loc 1 154 8 is_stmt 0 view .LVU204
 911 0004 0021     		movs	r1, #0
 912 0006 0191     		str	r1, [sp, #4]
 913 0008 4C22     		movs	r2, #76
 914 000a 02A8     		add	r0, sp, #8
 915 000c FFF7FEFF 		bl	memset
 916              	.LVL88:
 917 0010 2CE0     		b	.L71
 918              	.LVL89:
 919              	.L64:
ARM GAS  /tmp/ccvX52LM.s 			page 81


 155:Core/Src/shell.c **** 
 156:Core/Src/shell.c ****   while(1) {
 157:Core/Src/shell.c ****     k = 0;
 158:Core/Src/shell.c ****     for(j=0;j<2;j++) {
 159:Core/Src/shell.c ****       c[j]='-';
 920              		.loc 1 159 7 is_stmt 1 discriminator 3 view .LVU205
 921              		.loc 1 159 11 is_stmt 0 discriminator 3 view .LVU206
 922 0012 03F15802 		add	r2, r3, #88
 923 0016 6A44     		add	r2, sp, r2
 924 0018 2D21     		movs	r1, #45
 925 001a 02F8041C 		strb	r1, [r2, #-4]
 158:Core/Src/shell.c ****       c[j]='-';
 926              		.loc 1 158 18 is_stmt 1 discriminator 3 view .LVU207
 927 001e 0133     		adds	r3, r3, #1
 928              	.LVL90:
 929              	.L63:
 158:Core/Src/shell.c ****       c[j]='-';
 930              		.loc 1 158 14 discriminator 1 view .LVU208
 931 0020 012B     		cmp	r3, #1
 932 0022 F6DD     		ble	.L64
 160:Core/Src/shell.c ****     }
 161:Core/Src/shell.c ****     for(j=0;j<80;j++) {
 933              		.loc 1 161 10 is_stmt 0 view .LVU209
 934 0024 0023     		movs	r3, #0
 935              	.LVL91:
 936              		.loc 1 161 10 view .LVU210
 937 0026 06E0     		b	.L65
 938              	.LVL92:
 939              	.L66:
 162:Core/Src/shell.c ****       cmd[j]='-';
 940              		.loc 1 162 7 is_stmt 1 discriminator 3 view .LVU211
 941              		.loc 1 162 13 is_stmt 0 discriminator 3 view .LVU212
 942 0028 03F15802 		add	r2, r3, #88
 943 002c 6A44     		add	r2, sp, r2
 944 002e 2D21     		movs	r1, #45
 945 0030 02F8541C 		strb	r1, [r2, #-84]
 161:Core/Src/shell.c ****       cmd[j]='-';
 946              		.loc 1 161 19 is_stmt 1 discriminator 3 view .LVU213
 947 0034 0133     		adds	r3, r3, #1
 948              	.LVL93:
 949              	.L65:
 161:Core/Src/shell.c ****       cmd[j]='-';
 950              		.loc 1 161 14 discriminator 1 view .LVU214
 951 0036 4F2B     		cmp	r3, #79
 952 0038 F6DD     		ble	.L66
 163:Core/Src/shell.c ****     }
 164:Core/Src/shell.c **** 
 165:Core/Src/shell.c ****     printf("[asus]> ");
 953              		.loc 1 165 5 view .LVU215
 954 003a 2348     		ldr	r0, .L78
 955 003c FFF7FEFF 		bl	printf
 956              	.LVL94:
 166:Core/Src/shell.c ****     fflush(stdout);
 957              		.loc 1 166 5 view .LVU216
 958              		.loc 1 166 12 is_stmt 0 view .LVU217
 959 0040 224B     		ldr	r3, .L78+4
 960 0042 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/ccvX52LM.s 			page 82


 961              		.loc 1 166 5 view .LVU218
 962 0044 9868     		ldr	r0, [r3, #8]
 963 0046 FFF7FEFF 		bl	fflush
 964              	.LVL95:
 157:Core/Src/shell.c ****     for(j=0;j<2;j++) {
 965              		.loc 1 157 7 view .LVU219
 966 004a 0024     		movs	r4, #0
 967 004c 1CE0     		b	.L68
 968              	.LVL96:
 969              	.L76:
 167:Core/Src/shell.c ****     while(1) {
 168:Core/Src/shell.c **** 			if(VCP_retrieveInputData(c, 1, 0xFFFF) == SUCCESS) {
 169:Core/Src/shell.c **** 			//if(c[0] != '-') {
 170:Core/Src/shell.c **** 				printf("%c",c[0]);
 171:Core/Src/shell.c ****         fflush(stdout);
 172:Core/Src/shell.c ****         if (c[0] == 0x0D) {
 173:Core/Src/shell.c ****           cmd[k] = '\0';
 970              		.loc 1 173 11 is_stmt 1 view .LVU220
 971              		.loc 1 173 18 is_stmt 0 view .LVU221
 972 004e 04F15803 		add	r3, r4, #88
 973 0052 0DEB0304 		add	r4, sp, r3
 974              	.LVL97:
 975              		.loc 1 173 18 view .LVU222
 976 0056 0023     		movs	r3, #0
 977              	.LVL98:
 978              		.loc 1 173 18 view .LVU223
 979 0058 04F8543C 		strb	r3, [r4, #-84]
 174:Core/Src/shell.c ****           break;
 980              		.loc 1 174 11 is_stmt 1 view .LVU224
 175:Core/Src/shell.c ****         }
 176:Core/Src/shell.c ****         if (c[0] == 0x08) {
 177:Core/Src/shell.c ****           printf(" ");
 178:Core/Src/shell.c ****           printf("%c", 0x08);
 179:Core/Src/shell.c ****           fflush(stdout);
 180:Core/Src/shell.c ****           k -= 1;
 181:Core/Src/shell.c ****         } else {
 182:Core/Src/shell.c ****           cmd[k] = c[0];
 183:Core/Src/shell.c ****           k++;
 184:Core/Src/shell.c ****         }
 185:Core/Src/shell.c **** 			}
 186:Core/Src/shell.c ****     }
 187:Core/Src/shell.c **** 
 188:Core/Src/shell.c ****     printf("\r\n");
 981              		.loc 1 188 5 view .LVU225
 982 005c 1C48     		ldr	r0, .L78+8
 983 005e FFF7FEFF 		bl	puts
 984              	.LVL99:
 189:Core/Src/shell.c **** 
 190:Core/Src/shell.c **** 
 191:Core/Src/shell.c ****     if(shell_process_cmd(cmd) == 1) {
 985              		.loc 1 191 5 view .LVU226
 986              		.loc 1 191 8 is_stmt 0 view .LVU227
 987 0062 01A8     		add	r0, sp, #4
 988 0064 FFF7FEFF 		bl	shell_process_cmd
 989              	.LVL100:
 990              		.loc 1 191 7 view .LVU228
 991 0068 0128     		cmp	r0, #1
ARM GAS  /tmp/ccvX52LM.s 			page 83


 992 006a 2BD0     		beq	.L75
 993              	.LVL101:
 994              	.L71:
 156:Core/Src/shell.c ****     k = 0;
 995              		.loc 1 156 3 is_stmt 1 view .LVU229
 157:Core/Src/shell.c ****     for(j=0;j<2;j++) {
 996              		.loc 1 157 5 view .LVU230
 158:Core/Src/shell.c ****       c[j]='-';
 997              		.loc 1 158 5 view .LVU231
 158:Core/Src/shell.c ****       c[j]='-';
 998              		.loc 1 158 10 is_stmt 0 view .LVU232
 999 006c 0023     		movs	r3, #0
 158:Core/Src/shell.c ****       c[j]='-';
 1000              		.loc 1 158 5 view .LVU233
 1001 006e D7E7     		b	.L63
 1002              	.LVL102:
 1003              	.L77:
 177:Core/Src/shell.c ****           printf("%c", 0x08);
 1004              		.loc 1 177 11 is_stmt 1 view .LVU234
 1005 0070 2020     		movs	r0, #32
 1006 0072 FFF7FEFF 		bl	putchar
 1007              	.LVL103:
 178:Core/Src/shell.c ****           fflush(stdout);
 1008              		.loc 1 178 11 view .LVU235
 1009 0076 0820     		movs	r0, #8
 1010 0078 FFF7FEFF 		bl	putchar
 1011              	.LVL104:
 179:Core/Src/shell.c ****           k -= 1;
 1012              		.loc 1 179 11 view .LVU236
 179:Core/Src/shell.c ****           k -= 1;
 1013              		.loc 1 179 18 is_stmt 0 view .LVU237
 1014 007c 134B     		ldr	r3, .L78+4
 1015 007e 1B68     		ldr	r3, [r3]
 179:Core/Src/shell.c ****           k -= 1;
 1016              		.loc 1 179 11 view .LVU238
 1017 0080 9868     		ldr	r0, [r3, #8]
 1018 0082 FFF7FEFF 		bl	fflush
 1019              	.LVL105:
 180:Core/Src/shell.c ****         } else {
 1020              		.loc 1 180 11 is_stmt 1 view .LVU239
 180:Core/Src/shell.c ****         } else {
 1021              		.loc 1 180 13 is_stmt 0 view .LVU240
 1022 0086 013C     		subs	r4, r4, #1
 1023              	.LVL106:
 1024              	.L68:
 167:Core/Src/shell.c **** 			if(VCP_retrieveInputData(c, 1, 0xFFFF) == SUCCESS) {
 1025              		.loc 1 167 5 is_stmt 1 view .LVU241
 168:Core/Src/shell.c **** 			//if(c[0] != '-') {
 1026              		.loc 1 168 4 view .LVU242
 168:Core/Src/shell.c **** 			//if(c[0] != '-') {
 1027              		.loc 1 168 7 is_stmt 0 view .LVU243
 1028 0088 4FF6FF72 		movw	r2, #65535
 1029 008c 0121     		movs	r1, #1
 1030 008e 15A8     		add	r0, sp, #84
 1031 0090 FFF7FEFF 		bl	VCP_retrieveInputData
 1032              	.LVL107:
 168:Core/Src/shell.c **** 			//if(c[0] != '-') {
ARM GAS  /tmp/ccvX52LM.s 			page 84


 1033              		.loc 1 168 6 view .LVU244
 1034 0094 0028     		cmp	r0, #0
 1035 0096 F7D1     		bne	.L68
 170:Core/Src/shell.c ****         fflush(stdout);
 1036              		.loc 1 170 5 is_stmt 1 view .LVU245
 1037 0098 9DF85400 		ldrb	r0, [sp, #84]	@ zero_extendqisi2
 1038 009c FFF7FEFF 		bl	putchar
 1039              	.LVL108:
 171:Core/Src/shell.c ****         if (c[0] == 0x0D) {
 1040              		.loc 1 171 9 view .LVU246
 171:Core/Src/shell.c ****         if (c[0] == 0x0D) {
 1041              		.loc 1 171 16 is_stmt 0 view .LVU247
 1042 00a0 0A4B     		ldr	r3, .L78+4
 1043 00a2 1B68     		ldr	r3, [r3]
 171:Core/Src/shell.c ****         if (c[0] == 0x0D) {
 1044              		.loc 1 171 9 view .LVU248
 1045 00a4 9868     		ldr	r0, [r3, #8]
 1046 00a6 FFF7FEFF 		bl	fflush
 1047              	.LVL109:
 172:Core/Src/shell.c ****           cmd[k] = '\0';
 1048              		.loc 1 172 9 is_stmt 1 view .LVU249
 172:Core/Src/shell.c ****           cmd[k] = '\0';
 1049              		.loc 1 172 14 is_stmt 0 view .LVU250
 1050 00aa 9DF85430 		ldrb	r3, [sp, #84]	@ zero_extendqisi2
 172:Core/Src/shell.c ****           cmd[k] = '\0';
 1051              		.loc 1 172 12 view .LVU251
 1052 00ae 0D2B     		cmp	r3, #13
 1053 00b0 CDD0     		beq	.L76
 176:Core/Src/shell.c ****           printf(" ");
 1054              		.loc 1 176 9 is_stmt 1 view .LVU252
 176:Core/Src/shell.c ****           printf(" ");
 1055              		.loc 1 176 12 is_stmt 0 view .LVU253
 1056 00b2 082B     		cmp	r3, #8
 1057 00b4 DCD0     		beq	.L77
 182:Core/Src/shell.c ****           k++;
 1058              		.loc 1 182 11 is_stmt 1 view .LVU254
 182:Core/Src/shell.c ****           k++;
 1059              		.loc 1 182 18 is_stmt 0 view .LVU255
 1060 00b6 04F15802 		add	r2, r4, #88
 1061 00ba 6A44     		add	r2, sp, r2
 1062 00bc 02F8543C 		strb	r3, [r2, #-84]
 183:Core/Src/shell.c ****         }
 1063              		.loc 1 183 11 is_stmt 1 view .LVU256
 183:Core/Src/shell.c ****         }
 1064              		.loc 1 183 12 is_stmt 0 view .LVU257
 1065 00c0 0134     		adds	r4, r4, #1
 1066              	.LVL110:
 183:Core/Src/shell.c ****         }
 1067              		.loc 1 183 12 view .LVU258
 1068 00c2 E1E7     		b	.L68
 1069              	.LVL111:
 1070              	.L75:
 192:Core/Src/shell.c **** 			return;
 193:Core/Src/shell.c **** 		}
 194:Core/Src/shell.c ****   }
 195:Core/Src/shell.c **** }
 1071              		.loc 1 195 1 view .LVU259
ARM GAS  /tmp/ccvX52LM.s 			page 85


 1072 00c4 16B0     		add	sp, sp, #88
 1073              	.LCFI15:
 1074              		.cfi_def_cfa_offset 8
 1075              		@ sp needed
 1076 00c6 10BD     		pop	{r4, pc}
 1077              	.L79:
 1078              		.align	2
 1079              	.L78:
 1080 00c8 00000000 		.word	.LC17
 1081 00cc 00000000 		.word	_impure_ptr
 1082 00d0 0C000000 		.word	.LC18
 1083              		.cfi_endproc
 1084              	.LFE162:
 1086              		.text
 1087              	.Letext0:
 1088              		.file 4 "/home/yul/toolchain/arm-gnu-toolchain-12.2.rel1-x86_64-arm-none-eabi/arm-none-eabi/includ
 1089              		.file 5 "/home/yul/toolchain/arm-gnu-toolchain-12.2.rel1-x86_64-arm-none-eabi/arm-none-eabi/includ
 1090              		.file 6 "Drivers/CMSIS/Device/ST/STM32L5xx/Include/stm32l562xx.h"
 1091              		.file 7 "Drivers/CMSIS/Device/ST/STM32L5xx/Include/stm32l5xx.h"
 1092              		.file 8 "Drivers/STM32L5xx_HAL_Driver/Inc/stm32l5xx_hal_def.h"
 1093              		.file 9 "Drivers/STM32L5xx_HAL_Driver/Inc/stm32l5xx_hal_dma.h"
 1094              		.file 10 "Drivers/STM32L5xx_HAL_Driver/Inc/stm32l5xx_hal_i2c.h"
 1095              		.file 11 "/home/yul/toolchain/arm-gnu-toolchain-12.2.rel1-x86_64-arm-none-eabi/lib/gcc/arm-none-ea
 1096              		.file 12 "/home/yul/toolchain/arm-gnu-toolchain-12.2.rel1-x86_64-arm-none-eabi/arm-none-eabi/inclu
 1097              		.file 13 "/home/yul/toolchain/arm-gnu-toolchain-12.2.rel1-x86_64-arm-none-eabi/arm-none-eabi/inclu
 1098              		.file 14 "/home/yul/toolchain/arm-gnu-toolchain-12.2.rel1-x86_64-arm-none-eabi/arm-none-eabi/inclu
 1099              		.file 15 "/home/yul/toolchain/arm-gnu-toolchain-12.2.rel1-x86_64-arm-none-eabi/arm-none-eabi/inclu
 1100              		.file 16 "USB_Device/App/usbd_cdc_if.h"
 1101              		.file 17 "/home/yul/toolchain/arm-gnu-toolchain-12.2.rel1-x86_64-arm-none-eabi/arm-none-eabi/inclu
 1102              		.file 18 "Core/Inc/is31fl3737.h"
 1103              		.file 19 "Core/Inc/keyboard.h"
 1104              		.file 20 "/home/yul/toolchain/arm-gnu-toolchain-12.2.rel1-x86_64-arm-none-eabi/arm-none-eabi/inclu
 1105              		.file 21 "<built-in>"
ARM GAS  /tmp/ccvX52LM.s 			page 86


DEFINED SYMBOLS
                            *ABS*:0000000000000000 shell.c
     /tmp/ccvX52LM.s:22     .text.__NVIC_SystemReset:0000000000000000 $t
     /tmp/ccvX52LM.s:27     .text.__NVIC_SystemReset:0000000000000000 __NVIC_SystemReset
     /tmp/ccvX52LM.s:90     .text.__NVIC_SystemReset:000000000000001c $d
     /tmp/ccvX52LM.s:96     .text.shell_check_cmd:0000000000000000 $t
     /tmp/ccvX52LM.s:102    .text.shell_check_cmd:0000000000000000 shell_check_cmd
     /tmp/ccvX52LM.s:127    .text.shell_reset:0000000000000000 $t
     /tmp/ccvX52LM.s:133    .text.shell_reset:0000000000000000 shell_reset
     /tmp/ccvX52LM.s:155    .rodata.gpio_handler.str1.4:0000000000000000 $d
     /tmp/ccvX52LM.s:159    .text.gpio_handler:0000000000000000 $t
     /tmp/ccvX52LM.s:165    .text.gpio_handler:0000000000000000 gpio_handler
     /tmp/ccvX52LM.s:207    .text.gpio_handler:000000000000001c $d
     /tmp/ccvX52LM.s:212    .rodata.i2c_handler.str1.4:0000000000000000 $d
     /tmp/ccvX52LM.s:225    .text.i2c_handler:0000000000000000 $t
     /tmp/ccvX52LM.s:231    .text.i2c_handler:0000000000000000 i2c_handler
     /tmp/ccvX52LM.s:380    .text.i2c_handler:000000000000008c $d
     /tmp/ccvX52LM.s:390    .rodata.leds_handler.str1.4:0000000000000000 $d
     /tmp/ccvX52LM.s:409    .text.leds_handler:0000000000000000 $t
     /tmp/ccvX52LM.s:415    .text.leds_handler:0000000000000000 leds_handler
     /tmp/ccvX52LM.s:633    .text.leds_handler:00000000000000e4 $d
     /tmp/ccvX52LM.s:645    .rodata.shell_process_cmd.str1.4:0000000000000000 $d
     /tmp/ccvX52LM.s:664    .text.shell_process_cmd:0000000000000000 $t
     /tmp/ccvX52LM.s:670    .text.shell_process_cmd:0000000000000000 shell_process_cmd
     /tmp/ccvX52LM.s:868    .text.shell_process_cmd:00000000000000c8 $d
     /tmp/ccvX52LM.s:878    .rodata.shell_start.str1.4:0000000000000000 $d
     /tmp/ccvX52LM.s:885    .text.shell_start:0000000000000000 $t
     /tmp/ccvX52LM.s:891    .text.shell_start:0000000000000000 shell_start
     /tmp/ccvX52LM.s:1080   .text.shell_start:00000000000000c8 $d

UNDEFINED SYMBOLS
strcmp
scan_matrix
process_matrix
memcpy
HAL_I2C_IsDeviceReady
printf
hi2c1
hi2c2
IS31FL3737_init
puts
IS31FL3737_write_register
atoi
memset
fflush
putchar
VCP_retrieveInputData
_impure_ptr

ARM GAS  /tmp/ccewbfMl.s 			page 1


   1              		.cpu cortex-m33
   2              		.arch armv8-m.main
   3              		.fpu fpv4-sp-d16
   4              		.arch_extension dsp
   5              		.eabi_attribute 27, 1
   6              		.eabi_attribute 28, 1
   7              		.eabi_attribute 20, 1
   8              		.eabi_attribute 21, 1
   9              		.eabi_attribute 23, 3
  10              		.eabi_attribute 24, 1
  11              		.eabi_attribute 25, 1
  12              		.eabi_attribute 26, 1
  13              		.eabi_attribute 30, 1
  14              		.eabi_attribute 34, 1
  15              		.eabi_attribute 18, 4
  16              		.file	"main.c"
  17              		.text
  18              	.Ltext0:
  19              		.cfi_sections	.debug_frame
  20              		.file 1 "Core/Src/main.c"
  21              		.section	.text.MX_GPIO_Init,"ax",%progbits
  22              		.align	1
  23              		.syntax unified
  24              		.thumb
  25              		.thumb_func
  27              	MX_GPIO_Init:
  28              	.LFB163:
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2023 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** 
  22:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  23:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  24:Core/Src/main.c **** 
  25:Core/Src/main.c **** /* USER CODE END Includes */
  26:Core/Src/main.c **** 
  27:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  28:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  29:Core/Src/main.c **** 
  30:Core/Src/main.c **** /* USER CODE END PTD */
ARM GAS  /tmp/ccewbfMl.s 			page 2


  31:Core/Src/main.c **** 
  32:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  33:Core/Src/main.c **** /* USER CODE BEGIN PD */
  34:Core/Src/main.c **** /* USER CODE END PD */
  35:Core/Src/main.c **** 
  36:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  37:Core/Src/main.c **** /* USER CODE BEGIN PM */
  38:Core/Src/main.c **** 
  39:Core/Src/main.c **** /* USER CODE END PM */
  40:Core/Src/main.c **** 
  41:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  42:Core/Src/main.c **** I2C_HandleTypeDef hi2c1;
  43:Core/Src/main.c **** I2C_HandleTypeDef hi2c2;
  44:Core/Src/main.c **** 
  45:Core/Src/main.c **** UART_HandleTypeDef huart3;
  46:Core/Src/main.c **** 
  47:Core/Src/main.c **** /* USER CODE BEGIN PV */
  48:Core/Src/main.c **** 
  49:Core/Src/main.c **** /* USER CODE END PV */
  50:Core/Src/main.c **** 
  51:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  52:Core/Src/main.c **** void SystemClock_Config(void);
  53:Core/Src/main.c **** static void MX_GPIO_Init(void);
  54:Core/Src/main.c **** static void MX_I2C1_Init(void);
  55:Core/Src/main.c **** static void MX_I2C2_Init(void);
  56:Core/Src/main.c **** static void MX_USART3_UART_Init(void);
  57:Core/Src/main.c **** static void MX_ICACHE_Init(void);
  58:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  59:Core/Src/main.c **** 
  60:Core/Src/main.c **** /* USER CODE END PFP */
  61:Core/Src/main.c **** 
  62:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  63:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  64:Core/Src/main.c **** int _write(int file, char *ptr, int len) {
  65:Core/Src/main.c ****     static uint8_t rc = USBD_OK;
  66:Core/Src/main.c **** 
  67:Core/Src/main.c ****     do {
  68:Core/Src/main.c ****         rc = CDC_Transmit_FS((uint8_t*)ptr, len);
  69:Core/Src/main.c ****     } while (USBD_BUSY == rc);
  70:Core/Src/main.c **** 
  71:Core/Src/main.c ****     if (USBD_FAIL == rc) {
  72:Core/Src/main.c ****         /// NOTE: Should never reach here.
  73:Core/Src/main.c ****         /// TODO: Handle this error.
  74:Core/Src/main.c ****         return 0;
  75:Core/Src/main.c ****     }
  76:Core/Src/main.c ****     return len;
  77:Core/Src/main.c **** }
  78:Core/Src/main.c **** 
  79:Core/Src/main.c **** // int fputc(int ch, FILE *f)
  80:Core/Src/main.c **** // {
  81:Core/Src/main.c **** //     if(ch == '\n') {
  82:Core/Src/main.c **** //       uint8_t ret = '\r';
  83:Core/Src/main.c **** //       CDC_Transmit_FS(&ret, 1);
  84:Core/Src/main.c **** //     }
  85:Core/Src/main.c **** //     CDC_Transmit_FS((uint8_t*)&ch, 1);
  86:Core/Src/main.c **** //     return ch;
  87:Core/Src/main.c **** // }
ARM GAS  /tmp/ccewbfMl.s 			page 3


  88:Core/Src/main.c **** 
  89:Core/Src/main.c **** /* USER CODE END 0 */
  90:Core/Src/main.c **** 
  91:Core/Src/main.c **** /**
  92:Core/Src/main.c ****   * @brief  The application entry point.
  93:Core/Src/main.c ****   * @retval int
  94:Core/Src/main.c ****   */
  95:Core/Src/main.c **** int main(void)
  96:Core/Src/main.c **** {
  97:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  98:Core/Src/main.c **** 
  99:Core/Src/main.c ****   /* USER CODE END 1 */
 100:Core/Src/main.c **** 
 101:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
 102:Core/Src/main.c **** 
 103:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 104:Core/Src/main.c ****   HAL_Init();
 105:Core/Src/main.c **** 
 106:Core/Src/main.c ****   /* USER CODE BEGIN Init */
 107:Core/Src/main.c **** 
 108:Core/Src/main.c ****   /* USER CODE END Init */
 109:Core/Src/main.c **** 
 110:Core/Src/main.c ****   /* Configure the system clock */
 111:Core/Src/main.c ****   SystemClock_Config();
 112:Core/Src/main.c **** 
 113:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 114:Core/Src/main.c **** 
 115:Core/Src/main.c ****   /* USER CODE END SysInit */
 116:Core/Src/main.c **** 
 117:Core/Src/main.c ****   /* Initialize all configured peripherals */
 118:Core/Src/main.c ****   MX_GPIO_Init();
 119:Core/Src/main.c ****   MX_I2C1_Init();
 120:Core/Src/main.c ****   MX_I2C2_Init();
 121:Core/Src/main.c ****   // MX_USART3_UART_Init();
 122:Core/Src/main.c ****   MX_USB_Device_Init();
 123:Core/Src/main.c ****   MX_ICACHE_Init();
 124:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 125:Core/Src/main.c ****   HAL_Delay(2000);
 126:Core/Src/main.c ****   /* USER CODE END 2 */
 127:Core/Src/main.c **** 
 128:Core/Src/main.c ****   printf("\r\nStart !\r\n");
 129:Core/Src/main.c **** 
 130:Core/Src/main.c ****   shell_start();
 131:Core/Src/main.c **** 
 132:Core/Src/main.c ****   /* Infinite loop */
 133:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 134:Core/Src/main.c ****   while (1)
 135:Core/Src/main.c ****   {
 136:Core/Src/main.c ****     /* USER CODE END WHILE */
 137:Core/Src/main.c **** 
 138:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 139:Core/Src/main.c ****     //printf("[main]Hello World! \r\n");
 140:Core/Src/main.c ****     printf("Hello World!\r\n");
 141:Core/Src/main.c ****     HAL_Delay(1000);
 142:Core/Src/main.c ****   }
 143:Core/Src/main.c ****   /* USER CODE END 3 */
 144:Core/Src/main.c **** }
ARM GAS  /tmp/ccewbfMl.s 			page 4


 145:Core/Src/main.c **** 
 146:Core/Src/main.c **** /**
 147:Core/Src/main.c ****   * @brief System Clock Configuration
 148:Core/Src/main.c ****   * @retval None
 149:Core/Src/main.c ****   */
 150:Core/Src/main.c **** void SystemClock_Config(void)
 151:Core/Src/main.c **** {
 152:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 153:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 154:Core/Src/main.c **** 
 155:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 156:Core/Src/main.c ****   */
 157:Core/Src/main.c ****   if (HAL_PWREx_ControlVoltageScaling(PWR_REGULATOR_VOLTAGE_SCALE0) != HAL_OK)
 158:Core/Src/main.c ****   {
 159:Core/Src/main.c ****     Error_Handler();
 160:Core/Src/main.c ****   }
 161:Core/Src/main.c **** 
 162:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 163:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 164:Core/Src/main.c ****   */
 165:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 166:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 167:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 168:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 169:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 2;
 170:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 12;
 171:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV7;
 172:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = RCC_PLLQ_DIV2;
 173:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = RCC_PLLR_DIV2;
 174:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 175:Core/Src/main.c ****   {
 176:Core/Src/main.c ****     Error_Handler();
 177:Core/Src/main.c ****   }
 178:Core/Src/main.c **** 
 179:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 180:Core/Src/main.c ****   */
 181:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 182:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 183:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 184:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 185:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 186:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 187:Core/Src/main.c **** 
 188:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_4) != HAL_OK)
 189:Core/Src/main.c ****   {
 190:Core/Src/main.c ****     Error_Handler();
 191:Core/Src/main.c ****   }
 192:Core/Src/main.c **** }
 193:Core/Src/main.c **** 
 194:Core/Src/main.c **** /**
 195:Core/Src/main.c ****   * @brief I2C1 Initialization Function
 196:Core/Src/main.c ****   * @param None
 197:Core/Src/main.c ****   * @retval None
 198:Core/Src/main.c ****   */
 199:Core/Src/main.c **** static void MX_I2C1_Init(void)
 200:Core/Src/main.c **** {
 201:Core/Src/main.c **** 
ARM GAS  /tmp/ccewbfMl.s 			page 5


 202:Core/Src/main.c ****   /* USER CODE BEGIN I2C1_Init 0 */
 203:Core/Src/main.c **** 
 204:Core/Src/main.c ****   /* USER CODE END I2C1_Init 0 */
 205:Core/Src/main.c **** 
 206:Core/Src/main.c ****   /* USER CODE BEGIN I2C1_Init 1 */
 207:Core/Src/main.c **** 
 208:Core/Src/main.c ****   /* USER CODE END I2C1_Init 1 */
 209:Core/Src/main.c ****   hi2c1.Instance = I2C1;
 210:Core/Src/main.c ****   hi2c1.Init.Timing = 0x10B0DCFB;
 211:Core/Src/main.c ****   hi2c1.Init.OwnAddress1 = 0;
 212:Core/Src/main.c ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 213:Core/Src/main.c ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 214:Core/Src/main.c ****   hi2c1.Init.OwnAddress2 = 0;
 215:Core/Src/main.c ****   hi2c1.Init.OwnAddress2Masks = I2C_OA2_NOMASK;
 216:Core/Src/main.c ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 217:Core/Src/main.c ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 218:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 219:Core/Src/main.c ****   {
 220:Core/Src/main.c ****     Error_Handler();
 221:Core/Src/main.c ****   }
 222:Core/Src/main.c **** 
 223:Core/Src/main.c ****   /** Configure Analogue filter
 224:Core/Src/main.c ****   */
 225:Core/Src/main.c ****   if (HAL_I2CEx_ConfigAnalogFilter(&hi2c1, I2C_ANALOGFILTER_ENABLE) != HAL_OK)
 226:Core/Src/main.c ****   {
 227:Core/Src/main.c ****     Error_Handler();
 228:Core/Src/main.c ****   }
 229:Core/Src/main.c **** 
 230:Core/Src/main.c ****   /** Configure Digital filter
 231:Core/Src/main.c ****   */
 232:Core/Src/main.c ****   if (HAL_I2CEx_ConfigDigitalFilter(&hi2c1, 0) != HAL_OK)
 233:Core/Src/main.c ****   {
 234:Core/Src/main.c ****     Error_Handler();
 235:Core/Src/main.c ****   }
 236:Core/Src/main.c ****   /* USER CODE BEGIN I2C1_Init 2 */
 237:Core/Src/main.c **** 
 238:Core/Src/main.c ****   /* USER CODE END I2C1_Init 2 */
 239:Core/Src/main.c **** 
 240:Core/Src/main.c **** }
 241:Core/Src/main.c **** 
 242:Core/Src/main.c **** /**
 243:Core/Src/main.c ****   * @brief I2C2 Initialization Function
 244:Core/Src/main.c ****   * @param None
 245:Core/Src/main.c ****   * @retval None
 246:Core/Src/main.c ****   */
 247:Core/Src/main.c **** static void MX_I2C2_Init(void)
 248:Core/Src/main.c **** {
 249:Core/Src/main.c **** 
 250:Core/Src/main.c ****   /* USER CODE BEGIN I2C2_Init 0 */
 251:Core/Src/main.c **** 
 252:Core/Src/main.c ****   /* USER CODE END I2C2_Init 0 */
 253:Core/Src/main.c **** 
 254:Core/Src/main.c ****   /* USER CODE BEGIN I2C2_Init 1 */
 255:Core/Src/main.c **** 
 256:Core/Src/main.c ****   /* USER CODE END I2C2_Init 1 */
 257:Core/Src/main.c ****   hi2c2.Instance = I2C2;
 258:Core/Src/main.c ****   hi2c2.Init.Timing = 0x10B0DCFB;
ARM GAS  /tmp/ccewbfMl.s 			page 6


 259:Core/Src/main.c ****   hi2c2.Init.OwnAddress1 = 0;
 260:Core/Src/main.c ****   hi2c2.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 261:Core/Src/main.c ****   hi2c2.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 262:Core/Src/main.c ****   hi2c2.Init.OwnAddress2 = 0;
 263:Core/Src/main.c ****   hi2c2.Init.OwnAddress2Masks = I2C_OA2_NOMASK;
 264:Core/Src/main.c ****   hi2c2.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 265:Core/Src/main.c ****   hi2c2.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 266:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c2) != HAL_OK)
 267:Core/Src/main.c ****   {
 268:Core/Src/main.c ****     Error_Handler();
 269:Core/Src/main.c ****   }
 270:Core/Src/main.c **** 
 271:Core/Src/main.c ****   /** Configure Analogue filter
 272:Core/Src/main.c ****   */
 273:Core/Src/main.c ****   if (HAL_I2CEx_ConfigAnalogFilter(&hi2c2, I2C_ANALOGFILTER_ENABLE) != HAL_OK)
 274:Core/Src/main.c ****   {
 275:Core/Src/main.c ****     Error_Handler();
 276:Core/Src/main.c ****   }
 277:Core/Src/main.c **** 
 278:Core/Src/main.c ****   /** Configure Digital filter
 279:Core/Src/main.c ****   */
 280:Core/Src/main.c ****   if (HAL_I2CEx_ConfigDigitalFilter(&hi2c2, 0) != HAL_OK)
 281:Core/Src/main.c ****   {
 282:Core/Src/main.c ****     Error_Handler();
 283:Core/Src/main.c ****   }
 284:Core/Src/main.c ****   /* USER CODE BEGIN I2C2_Init 2 */
 285:Core/Src/main.c **** 
 286:Core/Src/main.c ****   /* USER CODE END I2C2_Init 2 */
 287:Core/Src/main.c **** 
 288:Core/Src/main.c **** }
 289:Core/Src/main.c **** 
 290:Core/Src/main.c **** /**
 291:Core/Src/main.c ****   * @brief ICACHE Initialization Function
 292:Core/Src/main.c ****   * @param None
 293:Core/Src/main.c ****   * @retval None
 294:Core/Src/main.c ****   */
 295:Core/Src/main.c **** static void MX_ICACHE_Init(void)
 296:Core/Src/main.c **** {
 297:Core/Src/main.c **** 
 298:Core/Src/main.c ****   /* USER CODE BEGIN ICACHE_Init 0 */
 299:Core/Src/main.c **** 
 300:Core/Src/main.c ****   /* USER CODE END ICACHE_Init 0 */
 301:Core/Src/main.c **** 
 302:Core/Src/main.c ****   /* USER CODE BEGIN ICACHE_Init 1 */
 303:Core/Src/main.c **** 
 304:Core/Src/main.c ****   /* USER CODE END ICACHE_Init 1 */
 305:Core/Src/main.c **** 
 306:Core/Src/main.c ****   /** Enable instruction cache in 1-way (direct mapped cache)
 307:Core/Src/main.c ****   */
 308:Core/Src/main.c ****   if (HAL_ICACHE_ConfigAssociativityMode(ICACHE_1WAY) != HAL_OK)
 309:Core/Src/main.c ****   {
 310:Core/Src/main.c ****     Error_Handler();
 311:Core/Src/main.c ****   }
 312:Core/Src/main.c ****   if (HAL_ICACHE_Enable() != HAL_OK)
 313:Core/Src/main.c ****   {
 314:Core/Src/main.c ****     Error_Handler();
 315:Core/Src/main.c ****   }
ARM GAS  /tmp/ccewbfMl.s 			page 7


 316:Core/Src/main.c ****   /* USER CODE BEGIN ICACHE_Init 2 */
 317:Core/Src/main.c **** 
 318:Core/Src/main.c ****   /* USER CODE END ICACHE_Init 2 */
 319:Core/Src/main.c **** 
 320:Core/Src/main.c **** }
 321:Core/Src/main.c **** 
 322:Core/Src/main.c **** /**
 323:Core/Src/main.c ****   * @brief USART3 Initialization Function
 324:Core/Src/main.c ****   * @param None
 325:Core/Src/main.c ****   * @retval None
 326:Core/Src/main.c ****   */
 327:Core/Src/main.c **** static void MX_USART3_UART_Init(void)
 328:Core/Src/main.c **** {
 329:Core/Src/main.c **** 
 330:Core/Src/main.c ****   /* USER CODE BEGIN USART3_Init 0 */
 331:Core/Src/main.c **** 
 332:Core/Src/main.c ****   /* USER CODE END USART3_Init 0 */
 333:Core/Src/main.c **** 
 334:Core/Src/main.c ****   /* USER CODE BEGIN USART3_Init 1 */
 335:Core/Src/main.c **** 
 336:Core/Src/main.c ****   /* USER CODE END USART3_Init 1 */
 337:Core/Src/main.c ****   huart3.Instance = USART3;
 338:Core/Src/main.c ****   huart3.Init.BaudRate = 115200;
 339:Core/Src/main.c ****   huart3.Init.WordLength = UART_WORDLENGTH_8B;
 340:Core/Src/main.c ****   huart3.Init.StopBits = UART_STOPBITS_1;
 341:Core/Src/main.c ****   huart3.Init.Parity = UART_PARITY_NONE;
 342:Core/Src/main.c ****   huart3.Init.Mode = UART_MODE_TX_RX;
 343:Core/Src/main.c ****   huart3.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 344:Core/Src/main.c ****   huart3.Init.OverSampling = UART_OVERSAMPLING_16;
 345:Core/Src/main.c ****   huart3.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 346:Core/Src/main.c ****   huart3.Init.ClockPrescaler = UART_PRESCALER_DIV1;
 347:Core/Src/main.c ****   huart3.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 348:Core/Src/main.c ****   if (HAL_UART_Init(&huart3) != HAL_OK)
 349:Core/Src/main.c ****   {
 350:Core/Src/main.c ****     Error_Handler();
 351:Core/Src/main.c ****   }
 352:Core/Src/main.c ****   if (HAL_UARTEx_SetTxFifoThreshold(&huart3, UART_TXFIFO_THRESHOLD_1_8) != HAL_OK)
 353:Core/Src/main.c ****   {
 354:Core/Src/main.c ****     Error_Handler();
 355:Core/Src/main.c ****   }
 356:Core/Src/main.c ****   if (HAL_UARTEx_SetRxFifoThreshold(&huart3, UART_RXFIFO_THRESHOLD_1_8) != HAL_OK)
 357:Core/Src/main.c ****   {
 358:Core/Src/main.c ****     Error_Handler();
 359:Core/Src/main.c ****   }
 360:Core/Src/main.c ****   if (HAL_UARTEx_DisableFifoMode(&huart3) != HAL_OK)
 361:Core/Src/main.c ****   {
 362:Core/Src/main.c ****     Error_Handler();
 363:Core/Src/main.c ****   }
 364:Core/Src/main.c ****   /* USER CODE BEGIN USART3_Init 2 */
 365:Core/Src/main.c **** 
 366:Core/Src/main.c ****   /* USER CODE END USART3_Init 2 */
 367:Core/Src/main.c **** 
 368:Core/Src/main.c **** }
 369:Core/Src/main.c **** 
 370:Core/Src/main.c **** /**
 371:Core/Src/main.c ****   * @brief GPIO Initialization Function
 372:Core/Src/main.c ****   * @param None
ARM GAS  /tmp/ccewbfMl.s 			page 8


 373:Core/Src/main.c ****   * @retval None
 374:Core/Src/main.c ****   */
 375:Core/Src/main.c **** static void MX_GPIO_Init(void)
 376:Core/Src/main.c **** {
  29              		.loc 1 376 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 40
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33 0000 F0B5     		push	{r4, r5, r6, r7, lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 20
  36              		.cfi_offset 4, -20
  37              		.cfi_offset 5, -16
  38              		.cfi_offset 6, -12
  39              		.cfi_offset 7, -8
  40              		.cfi_offset 14, -4
  41 0002 8BB0     		sub	sp, sp, #44
  42              	.LCFI1:
  43              		.cfi_def_cfa_offset 64
 377:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  44              		.loc 1 377 3 view .LVU1
  45              		.loc 1 377 20 is_stmt 0 view .LVU2
  46 0004 0024     		movs	r4, #0
  47 0006 0594     		str	r4, [sp, #20]
  48 0008 0694     		str	r4, [sp, #24]
  49 000a 0794     		str	r4, [sp, #28]
  50 000c 0894     		str	r4, [sp, #32]
  51 000e 0994     		str	r4, [sp, #36]
 378:Core/Src/main.c **** 
 379:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 380:Core/Src/main.c ****   __HAL_RCC_GPIOC_CLK_ENABLE();
  52              		.loc 1 380 3 is_stmt 1 view .LVU3
  53              	.LBB4:
  54              		.loc 1 380 3 view .LVU4
  55              		.loc 1 380 3 view .LVU5
  56 0010 3E4B     		ldr	r3, .L3
  57 0012 DA6C     		ldr	r2, [r3, #76]
  58 0014 42F00402 		orr	r2, r2, #4
  59 0018 DA64     		str	r2, [r3, #76]
  60              		.loc 1 380 3 view .LVU6
  61 001a DA6C     		ldr	r2, [r3, #76]
  62 001c 02F00402 		and	r2, r2, #4
  63 0020 0092     		str	r2, [sp]
  64              		.loc 1 380 3 view .LVU7
  65 0022 009A     		ldr	r2, [sp]
  66              	.LBE4:
  67              		.loc 1 380 3 view .LVU8
 381:Core/Src/main.c ****   __HAL_RCC_GPIOH_CLK_ENABLE();
  68              		.loc 1 381 3 view .LVU9
  69              	.LBB5:
  70              		.loc 1 381 3 view .LVU10
  71              		.loc 1 381 3 view .LVU11
  72 0024 DA6C     		ldr	r2, [r3, #76]
  73 0026 42F08002 		orr	r2, r2, #128
  74 002a DA64     		str	r2, [r3, #76]
  75              		.loc 1 381 3 view .LVU12
  76 002c DA6C     		ldr	r2, [r3, #76]
ARM GAS  /tmp/ccewbfMl.s 			page 9


  77 002e 02F08002 		and	r2, r2, #128
  78 0032 0192     		str	r2, [sp, #4]
  79              		.loc 1 381 3 view .LVU13
  80 0034 019A     		ldr	r2, [sp, #4]
  81              	.LBE5:
  82              		.loc 1 381 3 view .LVU14
 382:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  83              		.loc 1 382 3 view .LVU15
  84              	.LBB6:
  85              		.loc 1 382 3 view .LVU16
  86              		.loc 1 382 3 view .LVU17
  87 0036 DA6C     		ldr	r2, [r3, #76]
  88 0038 42F00102 		orr	r2, r2, #1
  89 003c DA64     		str	r2, [r3, #76]
  90              		.loc 1 382 3 view .LVU18
  91 003e DA6C     		ldr	r2, [r3, #76]
  92 0040 02F00102 		and	r2, r2, #1
  93 0044 0292     		str	r2, [sp, #8]
  94              		.loc 1 382 3 view .LVU19
  95 0046 029A     		ldr	r2, [sp, #8]
  96              	.LBE6:
  97              		.loc 1 382 3 view .LVU20
 383:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  98              		.loc 1 383 3 view .LVU21
  99              	.LBB7:
 100              		.loc 1 383 3 view .LVU22
 101              		.loc 1 383 3 view .LVU23
 102 0048 DA6C     		ldr	r2, [r3, #76]
 103 004a 42F00202 		orr	r2, r2, #2
 104 004e DA64     		str	r2, [r3, #76]
 105              		.loc 1 383 3 view .LVU24
 106 0050 DA6C     		ldr	r2, [r3, #76]
 107 0052 02F00202 		and	r2, r2, #2
 108 0056 0392     		str	r2, [sp, #12]
 109              		.loc 1 383 3 view .LVU25
 110 0058 039A     		ldr	r2, [sp, #12]
 111              	.LBE7:
 112              		.loc 1 383 3 view .LVU26
 384:Core/Src/main.c ****   __HAL_RCC_GPIOD_CLK_ENABLE();
 113              		.loc 1 384 3 view .LVU27
 114              	.LBB8:
 115              		.loc 1 384 3 view .LVU28
 116              		.loc 1 384 3 view .LVU29
 117 005a DA6C     		ldr	r2, [r3, #76]
 118 005c 42F00802 		orr	r2, r2, #8
 119 0060 DA64     		str	r2, [r3, #76]
 120              		.loc 1 384 3 view .LVU30
 121 0062 DB6C     		ldr	r3, [r3, #76]
 122 0064 03F00803 		and	r3, r3, #8
 123 0068 0493     		str	r3, [sp, #16]
 124              		.loc 1 384 3 view .LVU31
 125 006a 049B     		ldr	r3, [sp, #16]
 126              	.LBE8:
 127              		.loc 1 384 3 view .LVU32
 385:Core/Src/main.c **** 
 386:Core/Src/main.c ****   /* Set lines low */
 387:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOA, GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3
ARM GAS  /tmp/ccewbfMl.s 			page 10


 128              		.loc 1 387 3 view .LVU33
 129 006c 284E     		ldr	r6, .L3+4
 130 006e 2246     		mov	r2, r4
 131 0070 3F21     		movs	r1, #63
 132 0072 3046     		mov	r0, r6
 133 0074 FFF7FEFF 		bl	HAL_GPIO_WritePin
 134              	.LVL0:
 388:Core/Src/main.c ****                                       |GPIO_PIN_4|GPIO_PIN_5, GPIO_PIN_RESET);
 389:Core/Src/main.c **** 
 390:Core/Src/main.c **** 
 391:Core/Src/main.c ****   /* Set Columns as inputs */
 392:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3|GPIO_PIN_4
 135              		.loc 1 392 3 view .LVU34
 136              		.loc 1 392 23 is_stmt 0 view .LVU35
 137 0078 4FF6FF73 		movw	r3, #65535
 138 007c 0593     		str	r3, [sp, #20]
 393:Core/Src/main.c ****                         |GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10
 394:Core/Src/main.c ****                         |GPIO_PIN_11|GPIO_PIN_12|GPIO_PIN_13|GPIO_PIN_14|GPIO_PIN_15;
 395:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 139              		.loc 1 395 3 is_stmt 1 view .LVU36
 140              		.loc 1 395 24 is_stmt 0 view .LVU37
 141 007e 0694     		str	r4, [sp, #24]
 396:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_PULLDOWN;
 142              		.loc 1 396 3 is_stmt 1 view .LVU38
 143              		.loc 1 396 24 is_stmt 0 view .LVU39
 144 0080 0225     		movs	r5, #2
 145 0082 0795     		str	r5, [sp, #28]
 397:Core/Src/main.c ****   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 146              		.loc 1 397 3 is_stmt 1 view .LVU40
 147 0084 05A9     		add	r1, sp, #20
 148 0086 2348     		ldr	r0, .L3+8
 149 0088 FFF7FEFF 		bl	HAL_GPIO_Init
 150              	.LVL1:
 398:Core/Src/main.c **** 
 399:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3
 151              		.loc 1 399 3 view .LVU41
 152              		.loc 1 399 23 is_stmt 0 view .LVU42
 153 008c FF23     		movs	r3, #255
 154 008e 0593     		str	r3, [sp, #20]
 400:Core/Src/main.c ****                         |GPIO_PIN_4|GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7;
 401:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 155              		.loc 1 401 3 is_stmt 1 view .LVU43
 156              		.loc 1 401 24 is_stmt 0 view .LVU44
 157 0090 0694     		str	r4, [sp, #24]
 402:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_PULLDOWN;
 158              		.loc 1 402 3 is_stmt 1 view .LVU45
 159              		.loc 1 402 24 is_stmt 0 view .LVU46
 160 0092 0795     		str	r5, [sp, #28]
 403:Core/Src/main.c ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 161              		.loc 1 403 3 is_stmt 1 view .LVU47
 162 0094 204F     		ldr	r7, .L3+12
 163 0096 05A9     		add	r1, sp, #20
 164 0098 3846     		mov	r0, r7
 165 009a FFF7FEFF 		bl	HAL_GPIO_Init
 166              	.LVL2:
 404:Core/Src/main.c **** 
 405:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10;
ARM GAS  /tmp/ccewbfMl.s 			page 11


 167              		.loc 1 405 3 view .LVU48
 168              		.loc 1 405 23 is_stmt 0 view .LVU49
 169 009e 4FF4F863 		mov	r3, #1984
 170 00a2 0593     		str	r3, [sp, #20]
 406:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 171              		.loc 1 406 3 is_stmt 1 view .LVU50
 172              		.loc 1 406 24 is_stmt 0 view .LVU51
 173 00a4 0694     		str	r4, [sp, #24]
 407:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_PULLDOWN;
 174              		.loc 1 407 3 is_stmt 1 view .LVU52
 175              		.loc 1 407 24 is_stmt 0 view .LVU53
 176 00a6 0795     		str	r5, [sp, #28]
 408:Core/Src/main.c ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 177              		.loc 1 408 3 is_stmt 1 view .LVU54
 178 00a8 05A9     		add	r1, sp, #20
 179 00aa 3046     		mov	r0, r6
 180 00ac FFF7FEFF 		bl	HAL_GPIO_Init
 181              	.LVL3:
 409:Core/Src/main.c **** 
 410:Core/Src/main.c ****   /* Set lines as outputs */
 411:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3
 182              		.loc 1 411 3 view .LVU55
 183              		.loc 1 411 23 is_stmt 0 view .LVU56
 184 00b0 3F23     		movs	r3, #63
 185 00b2 0593     		str	r3, [sp, #20]
 412:Core/Src/main.c ****                         |GPIO_PIN_4|GPIO_PIN_5;
 413:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 186              		.loc 1 413 3 is_stmt 1 view .LVU57
 187              		.loc 1 413 24 is_stmt 0 view .LVU58
 188 00b4 0123     		movs	r3, #1
 189 00b6 0693     		str	r3, [sp, #24]
 414:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 190              		.loc 1 414 3 is_stmt 1 view .LVU59
 191              		.loc 1 414 24 is_stmt 0 view .LVU60
 192 00b8 0794     		str	r4, [sp, #28]
 415:Core/Src/main.c ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 193              		.loc 1 415 3 is_stmt 1 view .LVU61
 194 00ba 05A9     		add	r1, sp, #20
 195 00bc 3046     		mov	r0, r6
 196 00be FFF7FEFF 		bl	HAL_GPIO_Init
 197              	.LVL4:
 416:Core/Src/main.c **** 
 417:Core/Src/main.c ****   /* Everything else as ANALOG */
 418:Core/Src/main.c ****   // GPIO_InitStruct.Pin = GPIO_PIN_14|GPIO_PIN_15;
 419:Core/Src/main.c ****   // GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 420:Core/Src/main.c ****   // GPIO_InitStruct.Pull = GPIO_NOPULL;
 421:Core/Src/main.c ****   // HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 422:Core/Src/main.c **** 
 423:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_15;
 198              		.loc 1 423 3 view .LVU62
 199              		.loc 1 423 23 is_stmt 0 view .LVU63
 200 00c2 4FF40043 		mov	r3, #32768
 201 00c6 0593     		str	r3, [sp, #20]
 424:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 202              		.loc 1 424 3 is_stmt 1 view .LVU64
 203              		.loc 1 424 24 is_stmt 0 view .LVU65
 204 00c8 0325     		movs	r5, #3
ARM GAS  /tmp/ccewbfMl.s 			page 12


 205 00ca 0695     		str	r5, [sp, #24]
 425:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 206              		.loc 1 425 3 is_stmt 1 view .LVU66
 207              		.loc 1 425 24 is_stmt 0 view .LVU67
 208 00cc 0794     		str	r4, [sp, #28]
 426:Core/Src/main.c ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 209              		.loc 1 426 3 is_stmt 1 view .LVU68
 210 00ce 05A9     		add	r1, sp, #20
 211 00d0 3046     		mov	r0, r6
 212 00d2 FFF7FEFF 		bl	HAL_GPIO_Init
 213              	.LVL5:
 427:Core/Src/main.c **** 
 428:Core/Src/main.c ****   GPIO_InitStruct.Pin =   GPIO_PIN_12|GPIO_PIN_15;
 214              		.loc 1 428 3 view .LVU69
 215              		.loc 1 428 23 is_stmt 0 view .LVU70
 216 00d6 4FF41043 		mov	r3, #36864
 217 00da 0593     		str	r3, [sp, #20]
 429:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 218              		.loc 1 429 3 is_stmt 1 view .LVU71
 219              		.loc 1 429 24 is_stmt 0 view .LVU72
 220 00dc 0695     		str	r5, [sp, #24]
 430:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 221              		.loc 1 430 3 is_stmt 1 view .LVU73
 222              		.loc 1 430 24 is_stmt 0 view .LVU74
 223 00de 0794     		str	r4, [sp, #28]
 431:Core/Src/main.c ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 224              		.loc 1 431 3 is_stmt 1 view .LVU75
 225 00e0 05A9     		add	r1, sp, #20
 226 00e2 3846     		mov	r0, r7
 227 00e4 FFF7FEFF 		bl	HAL_GPIO_Init
 228              	.LVL6:
 432:Core/Src/main.c **** 
 433:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_2;
 229              		.loc 1 433 3 view .LVU76
 230              		.loc 1 433 23 is_stmt 0 view .LVU77
 231 00e8 0423     		movs	r3, #4
 232 00ea 0593     		str	r3, [sp, #20]
 434:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 233              		.loc 1 434 3 is_stmt 1 view .LVU78
 234              		.loc 1 434 24 is_stmt 0 view .LVU79
 235 00ec 0695     		str	r5, [sp, #24]
 435:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 236              		.loc 1 435 3 is_stmt 1 view .LVU80
 237              		.loc 1 435 24 is_stmt 0 view .LVU81
 238 00ee 0794     		str	r4, [sp, #28]
 436:Core/Src/main.c ****   HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 239              		.loc 1 436 3 is_stmt 1 view .LVU82
 240 00f0 05A9     		add	r1, sp, #20
 241 00f2 0A48     		ldr	r0, .L3+16
 242 00f4 FFF7FEFF 		bl	HAL_GPIO_Init
 243              	.LVL7:
 437:Core/Src/main.c **** 
 438:Core/Src/main.c ****   /*Configure GPIO pin : PH3 */
 439:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_3;
 244              		.loc 1 439 3 view .LVU83
 245              		.loc 1 439 23 is_stmt 0 view .LVU84
 246 00f8 0823     		movs	r3, #8
ARM GAS  /tmp/ccewbfMl.s 			page 13


 247 00fa 0593     		str	r3, [sp, #20]
 440:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 248              		.loc 1 440 3 is_stmt 1 view .LVU85
 249              		.loc 1 440 24 is_stmt 0 view .LVU86
 250 00fc 0695     		str	r5, [sp, #24]
 441:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 251              		.loc 1 441 3 is_stmt 1 view .LVU87
 252              		.loc 1 441 24 is_stmt 0 view .LVU88
 253 00fe 0794     		str	r4, [sp, #28]
 442:Core/Src/main.c ****   HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 254              		.loc 1 442 3 is_stmt 1 view .LVU89
 255 0100 05A9     		add	r1, sp, #20
 256 0102 0748     		ldr	r0, .L3+20
 257 0104 FFF7FEFF 		bl	HAL_GPIO_Init
 258              	.LVL8:
 443:Core/Src/main.c **** 
 444:Core/Src/main.c **** }
 259              		.loc 1 444 1 is_stmt 0 view .LVU90
 260 0108 0BB0     		add	sp, sp, #44
 261              	.LCFI2:
 262              		.cfi_def_cfa_offset 20
 263              		@ sp needed
 264 010a F0BD     		pop	{r4, r5, r6, r7, pc}
 265              	.L4:
 266              		.align	2
 267              	.L3:
 268 010c 00100240 		.word	1073876992
 269 0110 00000242 		.word	1107427328
 270 0114 00080242 		.word	1107429376
 271 0118 00040242 		.word	1107428352
 272 011c 000C0242 		.word	1107430400
 273 0120 001C0242 		.word	1107434496
 274              		.cfi_endproc
 275              	.LFE163:
 277              		.section	.text._write,"ax",%progbits
 278              		.align	1
 279              		.global	_write
 280              		.syntax unified
 281              		.thumb
 282              		.thumb_func
 284              	_write:
 285              	.LVL9:
 286              	.LFB156:
  64:Core/Src/main.c ****     static uint8_t rc = USBD_OK;
 287              		.loc 1 64 42 is_stmt 1 view -0
 288              		.cfi_startproc
 289              		@ args = 0, pretend = 0, frame = 0
 290              		@ frame_needed = 0, uses_anonymous_args = 0
  64:Core/Src/main.c ****     static uint8_t rc = USBD_OK;
 291              		.loc 1 64 42 is_stmt 0 view .LVU92
 292 0000 38B5     		push	{r3, r4, r5, lr}
 293              	.LCFI3:
 294              		.cfi_def_cfa_offset 16
 295              		.cfi_offset 3, -16
 296              		.cfi_offset 4, -12
 297              		.cfi_offset 5, -8
 298              		.cfi_offset 14, -4
ARM GAS  /tmp/ccewbfMl.s 			page 14


 299 0002 0D46     		mov	r5, r1
 300 0004 1446     		mov	r4, r2
 301              	.LVL10:
 302              	.L6:
  65:Core/Src/main.c **** 
 303              		.loc 1 65 5 is_stmt 1 discriminator 1 view .LVU93
  67:Core/Src/main.c ****         rc = CDC_Transmit_FS((uint8_t*)ptr, len);
 304              		.loc 1 67 5 discriminator 1 view .LVU94
  68:Core/Src/main.c ****     } while (USBD_BUSY == rc);
 305              		.loc 1 68 9 discriminator 1 view .LVU95
  68:Core/Src/main.c ****     } while (USBD_BUSY == rc);
 306              		.loc 1 68 14 is_stmt 0 discriminator 1 view .LVU96
 307 0006 A1B2     		uxth	r1, r4
 308 0008 2846     		mov	r0, r5
 309 000a FFF7FEFF 		bl	CDC_Transmit_FS
 310              	.LVL11:
  68:Core/Src/main.c ****     } while (USBD_BUSY == rc);
 311              		.loc 1 68 12 discriminator 1 view .LVU97
 312 000e 054B     		ldr	r3, .L10
 313 0010 1870     		strb	r0, [r3]
  69:Core/Src/main.c **** 
 314              		.loc 1 69 24 is_stmt 1 discriminator 1 view .LVU98
 315 0012 0128     		cmp	r0, #1
 316 0014 F7D0     		beq	.L6
  71:Core/Src/main.c ****         /// NOTE: Should never reach here.
 317              		.loc 1 71 5 view .LVU99
  71:Core/Src/main.c ****         /// NOTE: Should never reach here.
 318              		.loc 1 71 8 is_stmt 0 view .LVU100
 319 0016 0328     		cmp	r0, #3
 320 0018 01D0     		beq	.L8
  76:Core/Src/main.c **** }
 321              		.loc 1 76 12 view .LVU101
 322 001a 2046     		mov	r0, r4
 323              	.L5:
  77:Core/Src/main.c **** 
 324              		.loc 1 77 1 view .LVU102
 325 001c 38BD     		pop	{r3, r4, r5, pc}
 326              	.LVL12:
 327              	.L8:
  74:Core/Src/main.c ****     }
 328              		.loc 1 74 16 view .LVU103
 329 001e 0020     		movs	r0, #0
 330 0020 FCE7     		b	.L5
 331              	.L11:
 332 0022 00BF     		.align	2
 333              	.L10:
 334 0024 00000000 		.word	rc.0
 335              		.cfi_endproc
 336              	.LFE156:
 338              		.section	.text.Error_Handler,"ax",%progbits
 339              		.align	1
 340              		.global	Error_Handler
 341              		.syntax unified
 342              		.thumb
 343              		.thumb_func
 345              	Error_Handler:
 346              	.LFB164:
ARM GAS  /tmp/ccewbfMl.s 			page 15


 445:Core/Src/main.c **** 
 446:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 447:Core/Src/main.c **** 
 448:Core/Src/main.c **** /* USER CODE END 4 */
 449:Core/Src/main.c **** 
 450:Core/Src/main.c **** /**
 451:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 452:Core/Src/main.c ****   * @retval None
 453:Core/Src/main.c ****   */
 454:Core/Src/main.c **** void Error_Handler(void)
 455:Core/Src/main.c **** {
 347              		.loc 1 455 1 is_stmt 1 view -0
 348              		.cfi_startproc
 349              		@ Volatile: function does not return.
 350              		@ args = 0, pretend = 0, frame = 0
 351              		@ frame_needed = 0, uses_anonymous_args = 0
 352              		@ link register save eliminated.
 456:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 457:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 458:Core/Src/main.c ****   __disable_irq();
 353              		.loc 1 458 3 view .LVU105
 354              	.LBB9:
 355              	.LBI9:
 356              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.2.0
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     08. May 2019
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2019 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/ccewbfMl.s 			page 16


  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
ARM GAS  /tmp/ccewbfMl.s 			page 17


  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 120:Drivers/CMSIS/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 122:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****            in the used linker script.
 129:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 130:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 131:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 133:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 135:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 141:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 146:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
ARM GAS  /tmp/ccewbfMl.s 			page 18


 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 151:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 156:Drivers/CMSIS/Include/cmsis_gcc.h ****  
 157:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 161:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 162:Drivers/CMSIS/Include/cmsis_gcc.h ****  
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   _start();
 164:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 165:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 168:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 180:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute((used, section(".vectors")))
 183:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 187:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 188:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 189:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 190:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 191:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 192:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 193:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 194:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 195:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 198:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 200:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 201:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 202:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 203:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 204:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
ARM GAS  /tmp/ccewbfMl.s 			page 19


 205:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 206:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 207:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 357              		.loc 2 207 27 view .LVU106
 358              	.LBB10:
 208:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 209:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 359              		.loc 2 209 3 view .LVU107
 360              		.syntax unified
 361              	@ 209 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 362 0000 72B6     		cpsid i
 363              	@ 0 "" 2
 364              		.thumb
 365              		.syntax unified
 366              	.L13:
 367              	.LBE10:
 368              	.LBE9:
 459:Core/Src/main.c ****   while (1)
 369              		.loc 1 459 3 discriminator 1 view .LVU108
 460:Core/Src/main.c ****   {
 461:Core/Src/main.c ****   }
 370              		.loc 1 461 3 discriminator 1 view .LVU109
 459:Core/Src/main.c ****   while (1)
 371              		.loc 1 459 9 discriminator 1 view .LVU110
 372 0002 FEE7     		b	.L13
 373              		.cfi_endproc
 374              	.LFE164:
 376              		.section	.text.MX_I2C1_Init,"ax",%progbits
 377              		.align	1
 378              		.syntax unified
 379              		.thumb
 380              		.thumb_func
 382              	MX_I2C1_Init:
 383              	.LFB159:
 200:Core/Src/main.c **** 
 384              		.loc 1 200 1 view -0
 385              		.cfi_startproc
 386              		@ args = 0, pretend = 0, frame = 0
 387              		@ frame_needed = 0, uses_anonymous_args = 0
 388 0000 08B5     		push	{r3, lr}
 389              	.LCFI4:
 390              		.cfi_def_cfa_offset 8
 391              		.cfi_offset 3, -8
 392              		.cfi_offset 14, -4
 209:Core/Src/main.c ****   hi2c1.Init.Timing = 0x10B0DCFB;
 393              		.loc 1 209 3 view .LVU112
 209:Core/Src/main.c ****   hi2c1.Init.Timing = 0x10B0DCFB;
 394              		.loc 1 209 18 is_stmt 0 view .LVU113
 395 0002 1348     		ldr	r0, .L22
 396 0004 134B     		ldr	r3, .L22+4
 397 0006 0360     		str	r3, [r0]
 210:Core/Src/main.c ****   hi2c1.Init.OwnAddress1 = 0;
 398              		.loc 1 210 3 is_stmt 1 view .LVU114
 210:Core/Src/main.c ****   hi2c1.Init.OwnAddress1 = 0;
 399              		.loc 1 210 21 is_stmt 0 view .LVU115
 400 0008 A3F13D53 		sub	r3, r3, #792723456
 401 000c A3F57723 		sub	r3, r3, #1011712
ARM GAS  /tmp/ccewbfMl.s 			page 20


 402 0010 A3F20573 		subw	r3, r3, #1797
 403 0014 4360     		str	r3, [r0, #4]
 211:Core/Src/main.c ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 404              		.loc 1 211 3 is_stmt 1 view .LVU116
 211:Core/Src/main.c ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 405              		.loc 1 211 26 is_stmt 0 view .LVU117
 406 0016 0023     		movs	r3, #0
 407 0018 8360     		str	r3, [r0, #8]
 212:Core/Src/main.c ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 408              		.loc 1 212 3 is_stmt 1 view .LVU118
 212:Core/Src/main.c ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 409              		.loc 1 212 29 is_stmt 0 view .LVU119
 410 001a 0122     		movs	r2, #1
 411 001c C260     		str	r2, [r0, #12]
 213:Core/Src/main.c ****   hi2c1.Init.OwnAddress2 = 0;
 412              		.loc 1 213 3 is_stmt 1 view .LVU120
 213:Core/Src/main.c ****   hi2c1.Init.OwnAddress2 = 0;
 413              		.loc 1 213 30 is_stmt 0 view .LVU121
 414 001e 0361     		str	r3, [r0, #16]
 214:Core/Src/main.c ****   hi2c1.Init.OwnAddress2Masks = I2C_OA2_NOMASK;
 415              		.loc 1 214 3 is_stmt 1 view .LVU122
 214:Core/Src/main.c ****   hi2c1.Init.OwnAddress2Masks = I2C_OA2_NOMASK;
 416              		.loc 1 214 26 is_stmt 0 view .LVU123
 417 0020 4361     		str	r3, [r0, #20]
 215:Core/Src/main.c ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 418              		.loc 1 215 3 is_stmt 1 view .LVU124
 215:Core/Src/main.c ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 419              		.loc 1 215 31 is_stmt 0 view .LVU125
 420 0022 8361     		str	r3, [r0, #24]
 216:Core/Src/main.c ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 421              		.loc 1 216 3 is_stmt 1 view .LVU126
 216:Core/Src/main.c ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 422              		.loc 1 216 30 is_stmt 0 view .LVU127
 423 0024 C361     		str	r3, [r0, #28]
 217:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 424              		.loc 1 217 3 is_stmt 1 view .LVU128
 217:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 425              		.loc 1 217 28 is_stmt 0 view .LVU129
 426 0026 0362     		str	r3, [r0, #32]
 218:Core/Src/main.c ****   {
 427              		.loc 1 218 3 is_stmt 1 view .LVU130
 218:Core/Src/main.c ****   {
 428              		.loc 1 218 7 is_stmt 0 view .LVU131
 429 0028 FFF7FEFF 		bl	HAL_I2C_Init
 430              	.LVL13:
 218:Core/Src/main.c ****   {
 431              		.loc 1 218 6 view .LVU132
 432 002c 50B9     		cbnz	r0, .L19
 225:Core/Src/main.c ****   {
 433              		.loc 1 225 3 is_stmt 1 view .LVU133
 225:Core/Src/main.c ****   {
 434              		.loc 1 225 7 is_stmt 0 view .LVU134
 435 002e 0021     		movs	r1, #0
 436 0030 0748     		ldr	r0, .L22
 437 0032 FFF7FEFF 		bl	HAL_I2CEx_ConfigAnalogFilter
 438              	.LVL14:
 225:Core/Src/main.c ****   {
ARM GAS  /tmp/ccewbfMl.s 			page 21


 439              		.loc 1 225 6 view .LVU135
 440 0036 38B9     		cbnz	r0, .L20
 232:Core/Src/main.c ****   {
 441              		.loc 1 232 3 is_stmt 1 view .LVU136
 232:Core/Src/main.c ****   {
 442              		.loc 1 232 7 is_stmt 0 view .LVU137
 443 0038 0021     		movs	r1, #0
 444 003a 0548     		ldr	r0, .L22
 445 003c FFF7FEFF 		bl	HAL_I2CEx_ConfigDigitalFilter
 446              	.LVL15:
 232:Core/Src/main.c ****   {
 447              		.loc 1 232 6 view .LVU138
 448 0040 20B9     		cbnz	r0, .L21
 240:Core/Src/main.c **** 
 449              		.loc 1 240 1 view .LVU139
 450 0042 08BD     		pop	{r3, pc}
 451              	.L19:
 220:Core/Src/main.c ****   }
 452              		.loc 1 220 5 is_stmt 1 view .LVU140
 453 0044 FFF7FEFF 		bl	Error_Handler
 454              	.LVL16:
 455              	.L20:
 227:Core/Src/main.c ****   }
 456              		.loc 1 227 5 view .LVU141
 457 0048 FFF7FEFF 		bl	Error_Handler
 458              	.LVL17:
 459              	.L21:
 234:Core/Src/main.c ****   }
 460              		.loc 1 234 5 view .LVU142
 461 004c FFF7FEFF 		bl	Error_Handler
 462              	.LVL18:
 463              	.L23:
 464              		.align	2
 465              	.L22:
 466 0050 00000000 		.word	hi2c1
 467 0054 00540040 		.word	1073763328
 468              		.cfi_endproc
 469              	.LFE159:
 471              		.section	.text.MX_I2C2_Init,"ax",%progbits
 472              		.align	1
 473              		.syntax unified
 474              		.thumb
 475              		.thumb_func
 477              	MX_I2C2_Init:
 478              	.LFB160:
 248:Core/Src/main.c **** 
 479              		.loc 1 248 1 view -0
 480              		.cfi_startproc
 481              		@ args = 0, pretend = 0, frame = 0
 482              		@ frame_needed = 0, uses_anonymous_args = 0
 483 0000 08B5     		push	{r3, lr}
 484              	.LCFI5:
 485              		.cfi_def_cfa_offset 8
 486              		.cfi_offset 3, -8
 487              		.cfi_offset 14, -4
 257:Core/Src/main.c ****   hi2c2.Init.Timing = 0x10B0DCFB;
 488              		.loc 1 257 3 view .LVU144
ARM GAS  /tmp/ccewbfMl.s 			page 22


 257:Core/Src/main.c ****   hi2c2.Init.Timing = 0x10B0DCFB;
 489              		.loc 1 257 18 is_stmt 0 view .LVU145
 490 0002 1348     		ldr	r0, .L32
 491 0004 134B     		ldr	r3, .L32+4
 492 0006 0360     		str	r3, [r0]
 258:Core/Src/main.c ****   hi2c2.Init.OwnAddress1 = 0;
 493              		.loc 1 258 3 is_stmt 1 view .LVU146
 258:Core/Src/main.c ****   hi2c2.Init.OwnAddress1 = 0;
 494              		.loc 1 258 21 is_stmt 0 view .LVU147
 495 0008 A3F13D53 		sub	r3, r3, #792723456
 496 000c A3F57723 		sub	r3, r3, #1011712
 497 0010 A3F60533 		subw	r3, r3, #2821
 498 0014 4360     		str	r3, [r0, #4]
 259:Core/Src/main.c ****   hi2c2.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 499              		.loc 1 259 3 is_stmt 1 view .LVU148
 259:Core/Src/main.c ****   hi2c2.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 500              		.loc 1 259 26 is_stmt 0 view .LVU149
 501 0016 0023     		movs	r3, #0
 502 0018 8360     		str	r3, [r0, #8]
 260:Core/Src/main.c ****   hi2c2.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 503              		.loc 1 260 3 is_stmt 1 view .LVU150
 260:Core/Src/main.c ****   hi2c2.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 504              		.loc 1 260 29 is_stmt 0 view .LVU151
 505 001a 0122     		movs	r2, #1
 506 001c C260     		str	r2, [r0, #12]
 261:Core/Src/main.c ****   hi2c2.Init.OwnAddress2 = 0;
 507              		.loc 1 261 3 is_stmt 1 view .LVU152
 261:Core/Src/main.c ****   hi2c2.Init.OwnAddress2 = 0;
 508              		.loc 1 261 30 is_stmt 0 view .LVU153
 509 001e 0361     		str	r3, [r0, #16]
 262:Core/Src/main.c ****   hi2c2.Init.OwnAddress2Masks = I2C_OA2_NOMASK;
 510              		.loc 1 262 3 is_stmt 1 view .LVU154
 262:Core/Src/main.c ****   hi2c2.Init.OwnAddress2Masks = I2C_OA2_NOMASK;
 511              		.loc 1 262 26 is_stmt 0 view .LVU155
 512 0020 4361     		str	r3, [r0, #20]
 263:Core/Src/main.c ****   hi2c2.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 513              		.loc 1 263 3 is_stmt 1 view .LVU156
 263:Core/Src/main.c ****   hi2c2.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 514              		.loc 1 263 31 is_stmt 0 view .LVU157
 515 0022 8361     		str	r3, [r0, #24]
 264:Core/Src/main.c ****   hi2c2.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 516              		.loc 1 264 3 is_stmt 1 view .LVU158
 264:Core/Src/main.c ****   hi2c2.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 517              		.loc 1 264 30 is_stmt 0 view .LVU159
 518 0024 C361     		str	r3, [r0, #28]
 265:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c2) != HAL_OK)
 519              		.loc 1 265 3 is_stmt 1 view .LVU160
 265:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c2) != HAL_OK)
 520              		.loc 1 265 28 is_stmt 0 view .LVU161
 521 0026 0362     		str	r3, [r0, #32]
 266:Core/Src/main.c ****   {
 522              		.loc 1 266 3 is_stmt 1 view .LVU162
 266:Core/Src/main.c ****   {
 523              		.loc 1 266 7 is_stmt 0 view .LVU163
 524 0028 FFF7FEFF 		bl	HAL_I2C_Init
 525              	.LVL19:
 266:Core/Src/main.c ****   {
ARM GAS  /tmp/ccewbfMl.s 			page 23


 526              		.loc 1 266 6 view .LVU164
 527 002c 50B9     		cbnz	r0, .L29
 273:Core/Src/main.c ****   {
 528              		.loc 1 273 3 is_stmt 1 view .LVU165
 273:Core/Src/main.c ****   {
 529              		.loc 1 273 7 is_stmt 0 view .LVU166
 530 002e 0021     		movs	r1, #0
 531 0030 0748     		ldr	r0, .L32
 532 0032 FFF7FEFF 		bl	HAL_I2CEx_ConfigAnalogFilter
 533              	.LVL20:
 273:Core/Src/main.c ****   {
 534              		.loc 1 273 6 view .LVU167
 535 0036 38B9     		cbnz	r0, .L30
 280:Core/Src/main.c ****   {
 536              		.loc 1 280 3 is_stmt 1 view .LVU168
 280:Core/Src/main.c ****   {
 537              		.loc 1 280 7 is_stmt 0 view .LVU169
 538 0038 0021     		movs	r1, #0
 539 003a 0548     		ldr	r0, .L32
 540 003c FFF7FEFF 		bl	HAL_I2CEx_ConfigDigitalFilter
 541              	.LVL21:
 280:Core/Src/main.c ****   {
 542              		.loc 1 280 6 view .LVU170
 543 0040 20B9     		cbnz	r0, .L31
 288:Core/Src/main.c **** 
 544              		.loc 1 288 1 view .LVU171
 545 0042 08BD     		pop	{r3, pc}
 546              	.L29:
 268:Core/Src/main.c ****   }
 547              		.loc 1 268 5 is_stmt 1 view .LVU172
 548 0044 FFF7FEFF 		bl	Error_Handler
 549              	.LVL22:
 550              	.L30:
 275:Core/Src/main.c ****   }
 551              		.loc 1 275 5 view .LVU173
 552 0048 FFF7FEFF 		bl	Error_Handler
 553              	.LVL23:
 554              	.L31:
 282:Core/Src/main.c ****   }
 555              		.loc 1 282 5 view .LVU174
 556 004c FFF7FEFF 		bl	Error_Handler
 557              	.LVL24:
 558              	.L33:
 559              		.align	2
 560              	.L32:
 561 0050 00000000 		.word	hi2c2
 562 0054 00580040 		.word	1073764352
 563              		.cfi_endproc
 564              	.LFE160:
 566              		.section	.text.MX_ICACHE_Init,"ax",%progbits
 567              		.align	1
 568              		.syntax unified
 569              		.thumb
 570              		.thumb_func
 572              	MX_ICACHE_Init:
 573              	.LFB161:
 296:Core/Src/main.c **** 
ARM GAS  /tmp/ccewbfMl.s 			page 24


 574              		.loc 1 296 1 view -0
 575              		.cfi_startproc
 576              		@ args = 0, pretend = 0, frame = 0
 577              		@ frame_needed = 0, uses_anonymous_args = 0
 578 0000 08B5     		push	{r3, lr}
 579              	.LCFI6:
 580              		.cfi_def_cfa_offset 8
 581              		.cfi_offset 3, -8
 582              		.cfi_offset 14, -4
 308:Core/Src/main.c ****   {
 583              		.loc 1 308 3 view .LVU176
 308:Core/Src/main.c ****   {
 584              		.loc 1 308 7 is_stmt 0 view .LVU177
 585 0002 0020     		movs	r0, #0
 586 0004 FFF7FEFF 		bl	HAL_ICACHE_ConfigAssociativityMode
 587              	.LVL25:
 308:Core/Src/main.c ****   {
 588              		.loc 1 308 6 view .LVU178
 589 0008 18B9     		cbnz	r0, .L38
 312:Core/Src/main.c ****   {
 590              		.loc 1 312 3 is_stmt 1 view .LVU179
 312:Core/Src/main.c ****   {
 591              		.loc 1 312 7 is_stmt 0 view .LVU180
 592 000a FFF7FEFF 		bl	HAL_ICACHE_Enable
 593              	.LVL26:
 312:Core/Src/main.c ****   {
 594              		.loc 1 312 6 view .LVU181
 595 000e 10B9     		cbnz	r0, .L39
 320:Core/Src/main.c **** 
 596              		.loc 1 320 1 view .LVU182
 597 0010 08BD     		pop	{r3, pc}
 598              	.L38:
 310:Core/Src/main.c ****   }
 599              		.loc 1 310 5 is_stmt 1 view .LVU183
 600 0012 FFF7FEFF 		bl	Error_Handler
 601              	.LVL27:
 602              	.L39:
 314:Core/Src/main.c ****   }
 603              		.loc 1 314 5 view .LVU184
 604 0016 FFF7FEFF 		bl	Error_Handler
 605              	.LVL28:
 606              		.cfi_endproc
 607              	.LFE161:
 609              		.section	.text.SystemClock_Config,"ax",%progbits
 610              		.align	1
 611              		.global	SystemClock_Config
 612              		.syntax unified
 613              		.thumb
 614              		.thumb_func
 616              	SystemClock_Config:
 617              	.LFB158:
 151:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 618              		.loc 1 151 1 view -0
 619              		.cfi_startproc
 620              		@ args = 0, pretend = 0, frame = 96
 621              		@ frame_needed = 0, uses_anonymous_args = 0
 622 0000 00B5     		push	{lr}
ARM GAS  /tmp/ccewbfMl.s 			page 25


 623              	.LCFI7:
 624              		.cfi_def_cfa_offset 4
 625              		.cfi_offset 14, -4
 626 0002 99B0     		sub	sp, sp, #100
 627              	.LCFI8:
 628              		.cfi_def_cfa_offset 104
 152:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 629              		.loc 1 152 3 view .LVU186
 152:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 630              		.loc 1 152 22 is_stmt 0 view .LVU187
 631 0004 4822     		movs	r2, #72
 632 0006 0021     		movs	r1, #0
 633 0008 06A8     		add	r0, sp, #24
 634 000a FFF7FEFF 		bl	memset
 635              	.LVL29:
 153:Core/Src/main.c **** 
 636              		.loc 1 153 3 is_stmt 1 view .LVU188
 153:Core/Src/main.c **** 
 637              		.loc 1 153 22 is_stmt 0 view .LVU189
 638 000e 0020     		movs	r0, #0
 639 0010 0190     		str	r0, [sp, #4]
 640 0012 0290     		str	r0, [sp, #8]
 641 0014 0390     		str	r0, [sp, #12]
 642 0016 0490     		str	r0, [sp, #16]
 643 0018 0590     		str	r0, [sp, #20]
 157:Core/Src/main.c ****   {
 644              		.loc 1 157 3 is_stmt 1 view .LVU190
 157:Core/Src/main.c ****   {
 645              		.loc 1 157 7 is_stmt 0 view .LVU191
 646 001a FFF7FEFF 		bl	HAL_PWREx_ControlVoltageScaling
 647              	.LVL30:
 157:Core/Src/main.c ****   {
 648              		.loc 1 157 6 view .LVU192
 649 001e 20BB     		cbnz	r0, .L45
 165:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 650              		.loc 1 165 3 is_stmt 1 view .LVU193
 165:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 651              		.loc 1 165 36 is_stmt 0 view .LVU194
 652 0020 0123     		movs	r3, #1
 653 0022 0693     		str	r3, [sp, #24]
 166:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 654              		.loc 1 166 3 is_stmt 1 view .LVU195
 166:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 655              		.loc 1 166 30 is_stmt 0 view .LVU196
 656 0024 4FF48033 		mov	r3, #65536
 657 0028 0793     		str	r3, [sp, #28]
 167:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 658              		.loc 1 167 3 is_stmt 1 view .LVU197
 167:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 659              		.loc 1 167 34 is_stmt 0 view .LVU198
 660 002a 0223     		movs	r3, #2
 661 002c 1193     		str	r3, [sp, #68]
 168:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 2;
 662              		.loc 1 168 3 is_stmt 1 view .LVU199
 168:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 2;
 663              		.loc 1 168 35 is_stmt 0 view .LVU200
 664 002e 0322     		movs	r2, #3
ARM GAS  /tmp/ccewbfMl.s 			page 26


 665 0030 1292     		str	r2, [sp, #72]
 169:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 12;
 666              		.loc 1 169 3 is_stmt 1 view .LVU201
 169:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 12;
 667              		.loc 1 169 30 is_stmt 0 view .LVU202
 668 0032 1393     		str	r3, [sp, #76]
 170:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV7;
 669              		.loc 1 170 3 is_stmt 1 view .LVU203
 170:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV7;
 670              		.loc 1 170 30 is_stmt 0 view .LVU204
 671 0034 0C22     		movs	r2, #12
 672 0036 1492     		str	r2, [sp, #80]
 171:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = RCC_PLLQ_DIV2;
 673              		.loc 1 171 3 is_stmt 1 view .LVU205
 171:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = RCC_PLLQ_DIV2;
 674              		.loc 1 171 30 is_stmt 0 view .LVU206
 675 0038 0722     		movs	r2, #7
 676 003a 1592     		str	r2, [sp, #84]
 172:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = RCC_PLLR_DIV2;
 677              		.loc 1 172 3 is_stmt 1 view .LVU207
 172:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = RCC_PLLR_DIV2;
 678              		.loc 1 172 30 is_stmt 0 view .LVU208
 679 003c 1693     		str	r3, [sp, #88]
 173:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 680              		.loc 1 173 3 is_stmt 1 view .LVU209
 173:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 681              		.loc 1 173 30 is_stmt 0 view .LVU210
 682 003e 1793     		str	r3, [sp, #92]
 174:Core/Src/main.c ****   {
 683              		.loc 1 174 3 is_stmt 1 view .LVU211
 174:Core/Src/main.c ****   {
 684              		.loc 1 174 7 is_stmt 0 view .LVU212
 685 0040 06A8     		add	r0, sp, #24
 686 0042 FFF7FEFF 		bl	HAL_RCC_OscConfig
 687              	.LVL31:
 174:Core/Src/main.c ****   {
 688              		.loc 1 174 6 view .LVU213
 689 0046 90B9     		cbnz	r0, .L46
 181:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 690              		.loc 1 181 3 is_stmt 1 view .LVU214
 181:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 691              		.loc 1 181 31 is_stmt 0 view .LVU215
 692 0048 0F23     		movs	r3, #15
 693 004a 0193     		str	r3, [sp, #4]
 183:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 694              		.loc 1 183 3 is_stmt 1 view .LVU216
 183:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 695              		.loc 1 183 34 is_stmt 0 view .LVU217
 696 004c 0323     		movs	r3, #3
 697 004e 0293     		str	r3, [sp, #8]
 184:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 698              		.loc 1 184 3 is_stmt 1 view .LVU218
 184:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 699              		.loc 1 184 35 is_stmt 0 view .LVU219
 700 0050 0023     		movs	r3, #0
 701 0052 0393     		str	r3, [sp, #12]
 185:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
ARM GAS  /tmp/ccewbfMl.s 			page 27


 702              		.loc 1 185 3 is_stmt 1 view .LVU220
 185:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 703              		.loc 1 185 36 is_stmt 0 view .LVU221
 704 0054 0493     		str	r3, [sp, #16]
 186:Core/Src/main.c **** 
 705              		.loc 1 186 3 is_stmt 1 view .LVU222
 186:Core/Src/main.c **** 
 706              		.loc 1 186 36 is_stmt 0 view .LVU223
 707 0056 0593     		str	r3, [sp, #20]
 188:Core/Src/main.c ****   {
 708              		.loc 1 188 3 is_stmt 1 view .LVU224
 188:Core/Src/main.c ****   {
 709              		.loc 1 188 7 is_stmt 0 view .LVU225
 710 0058 0421     		movs	r1, #4
 711 005a 0DEB0100 		add	r0, sp, r1
 712 005e FFF7FEFF 		bl	HAL_RCC_ClockConfig
 713              	.LVL32:
 188:Core/Src/main.c ****   {
 714              		.loc 1 188 6 view .LVU226
 715 0062 30B9     		cbnz	r0, .L47
 192:Core/Src/main.c **** 
 716              		.loc 1 192 1 view .LVU227
 717 0064 19B0     		add	sp, sp, #100
 718              	.LCFI9:
 719              		.cfi_remember_state
 720              		.cfi_def_cfa_offset 4
 721              		@ sp needed
 722 0066 5DF804FB 		ldr	pc, [sp], #4
 723              	.L45:
 724              	.LCFI10:
 725              		.cfi_restore_state
 159:Core/Src/main.c ****   }
 726              		.loc 1 159 5 is_stmt 1 view .LVU228
 727 006a FFF7FEFF 		bl	Error_Handler
 728              	.LVL33:
 729              	.L46:
 176:Core/Src/main.c ****   }
 730              		.loc 1 176 5 view .LVU229
 731 006e FFF7FEFF 		bl	Error_Handler
 732              	.LVL34:
 733              	.L47:
 190:Core/Src/main.c ****   }
 734              		.loc 1 190 5 view .LVU230
 735 0072 FFF7FEFF 		bl	Error_Handler
 736              	.LVL35:
 737              		.cfi_endproc
 738              	.LFE158:
 740              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 741              		.align	2
 742              	.LC0:
 743 0000 0D0A5374 		.ascii	"\015\012Start !\015\000"
 743      61727420 
 743      210D00
 744 000b 00       		.align	2
 745              	.LC1:
 746 000c 48656C6C 		.ascii	"Hello World!\015\000"
 746      6F20576F 
ARM GAS  /tmp/ccewbfMl.s 			page 28


 746      726C6421 
 746      0D00
 747              		.section	.text.main,"ax",%progbits
 748              		.align	1
 749              		.global	main
 750              		.syntax unified
 751              		.thumb
 752              		.thumb_func
 754              	main:
 755              	.LFB157:
  96:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 756              		.loc 1 96 1 view -0
 757              		.cfi_startproc
 758              		@ Volatile: function does not return.
 759              		@ args = 0, pretend = 0, frame = 0
 760              		@ frame_needed = 0, uses_anonymous_args = 0
 761 0000 08B5     		push	{r3, lr}
 762              	.LCFI11:
 763              		.cfi_def_cfa_offset 8
 764              		.cfi_offset 3, -8
 765              		.cfi_offset 14, -4
 104:Core/Src/main.c **** 
 766              		.loc 1 104 3 view .LVU232
 767 0002 FFF7FEFF 		bl	HAL_Init
 768              	.LVL36:
 111:Core/Src/main.c **** 
 769              		.loc 1 111 3 view .LVU233
 770 0006 FFF7FEFF 		bl	SystemClock_Config
 771              	.LVL37:
 118:Core/Src/main.c ****   MX_I2C1_Init();
 772              		.loc 1 118 3 view .LVU234
 773 000a FFF7FEFF 		bl	MX_GPIO_Init
 774              	.LVL38:
 119:Core/Src/main.c ****   MX_I2C2_Init();
 775              		.loc 1 119 3 view .LVU235
 776 000e FFF7FEFF 		bl	MX_I2C1_Init
 777              	.LVL39:
 120:Core/Src/main.c ****   // MX_USART3_UART_Init();
 778              		.loc 1 120 3 view .LVU236
 779 0012 FFF7FEFF 		bl	MX_I2C2_Init
 780              	.LVL40:
 122:Core/Src/main.c ****   MX_ICACHE_Init();
 781              		.loc 1 122 3 view .LVU237
 782 0016 FFF7FEFF 		bl	MX_USB_Device_Init
 783              	.LVL41:
 123:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 784              		.loc 1 123 3 view .LVU238
 785 001a FFF7FEFF 		bl	MX_ICACHE_Init
 786              	.LVL42:
 125:Core/Src/main.c ****   /* USER CODE END 2 */
 787              		.loc 1 125 3 view .LVU239
 788 001e 4FF4FA60 		mov	r0, #2000
 789 0022 FFF7FEFF 		bl	HAL_Delay
 790              	.LVL43:
 128:Core/Src/main.c **** 
 791              		.loc 1 128 3 view .LVU240
 792 0026 0648     		ldr	r0, .L51
ARM GAS  /tmp/ccewbfMl.s 			page 29


 793 0028 FFF7FEFF 		bl	puts
 794              	.LVL44:
 130:Core/Src/main.c **** 
 795              		.loc 1 130 3 view .LVU241
 796 002c FFF7FEFF 		bl	shell_start
 797              	.LVL45:
 798              	.L49:
 134:Core/Src/main.c ****   {
 799              		.loc 1 134 3 discriminator 1 view .LVU242
 140:Core/Src/main.c ****     HAL_Delay(1000);
 800              		.loc 1 140 5 discriminator 1 view .LVU243
 801 0030 0448     		ldr	r0, .L51+4
 802 0032 FFF7FEFF 		bl	puts
 803              	.LVL46:
 141:Core/Src/main.c ****   }
 804              		.loc 1 141 5 discriminator 1 view .LVU244
 805 0036 4FF47A70 		mov	r0, #1000
 806 003a FFF7FEFF 		bl	HAL_Delay
 807              	.LVL47:
 134:Core/Src/main.c ****   {
 808              		.loc 1 134 9 discriminator 1 view .LVU245
 809 003e F7E7     		b	.L49
 810              	.L52:
 811              		.align	2
 812              	.L51:
 813 0040 00000000 		.word	.LC0
 814 0044 0C000000 		.word	.LC1
 815              		.cfi_endproc
 816              	.LFE157:
 818              		.section	.bss.rc.0,"aw",%nobits
 821              	rc.0:
 822 0000 00       		.space	1
 823              		.global	huart3
 824              		.section	.bss.huart3,"aw",%nobits
 825              		.align	2
 828              	huart3:
 829 0000 00000000 		.space	148
 829      00000000 
 829      00000000 
 829      00000000 
 829      00000000 
 830              		.global	hi2c2
 831              		.section	.bss.hi2c2,"aw",%nobits
 832              		.align	2
 835              	hi2c2:
 836 0000 00000000 		.space	84
 836      00000000 
 836      00000000 
 836      00000000 
 836      00000000 
 837              		.global	hi2c1
 838              		.section	.bss.hi2c1,"aw",%nobits
 839              		.align	2
 842              	hi2c1:
 843 0000 00000000 		.space	84
 843      00000000 
 843      00000000 
ARM GAS  /tmp/ccewbfMl.s 			page 30


 843      00000000 
 843      00000000 
 844              		.text
 845              	.Letext0:
 846              		.file 3 "/home/yul/toolchain/arm-gnu-toolchain-12.2.rel1-x86_64-arm-none-eabi/arm-none-eabi/includ
 847              		.file 4 "/home/yul/toolchain/arm-gnu-toolchain-12.2.rel1-x86_64-arm-none-eabi/arm-none-eabi/includ
 848              		.file 5 "Drivers/CMSIS/Device/ST/STM32L5xx/Include/stm32l562xx.h"
 849              		.file 6 "Drivers/STM32L5xx_HAL_Driver/Inc/stm32l5xx_hal_def.h"
 850              		.file 7 "Drivers/STM32L5xx_HAL_Driver/Inc/stm32l5xx_hal_rcc.h"
 851              		.file 8 "Drivers/STM32L5xx_HAL_Driver/Inc/stm32l5xx_hal_gpio.h"
 852              		.file 9 "Drivers/STM32L5xx_HAL_Driver/Inc/stm32l5xx_hal_dma.h"
 853              		.file 10 "Drivers/STM32L5xx_HAL_Driver/Inc/stm32l5xx_hal_i2c.h"
 854              		.file 11 "Drivers/STM32L5xx_HAL_Driver/Inc/stm32l5xx_hal_uart.h"
 855              		.file 12 "Middlewares/ST/STM32_USB_Device_Library/Core/Inc/usbd_def.h"
 856              		.file 13 "Drivers/STM32L5xx_HAL_Driver/Inc/stm32l5xx_hal_pwr_ex.h"
 857              		.file 14 "Drivers/STM32L5xx_HAL_Driver/Inc/stm32l5xx_hal_icache.h"
 858              		.file 15 "Drivers/STM32L5xx_HAL_Driver/Inc/stm32l5xx_hal_i2c_ex.h"
 859              		.file 16 "Drivers/STM32L5xx_HAL_Driver/Inc/stm32l5xx_hal.h"
 860              		.file 17 "Core/Inc/shell.h"
 861              		.file 18 "USB_Device/App/usb_device.h"
 862              		.file 19 "USB_Device/App/usbd_cdc_if.h"
 863              		.file 20 "<built-in>"
ARM GAS  /tmp/ccewbfMl.s 			page 31


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccewbfMl.s:22     .text.MX_GPIO_Init:0000000000000000 $t
     /tmp/ccewbfMl.s:27     .text.MX_GPIO_Init:0000000000000000 MX_GPIO_Init
     /tmp/ccewbfMl.s:268    .text.MX_GPIO_Init:000000000000010c $d
     /tmp/ccewbfMl.s:278    .text._write:0000000000000000 $t
     /tmp/ccewbfMl.s:284    .text._write:0000000000000000 _write
     /tmp/ccewbfMl.s:334    .text._write:0000000000000024 $d
     /tmp/ccewbfMl.s:821    .bss.rc.0:0000000000000000 rc.0
     /tmp/ccewbfMl.s:339    .text.Error_Handler:0000000000000000 $t
     /tmp/ccewbfMl.s:345    .text.Error_Handler:0000000000000000 Error_Handler
     /tmp/ccewbfMl.s:377    .text.MX_I2C1_Init:0000000000000000 $t
     /tmp/ccewbfMl.s:382    .text.MX_I2C1_Init:0000000000000000 MX_I2C1_Init
     /tmp/ccewbfMl.s:466    .text.MX_I2C1_Init:0000000000000050 $d
     /tmp/ccewbfMl.s:842    .bss.hi2c1:0000000000000000 hi2c1
     /tmp/ccewbfMl.s:472    .text.MX_I2C2_Init:0000000000000000 $t
     /tmp/ccewbfMl.s:477    .text.MX_I2C2_Init:0000000000000000 MX_I2C2_Init
     /tmp/ccewbfMl.s:561    .text.MX_I2C2_Init:0000000000000050 $d
     /tmp/ccewbfMl.s:835    .bss.hi2c2:0000000000000000 hi2c2
     /tmp/ccewbfMl.s:567    .text.MX_ICACHE_Init:0000000000000000 $t
     /tmp/ccewbfMl.s:572    .text.MX_ICACHE_Init:0000000000000000 MX_ICACHE_Init
     /tmp/ccewbfMl.s:610    .text.SystemClock_Config:0000000000000000 $t
     /tmp/ccewbfMl.s:616    .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/ccewbfMl.s:741    .rodata.main.str1.4:0000000000000000 $d
     /tmp/ccewbfMl.s:748    .text.main:0000000000000000 $t
     /tmp/ccewbfMl.s:754    .text.main:0000000000000000 main
     /tmp/ccewbfMl.s:813    .text.main:0000000000000040 $d
     /tmp/ccewbfMl.s:822    .bss.rc.0:0000000000000000 $d
     /tmp/ccewbfMl.s:828    .bss.huart3:0000000000000000 huart3
     /tmp/ccewbfMl.s:825    .bss.huart3:0000000000000000 $d
     /tmp/ccewbfMl.s:832    .bss.hi2c2:0000000000000000 $d
     /tmp/ccewbfMl.s:839    .bss.hi2c1:0000000000000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
CDC_Transmit_FS
HAL_I2C_Init
HAL_I2CEx_ConfigAnalogFilter
HAL_I2CEx_ConfigDigitalFilter
HAL_ICACHE_ConfigAssociativityMode
HAL_ICACHE_Enable
memset
HAL_PWREx_ControlVoltageScaling
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
MX_USB_Device_Init
HAL_Delay
puts
shell_start
